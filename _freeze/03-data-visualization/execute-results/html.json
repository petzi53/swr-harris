{
  "hash": "a066896cee6b66ff67eefdae1f3ab6ba",
  "result": {
    "engine": "knitr",
    "markdown": "# Data visualization {#sec-chap03}\n\n\n\n\n\n## Achievements to unlock\n\n::: my-objectives\n::: my-objectives-header\nObjectives\n:::\n\n::: my-objectives-container\n**SwR Achievements**\n\n-   **Achievement 1**: Choosing and creating graphs for a single\n    categorical variable (@sec-chap03-achievement-1)\n-   **Achievement 2**: Choosing and creating graphs for a single\n    continuous variable (@sec-chap03-achievement-2)\n-   **Achievement 3**: Choosing and creating graphs for two variables at\n    once (@sec-chap03-achievement-3)\n-   **Achievement 4**: Ensuring graphs are well-formatted\n:::\n:::\n\n## Gun violence in the US\n\n1.  Research about gun violence in under developed. Harris refers to an\n    article by Stark & Shah [-@stark2017] (Figure 1 and 2).\n\n2.  Data for figure 3 (Homicides in the US by guns 2012-2016) comes from\n    the [Uniform Crime Reporting (UCR)](fbi.gov/services/cjis/ucr):\n\n    > The Uniform Crime Reporting (UCR) Program generates reliable\n    > statistics for use in law enforcement. It also provides\n    > information for students of criminal justice, researchers, the\n    > media, and the public. The program has been providing crime\n    > statistics since 1930.\n\n    > The UCR Program includes data from more than 18,000 city,\n    > university and college, county, state, tribal, and federal law\n    > enforcement agencies. Agencies participate voluntarily and submit\n    > their crime data either through a state UCR program or directly to\n    > the FBI's UCR Program.\n\n3.  Figure 4: Handguns were the most widely used type of gun for\n    homicide in 2016.\n\n4.  Gun manufacturers play an essential role: Figure 5 and 6.\n\n## Resources & Chapter Outline\n\n### Data, codebook, and R packages {#sec-data-codebook-packages}\n\n::: my-resource\n::: my-resource-header\nData, codebook, and R packages for data visualization\n:::\n\n::: my-resource-container\n**Data**\n\nThere are two options:\n\n1.  Download the three data files from\n    <https://edge.sagepub.com/harris1e>\n    -   nhanes_2011_2012_ch3.csv\n    -   fbi_deaths_2016_ch3.csv\n    -   gun_publications_funds_2004_2015_ch3.csv\n2.  Download\n    -   the raw data directly from the Internet for the FBI deaths data\n    -   the <a class='glossary' title='The National Health and Nutrition Examination Survey (NHANES) is a program of studies designed to assess the health and nutritional status of adults and children in the United States. The survey is unique in that it combines interviews and physical examinations. (NHANES)'>NHANES</a> data by following the instructions in\n        Box 3.1\n    -   the gun_publications_funds_2004_2015_ch3.csv from\n        <https://edge.sagepub.com/harris1e>\n\nI will only work with the second option.\n\n:::::{.my-note}\n:::{.my-note-header}\nManufactured firearms data not mentioned\n:::\n::::{.my-note-container}\nHarris provides the \"total_firearms_manufactured_US_1990to2015.csv\" file with firearm production in the US from 1990-2015 but did not mention the source. I have looked around on the web and reported the results of my research in @sec-gun-production.\n::::\n:::::\n\n\n\n**Codebook**\n\nAgain there are two options:\n\n1.  Download from <https://edge.sagepub.com/harris1e>\n    -   nhanes_demographics_2012_codebook.html\n    -   nhanes_auditory_2012_codebook.html\n2.  Access the codebooks online on the National Health and Nutrition\n    Examination Survey [(NHANES)\n    website](https://wwwn.cdc.gov/nchs/nhanes/Search/DataPage.aspx?Component=Questionnaire&CycleBeginYear=2011)\n\nI will only work with the second option.\n\n**Packages**\n\n1.  Packages used with the book (sorted alphabetically)\n\n-   {**data.table**}: @pak-data-table (Tyson Barrett)\n-   {**ggmosaic**}: @pak-ggmosaic (Haley Jeppson)\n-   {**ggrepel**}: @pak-ggrepel (Kamil Slowikowski)\n-   {**gridExtra**}: @pak-gridExtra (Baptiste Auguie)\n-   ~~{**httr2**}: @pak-httr2 (Hadley Wickham)~~\n-   {**readxl**}: @pak-readxl (Jennifer Bryan)\n-   {**RNHANES**}: @pak-RNHANES (Herb Susmann)\n-   {**scales**}: @pak-scales (Hadley Wickham)\n-   {**tidyverse**}: @pak-tidyverse (Hadley Wickham)\n-   {**waffle**}: @pak-waffle (Bob Rudis)\n-   {**withr**}: @pak-withr (Lionel Henry)\n\n:::::{.my-note}\n:::{.my-note-header}\nInstead of downloading the file with {**httr**} I will use\n`utils::download.file()`\n:::\n::::{.my-note-container}\nHarris lists the older {**httr**} package, but now there is {**httr2**},\n\"a modern re-imagining of {**httr**} that uses a pipe-based interface\nand solves more of the problems that <a class='glossary' title='An API, or application programming interface, is a set of defined rules that enable different applications to communicate with each other. It acts as an intermediary layer that processes data transfers between systems, letting companies open their application data and functionality to external third-party developers, business partners, and internal departments within their companies. (IBM)'>API</a> wrapping\npackages face.\" (See @pak-httr2)\n\nThe {**httr**} package is in the book just used for downloading the\nexcel file from the FBI website. For this specific task there is no need\nto download, to install and to learn a new package. You can use\n`utils::download.file()`, a function as I have it already applied\nsuccessfully in @lst-chap02-get-brfss-2014-data.\n::::\n:::::\n\n\n2.  My additional packages (sorted alphabetically)\n\n-   {**colorblindcheck**}: @pak-colorblindcheck (Jakub Nowosad)\n-   {**colorblindr**}: @pak-colorblindr (Claus O. Wilke)\n-   {**colorspace**}: @pak-colorspace (Achim Zeileis)\n-   {**cowplot**}: @pak-cowplot (Claus O. Wilke)\n-   {**curl**}: @pak-curl (Jeroen Ooms)\n-   {**dichromat**}: @pak-dichromat (Thomas Lumley)\n-   {**ggtext**}: @pak-ggtext (Claus O. Wilke)\n-   {**janitor**}: @pak-janitor (Sam Firke)\n-   {**paletteer**}: @pak-paletteer (Emil Hvitfeldt)\n-   {**patchwork**}: @pak-patchwork (Thomas Lin Pedersen)\n-   {**ggokabeito**}: @pak-ggokabeito (Malcolm Barrett)\n-   {**gplots**}: @pak-gplots (Tal Galili)\n-   {**scico**}: @pak-scico (Thomas Lin Pedersen)\n-   {**vcd**}: @pak-vcd (David Mayer)\n-   {**vcdExtra**}: @pak-vcdExtra (Michael Friendly)\n-   {**viridis**}: @pak-viridis (Simon Garnier)\n:::\n:::\n\n### Get data\n\n#### Gun production {#sec-gun-production}\n\nThere are different sources of data for this chapter. A special case are the data provided by Harris about guns manufactured in the US between 1990 and 2015. There is no source available because this dataset was not mentioned in the section about \"Data, codebook, and R packages\" (see: @sec-data-codebook-packages). But a Google searched revealed several interesting possible sources:\n\n- **[ATF](https://www.atf.gov/)**: The original data are generated and published by the [Bureau of Alcohol, Tobacco, Firearms and Explosives](https://www.atf.gov/resource-center/data-statistics) (<a class='glossary' title='Bureau of Alcohol, Tobacco, Firearms and Explosives (ATF): ATF’s responsibilities include the investigation and prevention of federal offenses involving the unlawful use, manufacture, and possession of firearms and explosives; acts of arson and bombings; and illegal trafficking of alcohol and tobacco products. The ATF also regulates, via licensing, the sale, possession, and transportation of firearms, ammunition, and explosives in interstate commerce. (ATF)'>ATF</a>). Scrolling down you will find the header \"Annual Firearms Manufacturers And Export Report\" (AFMER). But the data are separated by year and only available as a summarized PDF fact sheet. But finally I found in a downloaded `.csv` file from [USAFacts](https://usafacts.org/) a reference to a [PDF file where all the data I am interesting in are listed](https://www.atf.gov/firearms/docs/report/2019-firearms-commerce-report/download). To the best of my knowledge there are no better accessible data on the ATF website.  \n- **[Statista](https://www.statista.com/)**: With a free account of <a class='glossary' title='Statista is a global data and business intelligence platform with an extensive collection of statistics, reports, and insights on over 80,000 topics from 22,500 sources in 170 industries. Established in Germany in 2007, Statista operates in 13 locations worldwide and employs around 1,100 professionals. (statista)'>statista</a> it is possible to download [Number of firearms manufactured in the United States from 1986 to 2021](https://www.statista.com/statistics/215395/number-of-total-firearms-manufactured-in-the-us/). But here we are missing the detailed breakdown by type of firearms. Another restriction is that the publication of the data are only allowed if you have a professional or enterprise account, starting with € 199,- per month.\n- **[The Trace](https://www.thetrace.org/)**: Another option is to download the collected data by [The Trace](https://www.thetrace.org/2023/03/guns-america-data-atf-total/), an American non-profit journalism outlet devoted to gun-related news in the United States ([Wikipeda](https://en.wikipedia.org/wiki/The_Trace_(website))). The quoted article is referring to a [google spreadsheet](https://docs.google.com/spreadsheets/u/1/d/e/2PACX-1vShiwPP36HrjUyPztuIhoYjR3Xd3uhlQivMC3wPSNq1UCjVbj2wsPZIISqOtFQ0NbVVwwKBzyrDNuCz/pubhtml#) where you can access the collected data for the US gun production from 1899 (!) until today.\n- **[USAFacts](https://usafacts.org/)**: Finally I found the [data I was looking for](https://usafacts.org/data/topics/security-safety/crime-and-justice/firearms/firearms-manufactured/) in a easy accessible format to download on the website of USAFacts.org, a not-for-profit organization and website that provides data and reports on the United States population, its government's finances, and government's impact on society.([Wikipedia](https://en.wikipedia.org/wiki/USAFacts)). The data range from 1986 to 2019 and they are based on the original ATF data from the PDF report. They are higher than the data provided by Harris because the include exports. The AFMER report excludes production for the U.S. military but includes  also firearms purchased by domestic law enforcement agencies.\n\nBut even if you have data of manufactured, exported and imported guns, this does not provide the exact numbers of guns circulating in the US:\n\n> Although a few data points are consistently collected, there is a clear lack of data on firearms in the US. It is impossible, for instance, to know the total number of firearms owned in the United States, or how many guns were bought in the past year, or what the most commonly owned firearms are. Instead, Americans are left to draw limited conclusions from available data, such as the number of firearms processed by the National Firearm Administration (NFA), the number of background checks conducted for firearm purchase, and the number of firearms manufactured. However, none of these metrics provide a complete picture because state laws about background checks and gun registration differ widely. ([USAFact.org](https://usafacts.org/articles/2020-has-been-record-setting-year-background-checks-other-firearm-data-incomplete/))\n\n:::{#not-chap03-circulated-guns-us}\n:::::{.my-note}\n:::{.my-note-header}\nUsing USAFacts data includes gun exports\n:::\n::::{.my-note-container}\nIf you are interested to research the relationship between gun ownership in the USA and homicides then you would need to reflect how to get a better approximation as the yearly manufactured guns. Besides that not all gun manufacturer have reported their production numbers to the ATF, there is a big difference between gun production and gun sales. Additionally there are some other issues that influence the number of circulated guns in the US. So you have to take into account for instance\n\n- the export and import of guns, \n- that guns fall out of circulation because of broken part, attrition, or illegal exports\n\nAs an exercise I have subtracted from the manufactured gun the exported guns and have added the imported firearms. You will find the result in @lst-chap03-guns-total.\n::::\n:::::\n\nHow to calculate the numbers of circulated guns in the US\n:::\n\n\n\n\n\n#### Three steps procedure\n\nTo get the data for this chapter is a three step procedure:\n\n::: my-procedure\n::: my-procedure-header\n::: {#prp-chap03-get-internet-data}\n: How to get data from the internet\n:::\n:::\n\n::: my-procedure-container\n1.  My first step is always to go to the website and download the file\n    manually. Some people may believe that this is superfluous, but I\n    think there are three advantages for this preparatory task:\n    -   Inspecting the website and checking if the URL is valid and\n        points to the correct dataset.\n    -   Checking the file extension\n    -   Inspecting the file after downloaded to see if there is\n        something to care about (e.g., the file starts with several\n        lines, that are not data, or other issues).\n2.  Download the file using `utils::donwload.file()`.\n3.  Read the imported file into R with the appropriate program function,\n    in the first case `readxl::read_excel()`\n:::\n:::\n\n\n#### Get & save data\n\n::: my-example\n::: my-example-header\n::: {#exm-chap03-get-data}\n: Get data for chapter 3\n:::\n:::\n\n::: my-example-container\n::: panel-tabset\n###### FBI\n\n::: my-r-code\n::: my-r-code-header\n::: {#cnj-chap03-get-fbi-data}\n: Get data from the FBI’s Uniform Crime Reporting database\n:::\n:::\n\n::: my-r-code-container\n::: {#lst-chap03-get-fbi-data}\n\n::: {.cell}\n\n```{.r .cell-code}\n## run only once (manually)\n# create a variable that contains the web\n# URL for the data set\nurl1 <- base::paste0(\"https://ucr.fbi.gov/crime-in-the-u.s\",\n                     \"/2016/crime-in-the-u.s.-2016/tables/\",\n                     \"expanded-homicide-data-table-4.xls/output.xls\")\n\n## code worked in the console\n## but did not work when rendered in quarto\n# utils::download.file(url = url1,\n#                      destfile = paste0(here::here(),\n#                                        \"/data/chap03/fbi_deaths.xls\"),\n#                      method = \"libcurl\",\n#                      mode = \"wb\"\n# )\n\n## the following code line worked but I used {**curl**}\n# httr::GET(url = url1, \n#           httr::write_disk(\n#               path = base::paste0(here::here(),\n#                     \"/data/chap03/fbi_deaths.xls\",\n#               overwrite = TRUE)\n#               )\n#         )\n\ncurl::curl_download(url = url1,\n                     destfile = paste0(here::here(),\n                                       \"/data/chap03/fbi_deaths.xls\"),\n                     quiet = TRUE,\n                     mode = \"wb\"\n)\n\nfbi_deaths <- tibble::tibble(\n     readxl::read_excel(path = paste0(here::here(), \n                                      \"/data/chap03/fbi_deaths.xls\"),\n                        sheet = 1,\n                        skip = 3,\n                        n_max = 18))\n\nsave_data_file(\"chap03\", fbi_deaths, \"fbi_deaths.rds\")\n```\n:::\n\n\nGet data from the FBI’s Uniform Crime Reporting database\n:::\n\n------------------------------------------------------------------------\n(*For this R code chunk is no output available, but you can inspect the data at @lst-chap03-show-fbi-data.*)\n\n***\n\nIn changed the recommended R code by Harris for downloading the FBI\nExcel Data I in several ways:\n\n1.  Instead of of using {**httr**}, I tried first with `utils::download.file()`. This worked in the console (compiling the R code chunk), but did not work when rendered with Quarto. I changed to {**curl**} and used the `curl_download()` function which worked in both situations (see: @pak-curl).\n2.  Instead creating a data frame with `base::data.frame()` I used a\n    `tibble::tibble()`. This has the advantage that the column names\n    were not changed. In the original files the column names are years,\n    but in base R is not allowed that column names start with a number.\n    In tidyverse this is possible but you must refer to this column\n    names with enclosed accents like `2016`.\n3.  Instead of saving the data as an Excel file I think that it is more\n    convenient to store it as an R object with the extension \".rds\". (I\n    believe that Harris saved it in the book only to get the same\n    starting condition with the already downloaded file in the books\n    companion web site.)\n:::\n:::\n\n###### NHANES 2012\n\n::: my-r-code\n::: my-r-code-header\n::: {#cnj-chap03-get-NHANES-2012-data}\n: Get NHANES data 2011-2012 from the CDC website with {RNHANES}\n:::\n:::\n\n::: my-r-code-container\n::: {#lst-chap03-get-NHANES-2012-data}\n\n::: {.cell}\n\n```{.r .cell-code}\n## run only once (manually)\n# download audiology data (AUQ_G)\n# with demographics\nnhanes_2012 <- \n    RNHANES::nhanes_load_data(\n        file_name = \"AUQ_G\", \n        year = \"2011-2012\",\n        demographics = TRUE)\n\nsave_data_file(\"chap03\", nhanes_2012, \"nhanes_2012.rds\")\n```\n:::\n\n\nGet NHANES data (2011-2012) from the CDC website with {RNHANES}\n:::\n\n***\n\n(*For this R code chunk is no output available, but you can inspect the data at @lst-chap03-show-NHANES-2012-data*)\n\n***\n\n:::\n:::\n\n{RNHANES} combines as a package specialized to download data from the\nNational Health and Nutrition Examination Survey (NHANES) step 2 and 3\nof @prp-chap03-get-internet-data. But as it turned out it only doesn't\nwork with newer audiology data than 2012. I tried to use the package\nwith data from 2016 and 2018 (For 2014 there are no audiology data\navailable), but I got an error message.\n\n> Error in validate_year(year) : Invalid year: 2017-2018\n\nThe problem lies in the function `RNHANES:::validate_year()`. It\nqualifies in version 1.1.0 only downloads until '2013-2014' as valid:\n\n------------------------------------------------------------------------\n\n```         \nfunction (year, throw_error = TRUE) \n{\n    if (length(year) > 1) {\n        Map(validate_year, year, throw_error = throw_error) %>% \n            unlist() %>% unname() %>% return()\n    }\n    else {\n        valid <- switch(as.character(year), `1999-2000` = TRUE, \n            `2001-2002` = TRUE, `2003-2004` = TRUE, `2005-2006` = TRUE, \n            `2007-2008` = TRUE, `2009-2010` = TRUE, `2011-2012` = TRUE, \n            `2013-2014` = TRUE, FALSE)\n        if (throw_error == TRUE && valid == FALSE) {\n            stop(paste0(\"Invalid year: \", year))\n        }\n        return(valid)\n    }\n}\n```\n\n------------------------------------------------------------------------\n\n**Conclusion**: Special data packages can facilitate your work, but to\nknow how to download data programmatically on your own is an\nindispensable data science skill.\n\nSee tab \"NHANES 2018\" how this is done.\n\n###### NHANES 2018\n\n::: my-r-code\n::: my-r-code-header\n::: {#cnj-chap03-get-NHANES-2018-data}\n: Get NHANES data 2017-2018 from the CDC website with {haven}\n:::\n:::\n\n::: my-r-code-container\n::: {#lst-chap03-get-NHANES-2018-data}\n\n::: {.cell}\n\n```{.r .cell-code}\n## run only once (manually)\n# download audiology data (AUQ_J)\nnhanes_2018 <- haven::read_xpt(\n    file = \"https://wwwn.cdc.gov/Nchs/Nhanes/2017-2018/AUQ_J.XPT\"\n)\n\nsave_data_file(\"chap03\", nhanes_2018, \"nhanes_2018.rds\")\n```\n:::\n\n\nGet NHANES data 2017-2018 from the CDC website with {haven}\n:::\n\n***\n\n(*For this R code chunk is no output available, but you can inspect the data at @lst-chap03-show-NHANES-2018-data.*)\n\n:::\n:::\n\nThe download with {**haven**} has the additional advantage that the\nvariables are labelled as already explained in\n@sec-chap01-labelled-data.\n\n###### Research funding\n\n::: my-r-code\n::: my-r-code-header\n::: {#cnj-chap03-get-research-funding}\n: Research funding for different kind of research topics (2004-2015)\n:::\n:::\n\n::: my-r-code-container\n\n::: {.cell}\n\n```{.r .cell-code}\nresearch_funding <- readr::read_csv(\n    \"data/chap03/gun_publications_funds_2004_2015_ch3.csv\",\n    show_col_types = FALSE)\n\nsave_data_file(\"chap03\", research_funding, \"research_funding.rds\")\n```\n:::\n\n***\n\n(*For this R code chunk is no output available, but you can inspect the data at @lst-chap03-show-research-funding.*)\n\n***\n\n:::\n:::\n\n###### Guns manufactured\n\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-get-guns-manufactured}\n: Get guns manufactured 1986-2019 from USAFacts.org\n::::::\n:::\n::::{.my-r-code-container}\n\n::: {.cell}\n\n```{.r .cell-code}\nguns_manufactured_2019 <-  readr::read_csv(\n    \"https://a.usafacts.org/api/v4/Metrics/csv/16185?&_ga=2.61283563.611609354.1708598369-436724430.1708598369\", show_col_types = FALSE\n)\n\nsave_data_file(\"chap03\", guns_manufactured_2019, \"guns_manufactured_2019.rds\")\n```\n:::\n\n\n***\n\n(*For this R code chunk is no output available, but you can inspect the data at @lst-chap03-show-guns-manufactured-2019.*)\n\n***\n\n::::\n:::::\n\n###### Guns exported\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-get-guns-exported}\n: Get guns exported from a PDF report by the <a class='glossary' title='Bureau of Alcohol, Tobacco, Firearms and Explosives (ATF): ATF’s responsibilities include the investigation and prevention of federal offenses involving the unlawful use, manufacture, and possession of firearms and explosives; acts of arson and bombings; and illegal trafficking of alcohol and tobacco products. The ATF also regulates, via licensing, the sale, possession, and transportation of firearms, ammunition, and explosives in interstate commerce. (ATF)'>ATF</a>\n::::::\n:::\n::::{.my-r-code-container}\n\n::: {.cell}\n\n```{.r .cell-code}\nguns_export <- tabulizer::extract_tables(\n    \"data/chap03/firearms_commerce_2019.pdf\", \n    pages = 4\n    )\n\nguns_exported_2017 <- guns_export[[1]]\n\nsave_data_file(\"chap03\", guns_exported_2017, \"guns_exported_2017.rds\")\n```\n:::\n\n\n***\n\n(*For this R code chunk is no output available, but you can inspect the data at @lst-chap03-show-guns-exported-2017.*)\n\n***\n\n\nThere are several innovation applied in this R code chunk:\n\n    1. First of all I have used the {**tabulizer**} package to scrap the export and import data tables from the original <a class='glossary' title='Bureau of Alcohol, Tobacco, Firearms and Explosives (ATF): ATF’s responsibilities include the investigation and prevention of federal offenses involving the unlawful use, manufacture, and possession of firearms and explosives; acts of arson and bombings; and illegal trafficking of alcohol and tobacco products. The ATF also regulates, via licensing, the sale, possession, and transportation of firearms, ammunition, and explosives in interstate commerce. (ATF)'>ATF</a>-PDF. To make this procedure reproducible I have downloaded the [PDF from the ATF website](https://www.atf.gov/firearms/docs/report/2019-firearms-commerce-report/download) as I assume that this PDF will updated regularily. \n    \n    \n:::::{.my-watch-out}\n:::{.my-watch-out-header}\nWATCH OUT! Read carefully the installation instructions\n:::\n::::{.my-watch-out-container}\nPlease read carefully the [installation advices](https://docs.ropensci.org/tabulizer/) at the start of the page but --- even more important --- [Installing Java on Windows with Chocolatey](https://docs.ropensci.org/tabulizer/#installing-java-on-windows-with-chocolatey) if you working on a windows machine or generally the [Troubleshooting](https://docs.ropensci.org/tabulizer/#troubleshooting) section for macOs, Linux and Windows.\n::::\n:::::\n\nI have recoded the data in several ways:\n    - I turned the resulted matrices from the {**tabulizer**} package into tibbles.\n    - Now I could rename all the columns with one name vector.\n    - As the export data end with the year 2017 I had to reduce the import data ans also my original gun manufactured file to this shorter period.\n    \n\n::::\n:::::\n\n###### Guns imported\n\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-get-guns-imported}\n: Get and recode guns imported from a PDF by the <a class='glossary' title='Bureau of Alcohol, Tobacco, Firearms and Explosives (ATF): ATF’s responsibilities include the investigation and prevention of federal offenses involving the unlawful use, manufacture, and possession of firearms and explosives; acts of arson and bombings; and illegal trafficking of alcohol and tobacco products. The ATF also regulates, via licensing, the sale, possession, and transportation of firearms, ammunition, and explosives in interstate commerce. (ATF)'>ATF</a>\n::::::\n:::\n::::{.my-r-code-container}\n\n::: {.cell}\n\n```{.r .cell-code}\nguns_import <- tabulizer::extract_tables(\n    \"data/chap03/firearms_commerce_2019.pdf\", \n    pages = 6\n    )\n\nguns_imported_2018 <- guns_import[[1]]\n\nsave_data_file(\"chap03\", guns_imported_2018, \"guns_imported_2018.rds\")\n```\n:::\n\n\n***\n\n(*For this R code chunk is no output available. But you can inspect the data at @lst-chap03-show-guns-imported-2018.*)\n\n***\n\n::::\n:::::\n\n\n:::\n:::\n:::\n\n### Show raw data\n\n::: my-example\n::: my-example-header\n::: {#exm-chap03-show-data}\n: Show raw data for chapter 3\n:::\n:::\n\n::: my-example-container\n::: panel-tabset\n###### FBI\n\n::: my-r-code\n::: my-r-code-header\n::: {#cnj-chap03-show-fbi-data}\n: Show raw data from the FBI’s Uniform Crime Reporting database\n:::\n:::\n\n::: my-r-code-container\n::: {#lst-chap03-show-fbi-data}\n\n::: {.cell}\n\n```{.r .cell-code}\nfbi_deaths <- base::readRDS(\"data/chap03/fbi_deaths.rds\")\n\nutils::str(fbi_deaths)\nskimr::skim(fbi_deaths)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> tibble [18 × 6] (S3: tbl_df/tbl/data.frame)\n#>  $ Weapons: chr [1:18] \"Total\" \"Total firearms:\" \"Handguns\" \"Rifles\" ...\n#>  $ 2012   : num [1:18] 12888 8897 6404 298 310 ...\n#>  $ 2013   : num [1:18] 12253 8454 5782 285 308 ...\n#>  $ 2014   : num [1:18] 12270 8312 5673 258 264 ...\n#>  $ 2015   : num [1:18] 13750 9778 6569 258 272 ...\n#>  $ 2016   : num [1:18] 15070 11004 7105 374 262 ...\n```\n\n\n:::\n\n::: {.cell-output-display}\n\nTable: Data summary\n\n|                         |           |\n|:------------------------|:----------|\n|Name                     |fbi_deaths |\n|Number of rows           |18         |\n|Number of columns        |6          |\n|_______________________  |           |\n|Column type frequency:   |           |\n|character                |1          |\n|numeric                  |5          |\n|________________________ |           |\n|Group variables          |None       |\n\n\n**Variable type: character**\n\n|skim_variable | n_missing| complete_rate| min| max| empty| n_unique| whitespace|\n|:-------------|---------:|-------------:|---:|---:|-----:|--------:|----------:|\n|Weapons       |         0|             1|   4|  44|     0|       18|          0|\n\n\n**Variable type: numeric**\n\n|skim_variable | n_missing| complete_rate|    mean|      sd| p0|    p25|   p50|     p75|  p100|hist  |\n|:-------------|---------:|-------------:|-------:|-------:|--:|------:|-----:|-------:|-----:|:-----|\n|2012          |         0|             1| 1926.28| 3652.75|  8|  87.75| 304.0| 1403.50| 12888|▇▁▁▁▁ |\n|2013          |         0|             1| 1831.11| 3449.87|  2|  87.25| 296.5| 1330.00| 12253|▇▁▁▁▁ |\n|2014          |         0|             1| 1825.11| 3430.87|  7|  75.50| 261.0| 1414.25| 12270|▇▁▁▁▁ |\n|2015          |         0|             1| 2071.00| 3918.39|  1|  87.75| 265.0| 1410.00| 13750|▇▁▁▁▁ |\n|2016          |         0|             1| 2285.78| 4327.90|  1| 100.25| 318.0| 1428.75| 15070|▇▁▁▁▁ |\n\n\n:::\n:::\n\n\nShow raw data from the FBI’s Uniform Crime Reporting database\n:::\n\n\n:::\n:::\n\n###### NHANES 2012\n\n::: my-r-code\n::: my-r-code-header\n::: {#cnj-chap03-get-NHANES-2012-data}\n: Show raw NHANES data 2011-2012 from the CDC website with {RNHANES}\n:::\n:::\n\n::: my-r-code-container\n::: {#lst-chap03-show-NHANES-2012-data}\n\n::: {.cell}\n\n```{.r .cell-code}\nnhanes_2012 <- base::readRDS(\"data/chap03/nhanes_2012.rds\")\n\nutils::str(nhanes_2012)\nskimr::skim(nhanes_2012)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> 'data.frame':\t9364 obs. of  81 variables:\n#>  $ SEQN      : num  62161 62162 62163 62164 62165 ...\n#>  $ cycle     : chr  \"2011-2012\" \"2011-2012\" \"2011-2012\" \"2011-2012\" ...\n#>  $ SDDSRVYR  : num  7 7 7 7 7 7 7 7 7 7 ...\n#>  $ RIDSTATR  : num  2 2 2 2 2 2 2 2 2 2 ...\n#>  $ RIAGENDR  : num  1 2 1 2 2 1 1 1 1 1 ...\n#>  $ RIDAGEYR  : num  22 3 14 44 14 9 6 21 15 14 ...\n#>  $ RIDAGEMN  : num  NA NA NA NA NA NA NA NA NA NA ...\n#>  $ RIDRETH1  : num  3 1 5 3 4 3 5 5 5 1 ...\n#>  $ RIDRETH3  : num  3 1 6 3 4 3 7 6 7 1 ...\n#>  $ RIDEXMON  : num  2 1 2 1 2 2 1 1 1 1 ...\n#>  $ RIDEXAGY  : num  NA 3 14 NA 14 10 6 NA 15 14 ...\n#>  $ RIDEXAGM  : num  NA 41 177 NA 179 120 81 NA 181 175 ...\n#>  $ DMQMILIZ  : num  2 NA NA 1 NA NA NA 2 NA NA ...\n#>  $ DMQADFC   : num  NA NA NA 2 NA NA NA NA NA NA ...\n#>  $ DMDBORN4  : num  1 1 1 1 1 1 1 1 1 1 ...\n#>  $ DMDCITZN  : num  1 1 1 1 1 1 1 1 1 1 ...\n#>  $ DMDYRSUS  : num  NA NA NA NA NA NA NA NA NA NA ...\n#>  $ DMDEDUC3  : num  NA NA 8 NA 7 3 0 NA 9 7 ...\n#>  $ DMDEDUC2  : num  3 NA NA 4 NA NA NA 3 NA NA ...\n#>  $ DMDMARTL  : num  5 NA NA 1 NA NA NA 5 NA NA ...\n#>  $ RIDEXPRG  : num  NA NA NA 2 NA NA NA NA NA NA ...\n#>  $ SIALANG   : num  1 1 1 1 1 1 1 1 1 1 ...\n#>  $ SIAPROXY  : num  1 1 1 2 1 1 1 2 1 1 ...\n#>  $ SIAINTRP  : num  2 2 2 2 2 2 2 1 2 2 ...\n#>  $ FIALANG   : num  1 1 1 1 1 1 1 NA 1 2 ...\n#>  $ FIAPROXY  : num  2 2 2 2 2 2 2 NA 2 2 ...\n#>  $ FIAINTRP  : num  2 2 2 2 2 2 2 NA 2 2 ...\n#>  $ MIALANG   : num  1 NA 1 NA 1 1 NA 1 1 1 ...\n#>  $ MIAPROXY  : num  2 NA 2 NA 2 2 NA 2 2 2 ...\n#>  $ MIAINTRP  : num  2 NA 2 NA 2 2 NA 2 2 2 ...\n#>  $ AIALANGA  : num  1 NA 1 NA 1 NA NA 1 1 1 ...\n#>  $ WTINT2YR  : num  102641 15458 7398 127351 12210 ...\n#>  $ WTMEC2YR  : num  104237 16116 7869 127965 13384 ...\n#>  $ SDMVPSU   : num  1 3 3 1 2 1 2 1 3 3 ...\n#>  $ SDMVSTRA  : num  91 92 90 94 90 91 103 92 91 92 ...\n#>  $ INDHHIN2  : num  14 4 15 8 4 77 14 2 15 9 ...\n#>  $ INDFMIN2  : num  14 4 15 8 4 77 14 2 15 9 ...\n#>  $ INDFMPIR  : num  3.15 0.6 4.07 1.67 0.57 NA 3.48 0.33 5 2.46 ...\n#>  $ DMDHHSIZ  : num  5 6 5 5 5 6 5 5 4 4 ...\n#>  $ DMDFMSIZ  : num  5 6 5 5 5 6 5 5 4 4 ...\n#>  $ DMDHHSZA  : num  0 2 0 1 1 0 0 0 0 0 ...\n#>  $ DMDHHSZB  : num  1 2 2 2 2 4 2 1 2 2 ...\n#>  $ DMDHHSZE  : num  0 0 1 0 0 0 1 0 0 0 ...\n#>  $ DMDHRGND  : num  2 2 1 1 2 1 1 1 1 1 ...\n#>  $ DMDHRAGE  : num  50 24 42 52 33 44 43 51 38 43 ...\n#>  $ DMDHRBR4  : num  1 1 1 1 2 1 1 2 2 2 ...\n#>  $ DMDHREDU  : num  5 3 5 4 2 5 4 1 5 3 ...\n#>  $ DMDHRMAR  : num  1 6 1 1 77 1 1 4 1 1 ...\n#>  $ DMDHSEDU  : num  5 NA 4 4 NA 5 5 NA 5 4 ...\n#>  $ AUQ054    : num  2 1 2 1 2 1 1 2 2 2 ...\n#>  $ AUQ060    : num  1 NA NA NA NA NA NA 2 NA NA ...\n#>  $ AUQ070    : num  NA NA NA NA NA NA NA 1 NA NA ...\n#>  $ AUQ080    : num  NA NA NA NA NA NA NA NA NA NA ...\n#>  $ AUQ090    : num  NA NA NA NA NA NA NA NA NA NA ...\n#>  $ AUQ100    : num  5 NA NA 4 NA NA NA 4 NA NA ...\n#>  $ AUQ110    : num  5 NA NA 5 NA NA NA 4 NA NA ...\n#>  $ AUQ136    : num  1 NA NA 2 NA NA NA 2 NA NA ...\n#>  $ AUQ138    : num  1 NA NA 2 NA NA NA 2 NA NA ...\n#>  $ AUQ144    : num  4 NA NA 4 NA NA NA 2 NA NA ...\n#>  $ AUQ146    : num  2 NA NA 2 NA NA NA 2 NA NA ...\n#>  $ AUD148    : num  NA NA NA NA NA NA NA NA NA NA ...\n#>  $ AUQ152    : num  NA NA NA NA NA NA NA NA NA NA ...\n#>  $ AUQ154    : num  2 NA NA 2 NA NA NA 2 NA NA ...\n#>  $ AUQ191    : num  2 NA NA 1 NA NA NA 2 NA NA ...\n#>  $ AUQ250    : num  NA NA NA 5 NA NA NA NA NA NA ...\n#>  $ AUQ255    : num  NA NA NA 1 NA NA NA NA NA NA ...\n#>  $ AUQ260    : num  NA NA NA 2 NA NA NA NA NA NA ...\n#>  $ AUQ270    : num  NA NA NA 1 NA NA NA NA NA NA ...\n#>  $ AUQ280    : num  NA NA NA 1 NA NA NA NA NA NA ...\n#>  $ AUQ300    : num  2 NA NA 1 NA NA NA 2 NA NA ...\n#>  $ AUQ310    : num  NA NA NA 2 NA NA NA NA NA NA ...\n#>  $ AUQ320    : num  NA NA NA 1 NA NA NA NA NA NA ...\n#>  $ AUQ330    : num  2 NA NA 2 NA NA NA 2 NA NA ...\n#>  $ AUQ340    : num  NA NA NA NA NA NA NA NA NA NA ...\n#>  $ AUQ350    : num  NA NA NA NA NA NA NA NA NA NA ...\n#>  $ AUQ360    : num  NA NA NA NA NA NA NA NA NA NA ...\n#>  $ AUQ370    : num  2 NA NA 2 NA NA NA 2 NA NA ...\n#>  $ AUQ380    : num  1 NA NA 6 NA NA NA 5 NA NA ...\n#>  $ file_name : chr  \"AUQ_G\" \"AUQ_G\" \"AUQ_G\" \"AUQ_G\" ...\n#>  $ begin_year: num  2011 2011 2011 2011 2011 ...\n#>  $ end_year  : num  2012 2012 2012 2012 2012 ...\n```\n\n\n:::\n\n::: {.cell-output-display}\n\nTable: Data summary\n\n|                         |            |\n|:------------------------|:-----------|\n|Name                     |nhanes_2012 |\n|Number of rows           |9364        |\n|Number of columns        |81          |\n|_______________________  |            |\n|Column type frequency:   |            |\n|character                |2           |\n|numeric                  |79          |\n|________________________ |            |\n|Group variables          |None        |\n\n\n**Variable type: character**\n\n|skim_variable | n_missing| complete_rate| min| max| empty| n_unique| whitespace|\n|:-------------|---------:|-------------:|---:|---:|-----:|--------:|----------:|\n|cycle         |         0|             1|   9|   9|     0|        1|          0|\n|file_name     |         0|             1|   5|   5|     0|        1|          0|\n\n\n**Variable type: numeric**\n\n|skim_variable | n_missing| complete_rate|     mean|       sd|       p0|      p25|      p50|      p75|     p100|hist  |\n|:-------------|---------:|-------------:|--------:|--------:|--------:|--------:|--------:|--------:|--------:|:-----|\n|SEQN          |         0|          1.00| 67029.29|  2811.36| 62161.00| 64598.75| 67024.50| 69457.25|  71916.0|▇▇▇▇▇ |\n|SDDSRVYR      |         0|          1.00|     7.00|     0.00|     7.00|     7.00|     7.00|     7.00|      7.0|▁▁▇▁▁ |\n|RIDSTATR      |         0|          1.00|     1.96|     0.20|     1.00|     2.00|     2.00|     2.00|      2.0|▁▁▁▁▇ |\n|RIAGENDR      |         0|          1.00|     1.50|     0.50|     1.00|     1.00|     2.00|     2.00|      2.0|▇▁▁▁▇ |\n|RIDAGEYR      |         0|          1.00|    32.72|    24.22|     1.00|    11.00|    28.00|    53.00|     80.0|▇▅▃▃▃ |\n|RIDAGEMN      |      9130|          0.02|    17.94|     3.41|    12.00|    15.00|    18.00|    21.00|     24.0|▇▆▇▆▆ |\n|RIDRETH1      |         0|          1.00|     3.24|     1.25|     1.00|     3.00|     3.00|     4.00|      5.0|▃▃▇▇▅ |\n|RIDRETH3      |         0|          1.00|     3.45|     1.60|     1.00|     3.00|     3.00|     4.00|      7.0|▆▇▇▁▅ |\n|RIDEXMON      |       408|          0.96|     1.52|     0.50|     1.00|     1.00|     2.00|     2.00|      2.0|▇▁▁▁▇ |\n|RIDEXAGY      |      5946|          0.37|     9.64|     5.18|     2.00|     5.00|     9.00|    14.00|     20.0|▇▇▅▆▃ |\n|RIDEXAGM      |      5737|          0.39|   114.53|    64.66|    12.00|    57.00|   109.00|   167.00|    239.0|▇▇▇▅▅ |\n|DMQMILIZ      |      3357|          0.64|     1.91|     0.29|     1.00|     2.00|     2.00|     2.00|      2.0|▁▁▁▁▇ |\n|DMQADFC       |      8813|          0.06|     1.50|     0.59|     1.00|     1.00|     1.00|     2.00|      9.0|▇▁▁▁▁ |\n|DMDBORN4      |         0|          1.00|     1.27|     2.11|     1.00|     1.00|     1.00|     1.00|     99.0|▇▁▁▁▁ |\n|DMDCITZN      |         5|          1.00|     1.13|     0.44|     1.00|     1.00|     1.00|     1.00|      7.0|▇▁▁▁▁ |\n|DMDYRSUS      |      7292|          0.22|     7.44|    14.71|     1.00|     3.00|     5.00|     6.00|     99.0|▇▁▁▁▁ |\n|DMDEDUC3      |      6765|          0.28|     6.04|     6.13|     0.00|     2.00|     5.00|     9.00|     66.0|▇▁▁▁▁ |\n|DMDEDUC2      |      3804|          0.59|     3.47|     1.28|     1.00|     3.00|     4.00|     5.00|      9.0|▃▇▃▁▁ |\n|DMDMARTL      |      3804|          0.59|     2.75|     3.34|     1.00|     1.00|     2.00|     5.00|     99.0|▇▁▁▁▁ |\n|RIDEXPRG      |      8156|          0.13|     2.02|     0.34|     1.00|     2.00|     2.00|     2.00|      3.0|▁▁▇▁▁ |\n|SIALANG       |         0|          1.00|     1.12|     0.33|     1.00|     1.00|     1.00|     1.00|      2.0|▇▁▁▁▁ |\n|SIAPROXY      |         4|          1.00|     1.65|     0.48|     1.00|     1.00|     2.00|     2.00|      2.0|▅▁▁▁▇ |\n|SIAINTRP      |         0|          1.00|     1.96|     0.18|     1.00|     2.00|     2.00|     2.00|      2.0|▁▁▁▁▇ |\n|FIALANG       |        99|          0.99|     1.08|     0.27|     1.00|     1.00|     1.00|     1.00|      2.0|▇▁▁▁▁ |\n|FIAPROXY      |        99|          0.99|     2.00|     0.04|     1.00|     2.00|     2.00|     2.00|      2.0|▁▁▁▁▇ |\n|FIAINTRP      |        99|          0.99|     1.97|     0.17|     1.00|     2.00|     2.00|     2.00|      2.0|▁▁▁▁▇ |\n|MIALANG       |      2651|          0.72|     1.05|     0.22|     1.00|     1.00|     1.00|     1.00|      2.0|▇▁▁▁▁ |\n|MIAPROXY      |      2651|          0.72|     1.99|     0.08|     1.00|     2.00|     2.00|     2.00|      2.0|▁▁▁▁▇ |\n|MIAINTRP      |      2651|          0.72|     1.97|     0.17|     1.00|     2.00|     2.00|     2.00|      2.0|▁▁▁▁▇ |\n|AIALANGA      |      3610|          0.61|     1.11|     0.37|     1.00|     1.00|     1.00|     1.00|      3.0|▇▁▁▁▁ |\n|WTINT2YR      |         0|          1.00| 32347.76| 34440.37|  3600.63| 11761.87| 18490.48| 35509.75| 220233.3|▇▁▁▁▁ |\n|WTMEC2YR      |         0|          1.00| 32347.76| 35612.05|     0.00| 11582.07| 18605.93| 36132.36| 222579.8|▇▁▁▁▁ |\n|SDMVPSU       |         0|          1.00|     1.64|     0.64|     1.00|     1.00|     2.00|     2.00|      3.0|▇▁▇▁▂ |\n|SDMVSTRA      |         0|          1.00|    95.88|     3.98|    90.00|    92.00|    96.00|    99.00|    103.0|▇▆▃▆▅ |\n|INDHHIN2      |        78|          0.99|    11.53|    16.49|     1.00|     5.00|     7.00|    14.00|     99.0|▇▁▁▁▁ |\n|INDFMIN2      |        49|          0.99|    11.10|    16.20|     1.00|     4.00|     7.00|    14.00|     99.0|▇▁▁▁▁ |\n|INDFMPIR      |       805|          0.91|     2.22|     1.64|     0.00|     0.87|     1.64|     3.62|      5.0|▇▇▃▂▆ |\n|DMDHHSIZ      |         0|          1.00|     3.73|     1.70|     1.00|     2.00|     4.00|     5.00|      7.0|▇▅▆▅▅ |\n|DMDFMSIZ      |         0|          1.00|     3.56|     1.78|     1.00|     2.00|     4.00|     5.00|      7.0|▇▅▅▃▃ |\n|DMDHHSZA      |         0|          1.00|     0.49|     0.77|     0.00|     0.00|     0.00|     1.00|      3.0|▇▂▁▁▁ |\n|DMDHHSZB      |         0|          1.00|     0.95|     1.13|     0.00|     0.00|     1.00|     2.00|      4.0|▇▃▃▁▁ |\n|DMDHHSZE      |         0|          1.00|     0.41|     0.71|     0.00|     0.00|     0.00|     1.00|      3.0|▇▂▁▁▁ |\n|DMDHRGND      |         0|          1.00|     1.49|     0.50|     1.00|     1.00|     1.00|     2.00|      2.0|▇▁▁▁▇ |\n|DMDHRAGE      |         0|          1.00|    45.85|    15.88|    18.00|    34.00|    43.00|    57.00|     80.0|▅▇▆▃▃ |\n|DMDHRBR4      |       361|          0.96|     1.44|     3.12|     1.00|     1.00|     1.00|     2.00|     99.0|▇▁▁▁▁ |\n|DMDHREDU      |       358|          0.96|     3.43|     1.33|     1.00|     2.00|     4.00|     4.00|      9.0|▅▇▃▁▁ |\n|DMDHRMAR      |       128|          0.99|     3.17|     7.49|     1.00|     1.00|     1.00|     5.00|     99.0|▇▁▁▁▁ |\n|DMDHSEDU      |      4716|          0.50|     3.59|     1.36|     1.00|     3.00|     4.00|     5.00|      9.0|▃▇▆▁▁ |\n|AUQ054        |         1|          1.00|     1.93|     4.07|     1.00|     1.00|     2.00|     2.00|     99.0|▇▁▁▁▁ |\n|AUQ060        |      6459|          0.31|     1.34|     0.92|     1.00|     1.00|     1.00|     2.00|      9.0|▇▁▁▁▁ |\n|AUQ070        |      8587|          0.08|     1.30|     0.65|     1.00|     1.00|     1.00|     2.00|      9.0|▇▁▁▁▁ |\n|AUQ080        |      9151|          0.02|     1.29|     0.69|     1.00|     1.00|     1.00|     2.00|      9.0|▇▁▁▁▁ |\n|AUQ090        |      9310|          0.01|     1.46|     0.50|     1.00|     1.00|     1.00|     2.00|      2.0|▇▁▁▁▇ |\n|AUQ100        |      4689|          0.50|     4.14|     1.13|     1.00|     4.00|     5.00|     5.00|      9.0|▂▆▇▁▁ |\n|AUQ110        |      4689|          0.50|     4.59|     0.85|     1.00|     4.00|     5.00|     5.00|      9.0|▁▂▇▁▁ |\n|AUQ136        |      3805|          0.59|     2.02|     1.32|     1.00|     2.00|     2.00|     2.00|      9.0|▇▁▁▁▁ |\n|AUQ138        |      3805|          0.59|     2.00|     0.62|     1.00|     2.00|     2.00|     2.00|      9.0|▇▁▁▁▁ |\n|AUQ144        |      4689|          0.50|     3.84|     1.53|     1.00|     3.00|     4.00|     5.00|      9.0|▅▇▇▁▁ |\n|AUQ146        |      4689|          0.50|     1.99|     0.12|     1.00|     2.00|     2.00|     2.00|      2.0|▁▁▁▁▇ |\n|AUD148        |      9301|          0.01|     1.03|     0.18|     1.00|     1.00|     1.00|     1.00|      2.0|▇▁▁▁▁ |\n|AUQ152        |      9303|          0.01|     3.15|     1.63|     1.00|     1.00|     3.00|     5.00|      5.0|▇▂▃▅▇ |\n|AUQ154        |      4689|          0.50|     1.98|     0.12|     1.00|     2.00|     2.00|     2.00|      2.0|▁▁▁▁▇ |\n|AUQ191        |      4689|          0.50|     1.86|     0.38|     1.00|     2.00|     2.00|     2.00|      9.0|▇▁▁▁▁ |\n|AUQ250        |      8680|          0.07|     3.22|     1.50|     1.00|     2.00|     3.00|     5.00|      9.0|▆▇▆▁▁ |\n|AUQ255        |      8680|          0.07|     3.02|     1.57|     1.00|     1.00|     3.00|     5.00|      9.0|▇▇▅▁▁ |\n|AUQ260        |      8680|          0.07|     1.88|     0.72|     1.00|     2.00|     2.00|     2.00|      9.0|▇▁▁▁▁ |\n|AUQ270        |      8680|          0.07|     1.62|     0.56|     1.00|     1.00|     2.00|     2.00|      9.0|▇▁▁▁▁ |\n|AUQ280        |      8680|          0.07|     2.15|     1.00|     1.00|     1.00|     2.00|     3.00|      5.0|▅▇▅▁▁ |\n|AUQ300        |      4689|          0.50|     1.66|     0.48|     1.00|     1.00|     2.00|     2.00|      7.0|▇▁▁▁▁ |\n|AUQ310        |      7751|          0.17|     2.11|     1.42|     1.00|     1.00|     2.00|     3.00|      9.0|▇▃▁▁▁ |\n|AUQ320        |      7751|          0.17|     3.06|     1.81|     1.00|     1.00|     3.00|     5.00|      9.0|▇▂▇▁▁ |\n|AUQ330        |      4689|          0.50|     1.69|     0.50|     1.00|     1.00|     2.00|     2.00|      3.0|▅▁▇▁▁ |\n|AUQ340        |      7828|          0.16|     4.77|     4.59|     1.00|     3.00|     5.00|     7.00|     99.0|▇▁▁▁▁ |\n|AUQ350        |      7828|          0.16|     1.37|     0.52|     1.00|     1.00|     1.00|     2.00|      9.0|▇▁▁▁▁ |\n|AUQ360        |      8383|          0.10|     4.65|     3.59|     1.00|     3.00|     5.00|     7.00|     99.0|▇▁▁▁▁ |\n|AUQ370        |      4689|          0.50|     1.88|     0.32|     1.00|     2.00|     2.00|     2.00|      2.0|▁▁▁▁▇ |\n|AUQ380        |      4689|          0.50|     4.68|     2.11|     1.00|     5.00|     5.00|     6.00|     77.0|▇▁▁▁▁ |\n|begin_year    |         0|          1.00|  2011.00|     0.00|  2011.00|  2011.00|  2011.00|  2011.00|   2011.0|▁▁▇▁▁ |\n|end_year      |         0|          1.00|  2012.00|     0.00|  2012.00|  2012.00|  2012.00|  2012.00|   2012.0|▁▁▇▁▁ |\n\n\n:::\n:::\n\n\nShow raw NHANES data (2011-2012) from the CDC website with {RNHANES}\n:::\n\n:::\n:::\n\n\n###### NHANES 2018\n\n::: my-r-code\n::: my-r-code-header\n::: {#cnj-chap03-get-NHANES-2018-data}\n: Show raw NHANES data 2017-2018 from the CDC website with {haven}\n:::\n:::\n\n::: my-r-code-container\n::: {#lst-chap03-show-NHANES-2018-data}\n\n::: {.cell}\n\n```{.r .cell-code}\nnhanes_2018 <- base::readRDS(\"data/chap03/nhanes_2018.rds\")\n\nutils::str(nhanes_2018)\nskimr::skim(nhanes_2018)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> tibble [8,897 × 58] (S3: tbl_df/tbl/data.frame)\n#>  $ SEQN   : num [1:8897] 93703 93704 93705 93706 93707 ...\n#>   ..- attr(*, \"label\")= chr \"Respondent sequence number\"\n#>  $ AUQ054 : num [1:8897] 1 1 2 1 1 1 1 1 1 1 ...\n#>   ..- attr(*, \"label\")= chr \"General condition of hearing\"\n#>  $ AUQ060 : num [1:8897] NA NA NA NA NA NA NA NA NA NA ...\n#>   ..- attr(*, \"label\")= chr \"Hear a whisper from across a quiet room?\"\n#>  $ AUQ070 : num [1:8897] NA NA NA NA NA NA NA NA NA NA ...\n#>   ..- attr(*, \"label\")= chr \"Hear normal voice across a quiet room?\"\n#>  $ AUQ080 : num [1:8897] NA NA NA NA NA NA NA NA NA NA ...\n#>   ..- attr(*, \"label\")= chr \"Hear a shout from across a quiet room?\"\n#>  $ AUQ090 : num [1:8897] NA NA NA NA NA NA NA NA NA NA ...\n#>   ..- attr(*, \"label\")= chr \"Hear if spoken loudly to in better ear?\"\n#>  $ AUQ400 : num [1:8897] NA NA NA NA NA NA NA NA NA NA ...\n#>   ..- attr(*, \"label\")= chr \"When began to have hearing loss?\"\n#>  $ AUQ410A: num [1:8897] NA NA NA NA NA NA NA NA NA NA ...\n#>   ..- attr(*, \"label\")= chr \"Cause of hearing loss-Genetic/Hereditary\"\n#>  $ AUQ410B: num [1:8897] NA NA NA NA NA NA NA NA NA NA ...\n#>   ..- attr(*, \"label\")= chr \"Cause of hearing loss-Ear infections\"\n#>  $ AUQ410C: num [1:8897] NA NA NA NA NA NA NA NA NA NA ...\n#>   ..- attr(*, \"label\")= chr \"Cause of hearing loss-Ear diseases\"\n#>  $ AUQ410D: num [1:8897] NA NA NA NA NA NA NA NA NA NA ...\n#>   ..- attr(*, \"label\")= chr \"Cause of hearing loss-Illness/Infections\"\n#>  $ AUQ410E: num [1:8897] NA NA NA NA NA NA NA NA NA NA ...\n#>   ..- attr(*, \"label\")= chr \"Cause of hearing loss-Drugs/Medications\"\n#>  $ AUQ410F: num [1:8897] NA NA NA NA NA NA NA NA NA NA ...\n#>   ..- attr(*, \"label\")= chr \"Cause of hearing loss-Head/Neck injury\"\n#>  $ AUQ410G: num [1:8897] NA NA NA NA NA NA NA NA NA NA ...\n#>   ..- attr(*, \"label\")= chr \"Cause of hearing loss-Loud brief noise\"\n#>  $ AUQ410H: num [1:8897] NA NA NA NA NA NA NA NA NA NA ...\n#>   ..- attr(*, \"label\")= chr \"Cause of hearing loss-Long-term noise\"\n#>  $ AUQ410I: num [1:8897] NA NA NA NA NA NA NA NA NA NA ...\n#>   ..- attr(*, \"label\")= chr \"Cause of hearing loss-Aging\"\n#>  $ AUQ410J: num [1:8897] NA NA NA NA NA NA NA NA NA NA ...\n#>   ..- attr(*, \"label\")= chr \"Cause of hearing loss-Others\"\n#>  $ AUQ156 : num [1:8897] NA NA NA NA NA NA NA NA NA NA ...\n#>   ..- attr(*, \"label\")= chr \"Ever used assistive listening devices?\"\n#>  $ AUQ420 : num [1:8897] NA NA NA 2 1 NA 2 NA 2 NA ...\n#>   ..- attr(*, \"label\")= chr \"Ever had ear infections or earaches?\"\n#>  $ AUQ430 : num [1:8897] NA NA NA NA 1 NA NA NA NA NA ...\n#>   ..- attr(*, \"label\")= chr \"Ever had 3 or more ear infections?\"\n#>  $ AUQ139 : num [1:8897] NA NA NA NA 2 NA NA NA NA NA ...\n#>   ..- attr(*, \"label\")= chr \"Ever had tube placed in ear?\"\n#>  $ AUQ144 : num [1:8897] NA NA NA 1 3 NA 4 NA 2 NA ...\n#>   ..- attr(*, \"label\")= chr \"Last time hearing tested by specialist?\"\n#>  $ AUQ147 : num [1:8897] NA NA NA 2 2 NA 2 NA 2 NA ...\n#>   ..- attr(*, \"label\")= chr \"Now use hearing aid/ amplifier/ implant\"\n#>  $ AUQ149A: num [1:8897] NA NA NA NA NA NA NA NA NA NA ...\n#>   ..- attr(*, \"label\")= chr \"Now use a hearing aid\"\n#>  $ AUQ149B: num [1:8897] NA NA NA NA NA NA NA NA NA NA ...\n#>   ..- attr(*, \"label\")= chr \"Now use a personal sound amplifier\"\n#>  $ AUQ149C: num [1:8897] NA NA NA NA NA NA NA NA NA NA ...\n#>   ..- attr(*, \"label\")= chr \"Now have a cochlear implant\"\n#>  $ AUQ153 : num [1:8897] NA NA NA NA NA NA NA NA NA NA ...\n#>   ..- attr(*, \"label\")= chr \"Past 2 weeks how often worn hearing aid\"\n#>  $ AUQ630 : num [1:8897] NA NA NA 2 2 NA 2 NA 2 NA ...\n#>   ..- attr(*, \"label\")= chr \"Ever worn hearing aid/amplifier/implant\"\n#>  $ AUQ440 : num [1:8897] NA NA NA NA 1 NA NA NA NA NA ...\n#>   ..- attr(*, \"label\")= chr \"Ever had Special Ed/Early Intervention\"\n#>  $ AUQ450A: num [1:8897] NA NA NA NA 1 NA NA NA NA NA ...\n#>   ..- attr(*, \"label\")= chr \"Had service for speech-language\"\n#>  $ AUQ450B: num [1:8897] NA NA NA NA NA NA NA NA NA NA ...\n#>   ..- attr(*, \"label\")= chr \"Had service for reading\"\n#>  $ AUQ450C: num [1:8897] NA NA NA NA NA NA NA NA NA NA ...\n#>   ..- attr(*, \"label\")= chr \"Had service for hearing/listening skills\"\n#>  $ AUQ450D: num [1:8897] NA NA NA NA NA NA NA NA NA NA ...\n#>   ..- attr(*, \"label\")= chr \"Had service for intellectual disability\"\n#>  $ AUQ450E: num [1:8897] NA NA NA NA NA NA NA NA NA NA ...\n#>   ..- attr(*, \"label\")= chr \"Had service for movement/mobility issues\"\n#>  $ AUQ450F: num [1:8897] NA NA NA NA 6 NA NA NA NA NA ...\n#>   ..- attr(*, \"label\")= chr \"Had service for other disabilities\"\n#>  $ AUQ460 : num [1:8897] NA NA NA NA 2 NA NA NA NA NA ...\n#>   ..- attr(*, \"label\")= chr \"Exposed to very loud noise 10+ hrs/wk\"\n#>  $ AUQ470 : num [1:8897] NA NA NA NA NA NA NA NA NA NA ...\n#>   ..- attr(*, \"label\")= chr \"How long exposed to loud noise 10+hrs/wk\"\n#>  $ AUQ101 : num [1:8897] NA NA NA 5 NA NA 5 NA 5 NA ...\n#>   ..- attr(*, \"label\")= chr \"Difficult to follow conversation w/noise\"\n#>  $ AUQ110 : num [1:8897] NA NA NA 5 NA NA 5 NA 5 NA ...\n#>   ..- attr(*, \"label\")= chr \"Hearing causes frustration when talking?\"\n#>  $ AUQ480 : num [1:8897] NA NA NA 5 NA NA 5 NA 4 NA ...\n#>   ..- attr(*, \"label\")= chr \"Avoid groups, limit social life?\"\n#>  $ AUQ490 : num [1:8897] NA NA NA 2 NA NA 1 NA 2 NA ...\n#>   ..- attr(*, \"label\")= chr \"Problem with dizziness, lightheadedness?\"\n#>  $ AUQ191 : num [1:8897] NA NA NA 2 NA NA 2 NA 1 NA ...\n#>   ..- attr(*, \"label\")= chr \"Ears ringing, buzzing past year?\"\n#>  $ AUQ250 : num [1:8897] NA NA NA NA NA NA NA NA 1 NA ...\n#>   ..- attr(*, \"label\")= chr \"How long bothered by ringing, buzzing?\"\n#>  $ AUQ255 : num [1:8897] NA NA NA NA NA NA NA NA 5 NA ...\n#>   ..- attr(*, \"label\")= chr \"In past yr how often had ringing/roaring\"\n#>  $ AUQ260 : num [1:8897] NA NA NA NA NA NA NA NA 2 NA ...\n#>   ..- attr(*, \"label\")= chr \"Bothered by ringing after loud sounds?\"\n#>  $ AUQ270 : num [1:8897] NA NA NA NA NA NA NA NA 2 NA ...\n#>   ..- attr(*, \"label\")= chr \"Bothered by ringing when going to sleep?\"\n#>  $ AUQ280 : num [1:8897] NA NA NA NA NA NA NA NA 2 NA ...\n#>   ..- attr(*, \"label\")= chr \"How much of a problem is ringing?\"\n#>  $ AUQ500 : num [1:8897] NA NA NA NA NA NA NA NA 2 NA ...\n#>   ..- attr(*, \"label\")= chr \"Discussed ringing with doctor?\"\n#>  $ AUQ300 : num [1:8897] NA NA NA 2 NA NA 2 NA 2 NA ...\n#>   ..- attr(*, \"label\")= chr \"Ever used firearms for any reason?\"\n#>  $ AUQ310 : num [1:8897] NA NA NA NA NA NA NA NA NA NA ...\n#>   ..- attr(*, \"label\")= chr \"How many total rounds ever fired?\"\n#>  $ AUQ320 : num [1:8897] NA NA NA NA NA NA NA NA NA NA ...\n#>   ..- attr(*, \"label\")= chr \"Wear hearing protection when shooting?\"\n#>  $ AUQ330 : num [1:8897] NA NA NA 2 NA NA 2 NA 1 NA ...\n#>   ..- attr(*, \"label\")= chr \"Ever had job exposure to loud noise?\"\n#>  $ AUQ340 : num [1:8897] NA NA NA NA NA NA NA NA 2 NA ...\n#>   ..- attr(*, \"label\")= chr \"How long exposed to loud noise at work\"\n#>  $ AUQ350 : num [1:8897] NA NA NA NA NA NA NA NA 2 NA ...\n#>   ..- attr(*, \"label\")= chr \"Ever exposed to very loud noise at work\"\n#>  $ AUQ360 : num [1:8897] NA NA NA NA NA NA NA NA NA NA ...\n#>   ..- attr(*, \"label\")= chr \"How long exposed to very loud noise?\"\n#>  $ AUQ370 : num [1:8897] NA NA NA 2 NA NA 2 NA 1 NA ...\n#>   ..- attr(*, \"label\")= chr \"Had off-work exposure to loud noise?\"\n#>  $ AUQ510 : num [1:8897] NA NA NA NA NA NA NA NA 1 NA ...\n#>   ..- attr(*, \"label\")= chr \"How long exposed to loud noise 10+hrs/wk\"\n#>  $ AUQ380 : num [1:8897] NA NA NA 6 NA NA 5 NA 3 NA ...\n#>   ..- attr(*, \"label\")= chr \"Past year: worn hearing protection?\"\n#>  - attr(*, \"label\")= chr \"Audiometry\"\n```\n\n\n:::\n\n::: {.cell-output-display}\n\nTable: Data summary\n\n|                         |            |\n|:------------------------|:-----------|\n|Name                     |nhanes_2018 |\n|Number of rows           |8897        |\n|Number of columns        |58          |\n|_______________________  |            |\n|Column type frequency:   |            |\n|numeric                  |58          |\n|________________________ |            |\n|Group variables          |None        |\n\n\n**Variable type: numeric**\n\n|skim_variable | n_missing| complete_rate|     mean|      sd|    p0|   p25|   p50|    p75|   p100|hist  |\n|:-------------|---------:|-------------:|--------:|-------:|-----:|-----:|-----:|------:|------:|:-----|\n|SEQN          |         0|          1.00| 98333.86| 2671.90| 93703| 96017| 98348| 100645| 102956|▇▇▇▇▇ |\n|AUQ054        |         0|          1.00|     1.79|    2.02|     1|     1|     2|      2|     99|▇▁▁▁▁ |\n|AUQ060        |      7234|          0.19|     1.49|    1.13|     1|     1|     1|      2|      9|▇▁▁▁▁ |\n|AUQ070        |      8293|          0.07|     1.46|    1.02|     1|     1|     1|      2|      9|▇▁▁▁▁ |\n|AUQ080        |      8683|          0.02|     1.36|    1.01|     1|     1|     1|      2|      9|▇▁▁▁▁ |\n|AUQ090        |      8842|          0.01|     1.62|    1.52|     1|     1|     1|      2|      9|▇▁▁▁▁ |\n|AUQ400        |      8291|          0.07|     7.12|   12.62|     1|     4|     6|      7|     99|▇▁▁▁▁ |\n|AUQ410A       |      8813|          0.01|    34.83|   46.87|     1|     1|     1|     99|     99|▇▁▁▁▅ |\n|AUQ410B       |      8816|          0.01|     2.00|    0.00|     2|     2|     2|      2|      2|▁▁▇▁▁ |\n|AUQ410C       |      8879|          0.00|     3.00|    0.00|     3|     3|     3|      3|      3|▁▁▇▁▁ |\n|AUQ410D       |      8871|          0.00|     4.00|    0.00|     4|     4|     4|      4|      4|▁▁▇▁▁ |\n|AUQ410E       |      8889|          0.00|     5.00|    0.00|     5|     5|     5|      5|      5|▁▁▇▁▁ |\n|AUQ410F       |      8879|          0.00|     6.00|    0.00|     6|     6|     6|      6|      6|▁▁▇▁▁ |\n|AUQ410G       |      8807|          0.01|     7.00|    0.00|     7|     7|     7|      7|      7|▁▁▇▁▁ |\n|AUQ410H       |      8709|          0.02|     8.00|    0.00|     8|     8|     8|      8|      8|▁▁▇▁▁ |\n|AUQ410I       |      8585|          0.04|     9.00|    0.00|     9|     9|     9|      9|      9|▁▁▇▁▁ |\n|AUQ410J       |      8871|          0.00|    10.00|    0.00|    10|    10|    10|     10|     10|▁▁▇▁▁ |\n|AUQ156        |      8291|          0.07|     1.80|    0.40|     1|     2|     2|      2|      2|▂▁▁▁▇ |\n|AUQ420        |      5544|          0.38|     1.55|    0.71|     1|     1|     2|      2|      9|▇▁▁▁▁ |\n|AUQ430        |      7276|          0.18|     1.62|    0.96|     1|     1|     2|      2|      9|▇▁▁▁▁ |\n|AUQ139        |      7276|          0.18|     1.95|    0.79|     1|     2|     2|      2|      9|▇▁▁▁▁ |\n|AUQ144        |      5544|          0.38|     3.00|    1.88|     1|     2|     2|      5|      9|▇▃▃▁▁ |\n|AUQ147        |      5544|          0.38|     1.94|    0.25|     1|     2|     2|      2|      2|▁▁▁▁▇ |\n|AUQ149A       |      8690|          0.02|     1.00|    0.00|     1|     1|     1|      1|      1|▁▁▇▁▁ |\n|AUQ149B       |      8889|          0.00|     2.00|    0.00|     2|     2|     2|      2|      2|▁▁▇▁▁ |\n|AUQ149C       |      8893|          0.00|     3.00|    0.00|     3|     3|     3|      3|      3|▁▁▇▁▁ |\n|AUQ153        |      8682|          0.02|     3.65|    0.91|     1|     3|     4|      4|      5|▁▁▂▇▁ |\n|AUQ630        |      5759|          0.35|     1.99|    0.12|     1|     2|     2|      2|      2|▁▁▁▁▇ |\n|AUQ440        |      7181|          0.19|     1.79|    0.44|     1|     2|     2|      2|      9|▇▁▁▁▁ |\n|AUQ450A       |      8658|          0.03|     1.00|    0.00|     1|     1|     1|      1|      1|▁▁▇▁▁ |\n|AUQ450B       |      8742|          0.02|     2.00|    0.00|     2|     2|     2|      2|      2|▁▁▇▁▁ |\n|AUQ450C       |      8859|          0.00|     3.00|    0.00|     3|     3|     3|      3|      3|▁▁▇▁▁ |\n|AUQ450D       |      8849|          0.01|     4.00|    0.00|     4|     4|     4|      4|      4|▁▁▇▁▁ |\n|AUQ450E       |      8855|          0.00|     5.00|    0.00|     5|     5|     5|      5|      5|▁▁▇▁▁ |\n|AUQ450F       |      8819|          0.01|     6.00|    0.00|     6|     6|     6|      6|      6|▁▁▇▁▁ |\n|AUQ460        |      7181|          0.19|     1.99|    0.27|     1|     2|     2|      2|      9|▇▁▁▁▁ |\n|AUQ470        |      8866|          0.00|     2.55|    1.75|     1|     1|     2|      4|      9|▇▆▁▁▁ |\n|AUQ101        |      7261|          0.18|     3.64|    1.25|     1|     3|     4|      5|      9|▃▇▅▁▁ |\n|AUQ110        |      7261|          0.18|     4.24|    1.11|     1|     4|     5|      5|      9|▂▅▇▁▁ |\n|AUQ480        |      7261|          0.18|     4.59|    0.90|     1|     5|     5|      5|      9|▁▂▇▁▁ |\n|AUQ490        |      7261|          0.18|     1.65|    0.58|     1|     1|     2|      2|      9|▇▁▁▁▁ |\n|AUQ191        |      7261|          0.18|     1.84|    0.45|     1|     2|     2|      2|      9|▇▁▁▁▁ |\n|AUQ250        |      8615|          0.03|     3.58|    1.61|     1|     2|     4|      5|      9|▆▆▇▁▁ |\n|AUQ255        |      8615|          0.03|     2.62|    1.67|     1|     1|     2|      4|      9|▇▃▃▁▁ |\n|AUQ260        |      8615|          0.03|     1.96|    1.02|     1|     2|     2|      2|      9|▇▁▁▁▁ |\n|AUQ270        |      8615|          0.03|     1.70|    0.64|     1|     1|     2|      2|      9|▇▁▁▁▁ |\n|AUQ280        |      8615|          0.03|     2.18|    0.96|     1|     1|     2|      3|      5|▆▇▆▁▁ |\n|AUQ500        |      8615|          0.03|     1.53|    0.81|     1|     1|     1|      2|      9|▇▁▁▁▁ |\n|AUQ300        |      7261|          0.18|     1.61|    0.51|     1|     1|     2|      2|      7|▇▁▁▁▁ |\n|AUQ310        |      8251|          0.07|     2.09|    1.40|     1|     1|     2|      3|      9|▇▃▁▁▁ |\n|AUQ320        |      8251|          0.07|     3.52|    1.71|     1|     2|     4|      5|      9|▆▃▇▁▁ |\n|AUQ330        |      7261|          0.18|     1.77|    0.60|     1|     1|     2|      2|      9|▇▁▁▁▁ |\n|AUQ340        |      8412|          0.05|     4.99|    2.14|     1|     3|     6|      7|      7|▃▂▂▂▇ |\n|AUQ350        |      8412|          0.05|     1.42|    0.69|     1|     1|     1|      2|      9|▇▁▁▁▁ |\n|AUQ360        |      8600|          0.03|     5.82|    7.94|     1|     4|     6|      7|     99|▇▁▁▁▁ |\n|AUQ370        |      7261|          0.18|     1.89|    0.36|     1|     2|     2|      2|      9|▇▁▁▁▁ |\n|AUQ510        |      8712|          0.02|     2.75|    1.40|     1|     1|     3|      4|      9|▆▇▁▁▁ |\n|AUQ380        |      7261|          0.18|     4.83|    1.18|     1|     5|     5|      5|      6|▁▁▁▇▃ |\n\n\n:::\n:::\n\n\nShow raw NHANES data 2017-2018 from the CDC website with {haven}\n:::\n\n:::\n:::\n\n###### Research funding\n\n::: my-r-code\n::: my-r-code-header\n::: {#cnj-chap03-show-research-funding}\n: Show raw research funding data for different kinds of research topics (2004-2015)\n:::\n:::\n\n::: my-r-code-container\n\n::: {#lst-chap03-show-research-funding}\n\n::: {.cell}\n\n```{.r .cell-code}\nresearch_funding <- base::readRDS(\"data/chap03/research_funding.rds\")\n\nutils::str(research_funding)\nskimr::skim(research_funding)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> spc_tbl_ [30 × 8] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n#>  $ Cause of Death                       : chr [1:30] \"Heart disease\" \"Cancer\" \"Lung disease\" \"Cerebrovascular disease\" ...\n#>  $ Mortality Rate per 100,000 Population: num [1:30] 201.5 186.4 44.7 43.9 26 ...\n#>  $ Publications                         : num [1:30] 358915 1078144 259196 136502 40179 ...\n#>  $ Funding                              : num [1:30] 1.29e+10 2.06e+10 1.09e+10 7.58e+09 5.93e+09 ...\n#>  $ Predicted Publications               : num [1:30] 260875 248160 99170 98070 70085 ...\n#>  $ Publications (Studentized Residuals) : num [1:30] 0.27 1.25 0.75 0.26 -0.43 0.66 -0.11 -0.73 -0.13 0.02 ...\n#>  $ Predicted Funding                    : chr [1:30] \"$12,075,841,121\" \"$11,415,379,454\" \"$4,065,188,916\" \"$4,014,434,824\" ...\n#>  $ Funding (Studentized Residuals)      : num [1:30] 0.04 0.33 0.52 0.34 0.4 0.92 -0.19 -0.64 -0.57 -0.7 ...\n#>  - attr(*, \"spec\")=List of 3\n#>   ..$ cols   :List of 8\n#>   .. ..$ Cause of Death                       : list()\n#>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_character\" \"collector\"\n#>   .. ..$ Mortality Rate per 100,000 Population: list()\n#>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_double\" \"collector\"\n#>   .. ..$ Publications                         : list()\n#>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_double\" \"collector\"\n#>   .. ..$ Funding                              : list()\n#>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_double\" \"collector\"\n#>   .. ..$ Predicted Publications               : list()\n#>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_number\" \"collector\"\n#>   .. ..$ Publications (Studentized Residuals) : list()\n#>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_double\" \"collector\"\n#>   .. ..$ Predicted Funding                    : list()\n#>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_character\" \"collector\"\n#>   .. ..$ Funding (Studentized Residuals)      : list()\n#>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_double\" \"collector\"\n#>   ..$ default: list()\n#>   .. ..- attr(*, \"class\")= chr [1:2] \"collector_guess\" \"collector\"\n#>   ..$ delim  : chr \",\"\n#>   ..- attr(*, \"class\")= chr \"col_spec\"\n#>  - attr(*, \"problems\")=<externalptr>\n```\n\n\n:::\n\n::: {.cell-output-display}\n\nTable: Data summary\n\n|                         |                 |\n|:------------------------|:----------------|\n|Name                     |research_funding |\n|Number of rows           |30               |\n|Number of columns        |8                |\n|_______________________  |                 |\n|Column type frequency:   |                 |\n|character                |2                |\n|numeric                  |6                |\n|________________________ |                 |\n|Group variables          |None             |\n\n\n**Variable type: character**\n\n|skim_variable     | n_missing| complete_rate| min| max| empty| n_unique| whitespace|\n|:-----------------|---------:|-------------:|---:|---:|-----:|--------:|----------:|\n|Cause of Death    |         0|             1|   3|  44|     0|       30|          0|\n|Predicted Funding |         0|             1|  12|  15|     0|       29|          0|\n\n\n**Variable type: numeric**\n\n|skim_variable                         | n_missing| complete_rate|          mean|           sd|         p0|          p25|          p50|          p75|         p100|hist  |\n|:-------------------------------------|---------:|-------------:|-------------:|------------:|----------:|------------:|------------:|------------:|------------:|:-----|\n|Mortality Rate per 100,000 Population |         0|             1|         22.42| 4.807000e+01|       0.59|         1.77| 7.760000e+00| 1.481000e+01| 2.015400e+02|▇▁▁▁▁ |\n|Publications                          |         0|             1|      93913.90| 2.028434e+05|    1034.00|     12550.00| 3.949800e+04| 5.406425e+04| 1.078144e+06|▇▁▁▁▁ |\n|Funding                               |         0|             1| 4136597358.43| 5.799997e+09| 3474852.00| 358026213.50| 1.659781e+09| 4.830357e+09| 2.059661e+10|▇▂▁▁▁ |\n|Predicted Publications                |         0|             1|      48162.03| 6.143627e+04|    6163.00|     12448.50| 3.221550e+04| 4.880050e+04| 2.608750e+05|▇▁▁▁▁ |\n|Publications (Studentized Residuals)  |         0|             1|         -0.01| 1.060000e+00|      -2.63|        -0.36| 1.200000e-01| 7.400000e-01| 1.460000e+00|▂▁▂▇▇ |\n|Funding (Studentized Residuals)       |         0|             1|         -0.02| 1.090000e+00|      -3.71|        -0.53| 3.400000e-01| 5.800000e-01| 1.920000e+00|▁▁▃▇▂ |\n\n\n:::\n:::\n\n\nShow raw research funding data for different kinds of research topics (2004-2015)\n:::\n\n:::\n:::\n\n###### Guns manufactured\n\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-show-guns-manufactured}\n: Show raw data about guns manufactured in ten US (1986 - 2019) from USAFact.org website\n::::::\n:::\n::::{.my-r-code-container}\n\n::: {#lst-chap03-show-guns-manufactured-2019}\n\n::: {.cell}\n\n```{.r .cell-code}\nguns_manufactured_2019 <-  base::readRDS(\"data/chap03/guns_manufactured_2019.rds\")\n\nutils::str(guns_manufactured_2019)\nskimr::skim(guns_manufactured_2019)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> spc_tbl_ [11 × 41] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n#>  $ Years: chr [1:11] \"Firearms manufactured (Items)\" \"By type of firearm\" \"Pistols (Items)\" \"Revolvers (Items)\" ...\n#>  $ 1980 : chr [1:11] NA NA NA NA ...\n#>  $ 1981 : chr [1:11] NA NA NA NA ...\n#>  $ 1982 : chr [1:11] NA NA NA NA ...\n#>  $ 1983 : chr [1:11] NA NA NA NA ...\n#>  $ 1984 : chr [1:11] NA NA NA NA ...\n#>  $ 1985 : chr [1:11] NA NA NA NA ...\n#>  $ 1986 : chr [1:11] \"3040934\" NA \"662973\" \"761414\" ...\n#>  $ 1987 : num [1:11] 3559663 NA 964561 722512 857949 ...\n#>  $ 1988 : num [1:11] 3963877 NA 1101011 754744 928070 ...\n#>  $ 1989 : num [1:11] 4418393 NA 1404753 628573 935541 ...\n#>  $ 1990 : num [1:11] 3959968 NA 1371427 470495 848948 ...\n#>  $ 1991 : num [1:11] 3563106 NA 1378252 456966 828426 ...\n#>  $ 1992 : num [1:11] 4175836 NA 1669537 469413 1018204 ...\n#>  $ 1993 : num [1:11] 5055637 NA 2093362 562292 1144940 ...\n#>  $ 1994 : num [1:11] 5173217 NA 2004298 586450 1254926 ...\n#>  $ 1995 : num [1:11] 4316342 NA 1195284 527664 1173645 ...\n#>  $ 1996 : num [1:11] 3854439 NA 987528 498944 925732 ...\n#>  $ 1997 : num [1:11] 3593504 NA 1036077 370428 915978 ...\n#>  $ 1998 : num [1:11] 3713590 NA 960365 324390 868639 ...\n#>  $ 1999 : num [1:11] 4047747 NA 995446 335784 1106995 ...\n#>  $ 2000 : num [1:11] 3793541 NA 962901 318960 898442 ...\n#>  $ 2001 : num [1:11] 2932655 NA 626836 320143 679813 ...\n#>  $ 2002 : num [1:11] 3366895 NA 741514 347070 741325 ...\n#>  $ 2003 : num [1:11] 3308404 NA 811660 309364 726078 ...\n#>  $ 2004 : num [1:11] 3099025 NA 728511 294099 731769 ...\n#>  $ 2005 : num [1:11] 3241494 NA 803425 274205 709313 ...\n#>  $ 2006 : num [1:11] 3653324 NA 1021260 385069 714618 ...\n#>  $ 2007 : num [1:11] 3922613 NA 1219664 391334 645231 ...\n#>  $ 2008 : num [1:11] 4498944 NA 1609381 431753 630710 ...\n#>  $ 2009 : num [1:11] 5555818 NA 1868258 547195 752699 ...\n#>  $ 2010 : num [1:11] 5459240 NA 2258450 558927 743378 ...\n#>  $ 2011 : num [1:11] 6541886 NA 2598133 572857 862401 ...\n#>  $ 2012 : num [1:11] 8578610 NA 3487883 667357 949010 ...\n#>  $ 2013 : num [1:11] 10844792 NA 4441726 725282 1203072 ...\n#>  $ 2014 : num [1:11] 9050626 NA 3633454 744047 935411 ...\n#>  $ 2015 : num [1:11] 9358661 NA 3557199 885259 777273 ...\n#>  $ 2016 : num [1:11] 11497441 NA 4720075 856291 848617 ...\n#>  $ 2017 : num [1:11] 8327792 NA 3691010 720917 653139 ...\n#>  $ 2018 : num [1:11] 9052628 NA 3881158 664835 536126 ...\n#>  $ 2019 : num [1:11] 7011945 NA 3046013 580601 480735 ...\n#>  - attr(*, \"spec\")=List of 3\n#>   ..$ cols   :List of 41\n#>   .. ..$ Years: list()\n#>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_character\" \"collector\"\n#>   .. ..$ 1980 : list()\n#>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_character\" \"collector\"\n#>   .. ..$ 1981 : list()\n#>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_character\" \"collector\"\n#>   .. ..$ 1982 : list()\n#>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_character\" \"collector\"\n#>   .. ..$ 1983 : list()\n#>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_character\" \"collector\"\n#>   .. ..$ 1984 : list()\n#>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_character\" \"collector\"\n#>   .. ..$ 1985 : list()\n#>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_character\" \"collector\"\n#>   .. ..$ 1986 : list()\n#>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_character\" \"collector\"\n#>   .. ..$ 1987 : list()\n#>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_double\" \"collector\"\n#>   .. ..$ 1988 : list()\n#>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_double\" \"collector\"\n#>   .. ..$ 1989 : list()\n#>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_double\" \"collector\"\n#>   .. ..$ 1990 : list()\n#>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_double\" \"collector\"\n#>   .. ..$ 1991 : list()\n#>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_double\" \"collector\"\n#>   .. ..$ 1992 : list()\n#>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_double\" \"collector\"\n#>   .. ..$ 1993 : list()\n#>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_double\" \"collector\"\n#>   .. ..$ 1994 : list()\n#>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_double\" \"collector\"\n#>   .. ..$ 1995 : list()\n#>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_double\" \"collector\"\n#>   .. ..$ 1996 : list()\n#>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_double\" \"collector\"\n#>   .. ..$ 1997 : list()\n#>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_double\" \"collector\"\n#>   .. ..$ 1998 : list()\n#>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_double\" \"collector\"\n#>   .. ..$ 1999 : list()\n#>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_double\" \"collector\"\n#>   .. ..$ 2000 : list()\n#>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_double\" \"collector\"\n#>   .. ..$ 2001 : list()\n#>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_double\" \"collector\"\n#>   .. ..$ 2002 : list()\n#>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_double\" \"collector\"\n#>   .. ..$ 2003 : list()\n#>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_double\" \"collector\"\n#>   .. ..$ 2004 : list()\n#>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_double\" \"collector\"\n#>   .. ..$ 2005 : list()\n#>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_double\" \"collector\"\n#>   .. ..$ 2006 : list()\n#>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_double\" \"collector\"\n#>   .. ..$ 2007 : list()\n#>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_double\" \"collector\"\n#>   .. ..$ 2008 : list()\n#>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_double\" \"collector\"\n#>   .. ..$ 2009 : list()\n#>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_double\" \"collector\"\n#>   .. ..$ 2010 : list()\n#>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_double\" \"collector\"\n#>   .. ..$ 2011 : list()\n#>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_double\" \"collector\"\n#>   .. ..$ 2012 : list()\n#>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_double\" \"collector\"\n#>   .. ..$ 2013 : list()\n#>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_double\" \"collector\"\n#>   .. ..$ 2014 : list()\n#>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_double\" \"collector\"\n#>   .. ..$ 2015 : list()\n#>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_double\" \"collector\"\n#>   .. ..$ 2016 : list()\n#>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_double\" \"collector\"\n#>   .. ..$ 2017 : list()\n#>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_double\" \"collector\"\n#>   .. ..$ 2018 : list()\n#>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_double\" \"collector\"\n#>   .. ..$ 2019 : list()\n#>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_double\" \"collector\"\n#>   ..$ default: list()\n#>   .. ..- attr(*, \"class\")= chr [1:2] \"collector_guess\" \"collector\"\n#>   ..$ delim  : chr \",\"\n#>   ..- attr(*, \"class\")= chr \"col_spec\"\n#>  - attr(*, \"problems\")=<externalptr>\n```\n\n\n:::\n\n::: {.cell-output-display}\n\nTable: Data summary\n\n|                         |                       |\n|:------------------------|:----------------------|\n|Name                     |guns_manufactured_2019 |\n|Number of rows           |11                     |\n|Number of columns        |41                     |\n|_______________________  |                       |\n|Column type frequency:   |                       |\n|character                |8                      |\n|numeric                  |33                     |\n|________________________ |                       |\n|Group variables          |None                   |\n\n\n**Variable type: character**\n\n|skim_variable | n_missing| complete_rate| min| max| empty| n_unique| whitespace|\n|:-------------|---------:|-------------:|---:|---:|-----:|--------:|----------:|\n|Years         |         2|          0.82|   8|  29|     0|        9|          0|\n|1980          |         9|          0.18|   6|  58|     0|        2|          0|\n|1981          |         9|          0.18|   6|  35|     0|        2|          0|\n|1982          |        10|          0.09|   5|   5|     0|        1|          0|\n|1983          |         9|          0.18|   3|  51|     0|        2|          0|\n|1984          |         9|          0.18|  11|  79|     0|        2|          0|\n|1985          |         9|          0.18|   4|   7|     0|        2|          0|\n|1986          |         3|          0.73|   4|  15|     0|        8|          0|\n\n\n**Variable type: numeric**\n\n|skim_variable | n_missing| complete_rate|      mean|      sd|     p0|      p25|       p50|     p75|     p100|hist  |\n|:-------------|---------:|-------------:|---------:|-------:|------:|--------:|---------:|-------:|--------:|:-----|\n|1987          |         5|          0.55| 1186554.3| 1218822|   6980| 756371.2|  911255.0|  996886|  3559663|▂▇▁▁▂ |\n|1988          |         5|          0.55| 1321292.3| 1355892|  35345| 798075.5| 1014540.5| 1133783|  3963877|▅▇▁▁▂ |\n|1989          |         5|          0.55| 1472797.7| 1531902|  42126| 705315.0| 1170147.0| 1406738|  4418393|▅▇▁▁▂ |\n|1990          |         5|          0.55| 1319989.3| 1379959|  57434| 565108.2| 1030306.0| 1331486|  3959968|▅▇▁▁▂ |\n|1991          |         5|          0.55| 1187702.0| 1249591|  15980| 549831.0|  855954.0| 1254560|  3563106|▅▇▁▁▂ |\n|1992          |         5|          0.55| 1391945.3| 1473834|  16849| 602518.0| 1010018.5| 1506704|  4175836|▅▇▁▁▂ |\n|1993          |         5|          0.55| 1685212.3| 1783997|  81349| 707954.0| 1159317.0| 1863445|  5055637|▇▇▃▁▃ |\n|1994          |         5|          0.55| 1724405.7| 1821553|  10936| 753569.0| 1285766.5| 1832375|  5173217|▅▇▁▁▂ |\n|1995          |         5|          0.55| 1438780.7| 1502410|   8629| 689159.2| 1184464.5| 1357161|  4316342|▅▇▁▁▂ |\n|1996          |         5|          0.55| 1284813.0| 1346281|  17920| 605641.0|  956630.0| 1315118|  3854439|▅▇▁▁▂ |\n|1997          |         5|          0.55| 1197834.7| 1258599|  19680| 506815.5|  976027.5| 1197525|  3593504|▅▇▁▁▂ |\n|1998          |         5|          0.55| 1237863.3| 1321963|  24506| 460452.2|  914502.0| 1391859|  3713590|▇▇▃▁▃ |\n|1999          |         5|          0.55| 1349249.0| 1432202|  39837| 500699.5| 1051220.5| 1454012|  4047747|▅▇▁▁▂ |\n|2000          |         5|          0.55| 1264513.7| 1352038|  30196| 463830.5|  930671.5| 1428007|  3793541|▇▇▃▁▃ |\n|2001          |         5|          0.55|  977551.7| 1046414|  21309| 396816.2|  653324.5| 1133369|  2932655|▇▇▃▁▃ |\n|2002          |         5|          0.55| 1122298.3| 1207898|  21700| 445633.8|  741419.5| 1321843|  3366895|▇▇▃▁▃ |\n|2003          |         5|          0.55| 1102801.3| 1181269|  30978| 413542.5|  768869.0| 1275658|  3308404|▇▇▃▁▃ |\n|2004          |         5|          0.55| 1033008.3| 1105477|  19508| 402702.0|  730140.0| 1176796|  3099025|▇▇▃▁▃ |\n|2005          |         5|          0.55| 1080498.0| 1164096|  23179| 382982.0|  756369.0| 1274385|  3241494|▇▇▃▁▃ |\n|2006          |         5|          0.55| 1217774.7| 1295505|  35872| 467456.2|  867939.0| 1377694|  3653324|▇▂▂▁▂ |\n|2007          |         5|          0.55| 1307537.7| 1398868|  55461| 454808.2|  932447.5| 1513108|  3922613|▇▂▂▁▂ |\n|2008          |         5|          0.55| 1499648.0| 1608622|  92564| 481492.2| 1120045.5| 1703247|  4498944|▇▅▁▁▂ |\n|2009          |         5|          0.55| 1851939.3| 1986052| 138815| 598571.0| 1310478.5| 2153703|  5555818|▇▅▁▁▂ |\n|2010          |         5|          0.55| 1819746.7| 1962427|  67929| 605039.8| 1286967.0| 2151476|  5459240|▇▂▂▁▂ |\n|2011          |         5|          0.55| 2180628.7| 2345097| 190407| 645243.0| 1590244.5| 2528122|  6541886|▇▅▁▁▂ |\n|2012          |         5|          0.55| 2859536.7| 3103979| 306154| 737770.2| 2058608.0| 3407964|  8578610|▇▅▁▁▂ |\n|2013          |         5|          0.55| 3614930.7| 3923969| 495142| 844729.5| 2591321.0| 4326187| 10844792|▇▅▁▁▂ |\n|2014          |         5|          0.55| 3016875.3| 3270622| 358165| 791888.0| 2157480.0| 3569978|  9050626|▇▅▁▁▂ |\n|2015          |         5|          0.55| 3119553.7| 3378333| 447131| 804269.5| 2221229.0| 3658149|  9358661|▇▅▁▁▂ |\n|2016          |         5|          0.55| 3832480.3| 4158420| 833123| 850535.5| 2547813.0| 4599890| 11497441|▇▅▁▁▂ |\n|2017          |         5|          0.55| 2775930.7| 2984401| 653139| 730346.2| 1631363.0| 3394280|  8327792|▇▅▁▁▂ |\n|2018          |         5|          0.55| 3017542.7| 3243302| 536126| 771119.5| 1985254.5| 3631002|  9052628|▇▅▁▁▂ |\n|2019          |         5|          0.55| 2337315.0| 2488560| 480735| 672183.0| 1452298.0| 2773926|  7011945|▇▅▁▁▂ |\n\n\n:::\n:::\n\n\nShow raw data about guns manufactured in ten US (1986 - 2019) from USAFact.org website\n:::\n\n::::\n:::::\n\n###### Guns exported\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-chap03-show-guns-exported}\n: Show raw data of exported guns from the ATF PDF report (1998-2019)\n::::::\n:::\n::::{.my-r-code-container}\n\n::: {#lst-chap03-show-guns-exported-2017}\n\n::: {.cell}\n\n```{.r .cell-code}\nguns_exported_2017 <-  base::readRDS(\"data/chap03/guns_exported_2017.rds\")\n\nutils::str(guns_exported_2017)\nskimr::skim(guns_exported_2017)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#>  chr [1:32, 1:7] \"1986\" \"1987\" \"1988\" \"1989\" \"1990\" \"1991\" \"1992\" \"1993\" ...\n```\n\n\n:::\n\n::: {.cell-output-display}\n\nTable: Data summary\n\n|                         |                   |\n|:------------------------|:------------------|\n|Name                     |guns_exported_2017 |\n|Number of rows           |32                 |\n|Number of columns        |7                  |\n|_______________________  |                   |\n|Column type frequency:   |                   |\n|character                |7                  |\n|________________________ |                   |\n|Group variables          |None               |\n\n\n**Variable type: character**\n\n|skim_variable | n_missing| complete_rate| min| max| empty| n_unique| whitespace|\n|:-------------|---------:|-------------:|---:|---:|-----:|--------:|----------:|\n|V1            |         0|             1|   4|   4|     0|       32|          0|\n|V2            |         0|             1|   6|   7|     0|       32|          0|\n|V3            |         0|             1|   6|   7|     0|       32|          0|\n|V4            |         0|             1|   6|   7|     0|       32|          0|\n|V5            |         0|             1|   6|   7|     0|       32|          0|\n|V6            |         0|             1|   3|   6|     0|       32|          0|\n|V7            |         0|             1|   7|   7|     0|       32|          0|\n\n\n:::\n:::\n\n\nShow raw data of exported guns from the ATF PDF report (1986-2017)\n\n:::\n::::\n:::::\n\n###### Guns imported\n\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-show-guns-imported}\n: Show raw data of imported guns from the ATF PDF report (1986-2018)\n\n::::::\n:::\n::::{.my-r-code-container}\n\n::: {#lst-chap03-show-guns-imported-2018}\n\n::: {.cell}\n\n```{.r .cell-code}\nguns_imported_2018 <-  base::readRDS(\"data/chap03/guns_imported_2018.rds\")\n\nutils::str(guns_imported_2018)\nskimr::skim(guns_imported_2018)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#>  chr [1:33, 1:5] \"1986\" \"1987\" \"1988\" \"1989\" \"1990\" \"1991\" \"1992\" \"1993\" ...\n```\n\n\n:::\n\n::: {.cell-output-display}\n\nTable: Data summary\n\n|                         |                   |\n|:------------------------|:------------------|\n|Name                     |guns_imported_2018 |\n|Number of rows           |33                 |\n|Number of columns        |5                  |\n|_______________________  |                   |\n|Column type frequency:   |                   |\n|character                |5                  |\n|________________________ |                   |\n|Group variables          |None               |\n\n\n**Variable type: character**\n\n|skim_variable | n_missing| complete_rate| min| max| empty| n_unique| whitespace|\n|:-------------|---------:|-------------:|---:|---:|-----:|--------:|----------:|\n|V1            |         0|             1|   4|   4|     0|       33|          0|\n|V2            |         0|             1|   7|   7|     0|       33|          0|\n|V3            |         0|             1|   7|   9|     0|       33|          0|\n|V4            |         0|             1|   7|   9|     0|       33|          0|\n|V5            |         0|             1|   7|   9|     0|       33|          0|\n\n\n:::\n:::\n\n\nShow raw data of imported guns from the ATF PDF report (1986-2018)\n\n:::\n::::\n:::::\n\n\n:::\n:::\n:::\n\n### Recode data\n\n::: my-example\n::: my-example-header\n::: {#exm-ID-text}\n: Recode data for chapter 3\n:::\n:::\n\n::: my-example-container\n::: panel-tabset\n\n###### FBI gun deaths\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-fbi-gun-deaths}\n: Recode FBI deaths data 2012-2016\n::::::\n:::\n::::{.my-r-code-container}\n\n::: {.cell}\n\n```{.r .cell-code}\nfbi_deaths <- base::readRDS(\"data/chap03/fbi_deaths.rds\")\n\nfbi_deaths_clean <- fbi_deaths |> \n    dplyr::slice(3:7) |> \n    tidyr::pivot_longer(\n        cols = -Weapons,\n        values_to = \"deaths\",\n        names_to = \"year\"\n        ) |> \n    dplyr::rename(weapons = Weapons)\n\nbase::saveRDS(fbi_deaths_clean,\n              \"data/chap03/fbi_deaths_clean.rds\")\n\nfbi_deaths_clean\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> # A tibble: 25 × 3\n#>    weapons  year  deaths\n#>    <chr>    <chr>  <dbl>\n#>  1 Handguns 2012    6404\n#>  2 Handguns 2013    5782\n#>  3 Handguns 2014    5673\n#>  4 Handguns 2015    6569\n#>  5 Handguns 2016    7105\n#>  6 Rifles   2012     298\n#>  7 Rifles   2013     285\n#>  8 Rifles   2014     258\n#>  9 Rifles   2015     258\n#> 10 Rifles   2016     374\n#> # ℹ 15 more rows\n```\n\n\n:::\n:::\n\n\n::::\n:::::\n\n\n\n###### Gun use\n\n::: my-r-code\n::: my-r-code-header\n::: {#cnj-chap03-recode-gun-use-2012}\n: Recode gun use variable `AUQ300` from NHANES data 2011-2012\n:::\n:::\n\n::: my-r-code-container\n\n::: {.cell}\n\n```{.r .cell-code}\n## load data\nnhanes_2012 <- base::readRDS(\"data/chap03/nhanes_2012.rds\")\n\n## recode data\nnhanes_2012_clean1 <- nhanes_2012 |> \n    dplyr::mutate(AUQ300 = \n          dplyr::na_if(x = AUQ300, y = 7)) |> \n    dplyr::mutate(AUQ300 = \n          dplyr::na_if(x = AUQ300, y = 9)) |> \n    ## see my note in the text under the code\n    # tidyr::drop_na() |> \n    dplyr::mutate(AUQ300 = forcats::as_factor(AUQ300)) |> \n    dplyr::mutate(AUQ300 = \n          forcats::fct_recode(AUQ300, \n                  \"Yes\" = \"1\", \n                  \"No\" = \"2\")\n    ) |> \n    dplyr::rename(gun_use = AUQ300) |> \n    dplyr::relocate(gun_use)\n\n\ngun_use_2012 <- nhanes_2012_clean1 |> \n    dplyr::count(gun_use)|> \n    dplyr::mutate(percent = round(n / sum(n), 2) * 100) \n\nglue::glue(\"Result calculated manually with `dplyr::count()` and `dplyr::mutate()`\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> Result calculated manually with `dplyr::count()` and `dplyr::mutate()`\n```\n\n\n:::\n\n```{.r .cell-code}\ngun_use_2012\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#>   gun_use    n percent\n#> 1     Yes 1613      17\n#> 2      No 3061      33\n#> 3    <NA> 4690      50\n```\n\n\n:::\n\n```{.r .cell-code}\nglue::glue(\" \")\n```\n\n \n\n```{.r .cell-code}\nglue::glue(\"*******************************************************************\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> *******************************************************************\n```\n\n\n:::\n\n```{.r .cell-code}\nglue::glue(\"Result calculated with `janitor::tabyl()` and `janitor::adorn_pct_formating()`\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> Result calculated with `janitor::tabyl()` and `janitor::adorn_pct_formating()`\n```\n\n\n:::\n\n```{.r .cell-code}\nnhanes_2012_clean1 |> \n    janitor::tabyl(gun_use) |> \n    janitor::adorn_pct_formatting()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#>  gun_use    n percent valid_percent\n#>      Yes 1613   17.2%         34.5%\n#>       No 3061   32.7%         65.5%\n#>     <NA> 4690   50.1%             -\n```\n\n\n:::\n:::\n\n\n------------------------------------------------------------------------\n\nFor recoding the levels of the categorical variable I have looked up the\nappropriate passage in the codebook (see:\n@fig-firearms-use-codebook-2012).\n\nWith the last line `dplyr::relocate(gun_use)` I put the column `gun_use`\nto the front of the data frame. If neither the `.before` nor the\n`.after` argument of the function are supplied the column will move\ncolumns to the left-hand side of the data frame. So it is easy to find\nfor visual inspections via the RStudio data frame viewer.\n\n::: my-note\n::: my-note-header\nWhen to remove the NA's?\n:::\n\n::: my-note-container\nIt would be not correct to remove the NA's here in the recoding code\nchunk, because this would remove the rows with missing values from the\n`gun_use` variable across the whole data frame! This implies that values\nof other variable that are not missing would be removed too. It is\ncorrect to remove the NA's when the output for the analysis (graph or\ntable) is prepared via the pipe operator without changing the stored\ndata.\n:::\n\n\n:::\n\n:::\n:::\n\n![Ever used firearms for any reason? [Codebook 2011-2012\nAUDIOMETRY](https://wwwn.cdc.gov/Nchs/Nhanes/2011-2012/AUQ_G.htm#AUQ300)](img/chap03/NHANES-codebook-firearms-use-2012-min.png){#fig-firearms-use-codebook-2012\nfig-alt=\"'Ever used firearms for any reason?' this question has several options: - 1 = Yes - 2 = No - 7 = Refused  - 9 = Don’t know - . = Missing\"\nfig-align=\"center\"}\n\n###### Rounds fired\n\n::: my-r-code\n::: my-r-code-header\n::: {#cnj-chap03-recode-rounds-fired}\n: Recode rounds fired variable `AUQ310` from NHANES data 2011-2012\n:::\n:::\n\n::: my-r-code-container\n\n::: {.cell}\n\n```{.r .cell-code}\nnhanes_2012_clean2 <- nhanes_2012_clean1 |> \n    dplyr::mutate(AUQ310 = forcats::as_factor(AUQ310)) |> \n    dplyr::mutate(AUQ310 = forcats::fct_recode(AUQ310,\n        \"1 to less than 100\" = \"1\",\n        \"100 to less than 1000\" = \"2\",\n        \"1000 to less than 10k\" = \"3\",\n        \"10k to less than 50k\" = \"4\",\n        \"50k or more\" = \"5\",\n        \"Refused to answer\" = \"7\",\n        \"Don't know\" = \"9\")\n    ) |> \n    dplyr::rename(rounds_fired = AUQ310) |> \n    dplyr::relocate(rounds_fired, .after = gun_use)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n#> Warning: There was 1 warning in `dplyr::mutate()`.\n#> ℹ In argument: `AUQ310 = forcats::fct_recode(...)`.\n#> Caused by warning:\n#> ! Unknown levels in `f`: 7\n```\n\n\n:::\n\n```{.r .cell-code}\nfired_2012 <- nhanes_2012_clean2 |>\n    dplyr::select(rounds_fired) |> \n    tidyr::drop_na() |> \n    dplyr::count(rounds_fired) |> \n    dplyr::mutate(prop = round(n / sum(n), 2) * 100) |> \n    dplyr::relocate(n, .after = dplyr::last_col())\nfired_2012\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#>            rounds_fired prop   n\n#> 1    1 to less than 100   43 701\n#> 2 100 to less than 1000   26 423\n#> 3 1000 to less than 10k   18 291\n#> 4  10k to less than 50k    7 106\n#> 5           50k or more    4  66\n#> 6            Don't know    2  26\n```\n\n\n:::\n:::\n\n\nI got a warning about a unknown level `7` because no respondent refused\nan answer. But this is not important. I could either choose to not\nrecode level `7` or turn warning off in the chunk option --- or simply\nto ignore the warning.\n:::\n:::\n\n###### Sex\n\n::: my-r-code\n::: my-r-code-header\n::: {#cnj-chap03-recode-sex}\n: Recode sex variable `RIAGENDR` from NHANES data 2011-2012\n:::\n:::\n\n::: my-r-code-container\n\n::: {.cell}\n\n```{.r .cell-code}\nnhanes_2012_clean3 <- nhanes_2012_clean2 |> \n    dplyr::mutate(RIAGENDR = forcats::as_factor(RIAGENDR)) |> \n    dplyr::mutate(RIAGENDR = forcats::fct_recode(RIAGENDR,\n                 \"Male\" = '1',\n                 \"Female\" = '2')\n    ) |> \n    dplyr::rename(sex = RIAGENDR) |> \n    dplyr::relocate(sex, .after = rounds_fired)\n\nnhanes_2012_clean3 |> \n    janitor::tabyl(sex) |> \n    janitor::adorn_pct_formatting()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#>     sex    n percent\n#>    Male 4663   49.8%\n#>  Female 4701   50.2%\n```\n\n\n:::\n:::\n\n:::\n:::\n\n###### Ear plugs\n\n::: my-r-code\n::: my-r-code-header\n::: {#cnj-chap03-recode-ear-plugs}\n: Recode ear plugs variable `AUQ320` from NHANES data 2011-2012\n:::\n:::\n\n::: my-r-code-container\n\n::: {.cell}\n\n```{.r .cell-code}\nnhanes_2012_clean4 <- nhanes_2012_clean3 |> \n    dplyr::mutate(AUQ320 = forcats::as_factor(AUQ320)) |> \n    dplyr::mutate(AUQ320 = forcats::fct_recode(AUQ320,\n        \"Always\" = \"1\",\n        \"Usually\" = \"2\",\n        \"About half the time\" = \"3\",\n        \"Seldom\" = \"4\",\n        \"Never\" = \"5\",\n        # \"Refused to answer\" = \"7\", # nobody refused\n        \"Don't know\" = \"9\")\n    ) |> \n    dplyr::rename(ear_plugs = AUQ320) |> \n    dplyr::relocate(ear_plugs, .after = gun_use)\n\nbase::saveRDS(nhanes_2012_clean4, \n              \"data/chap03/nhanes_2012_clean.rds\")\n\nnhanes_2012_clean4 |> \n    janitor::tabyl(ear_plugs) |> \n    janitor::adorn_pct_formatting()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#>            ear_plugs    n percent valid_percent\n#>               Always  583    6.2%         36.1%\n#>              Usually  152    1.6%          9.4%\n#>  About half the time  123    1.3%          7.6%\n#>               Seldom  110    1.2%          6.8%\n#>                Never  642    6.9%         39.8%\n#>           Don't know    3    0.0%          0.2%\n#>                 <NA> 7751   82.8%             -\n```\n\n\n:::\n:::\n\n\n\n:::\n:::\n\n###### Guns exported\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-chap03-recode-guns-exported}\n: Recode guns exported from a PDF report by the <a class='glossary' title='Bureau of Alcohol, Tobacco, Firearms and Explosives (ATF): ATF’s responsibilities include the investigation and prevention of federal offenses involving the unlawful use, manufacture, and possession of firearms and explosives; acts of arson and bombings; and illegal trafficking of alcohol and tobacco products. The ATF also regulates, via licensing, the sale, possession, and transportation of firearms, ammunition, and explosives in interstate commerce. (ATF)'>ATF</a>\n::::::\n:::\n::::{.my-r-code-container}\n\n::: {#lst-chap03-recode-guns-exported}\n\n::: {.cell}\n\n```{.r .cell-code}\nguns_exported_2017 <- base::readRDS(\"data/chap03/guns_exported_2017.rds\")\n\nlookup_export <- c(Year = \"V1\",\n                   Pistols = \"V2\",\n                   Revolvers = \"V3\",\n                   Rifles = \"V4\",\n                   Shotguns = \"V5\",\n                   Misc = \"V6\",\n                   Total = \"V7\")\n\nguns_exported_clean <- dplyr::rename(\n    tibble::as_tibble(guns_exported_2017), \n    dplyr::all_of(lookup_export)\n    ) |> \n    \n    ## comma separated character columns to numeric\n    dplyr::mutate(dplyr::across(2:7, \n        function(x)\n            { base::as.numeric(as.character(base::gsub(\",\", \"\", x))) })\n        ) |> \n\n    ## add Pistols and Revolvers to Handguns\n    dplyr::mutate(Handguns = Pistols + Revolvers) |> \n    \n    ## specify the same order for all three data frames\n    dplyr::select(-c(Pistols, Revolvers)) |> \n    dplyr::relocate(c(Year, Handguns, Rifles, \n                      Shotguns, Misc, Total))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n#> Warning: The `x` argument of `as_tibble.matrix()` must have unique column names if\n#> `.name_repair` is omitted as of tibble 2.0.0.\n#> ℹ Using compatibility `.name_repair`.\n```\n\n\n:::\n\n```{.r .cell-code}\nsave_data_file(\"chap03\", guns_exported_clean, \"guns_exported_clean.rds\")\n\nutils::str(guns_exported_clean)\nskimr::skim(guns_exported_clean)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> tibble [32 × 6] (S3: tbl_df/tbl/data.frame)\n#>  $ Year    : chr [1:32] \"1986\" \"1987\" \"1988\" \"1989\" ...\n#>  $ Handguns: num [1:32] 121082 159552 131859 118464 180218 ...\n#>  $ Rifles  : num [1:32] 37224 42161 53896 73247 71834 ...\n#>  $ Shotguns: num [1:32] 58943 76337 68699 67559 104250 ...\n#>  $ Misc    : num [1:32] 199 9995 2728 2012 5323 ...\n#>  $ Total   : num [1:32] 217448 288045 257182 261282 361625 ...\n```\n\n\n:::\n\n::: {.cell-output-display}\n\nTable: Data summary\n\n|                         |                    |\n|:------------------------|:-------------------|\n|Name                     |guns_exported_clean |\n|Number of rows           |32                  |\n|Number of columns        |6                   |\n|_______________________  |                    |\n|Column type frequency:   |                    |\n|character                |1                   |\n|numeric                  |5                   |\n|________________________ |                    |\n|Group variables          |None                |\n\n\n**Variable type: character**\n\n|skim_variable | n_missing| complete_rate| min| max| empty| n_unique| whitespace|\n|:-------------|---------:|-------------:|---:|---:|-----:|--------:|----------:|\n|Year          |         0|             1|   4|   4|     0|       32|          0|\n\n\n**Variable type: numeric**\n\n|skim_variable | n_missing| complete_rate|      mean|       sd|     p0|       p25|      p50|       p75|   p100|hist  |\n|:-------------|---------:|-------------:|---------:|--------:|------:|---------:|--------:|---------:|------:|:-----|\n|Handguns      |         0|             1| 130703.47| 60973.09|  39081|  81605.00| 138057.5| 172895.25| 297100|▇▃▇▁▁ |\n|Rifles        |         0|             1|  86827.50| 37709.88|  37224|  62492.25|  77941.0|  92641.50| 207934|▆▇▁▂▁ |\n|Shotguns      |         0|             1|  64981.97| 37306.30|  18797|  36113.00|  56324.5|  87122.00| 171475|▇▅▃▁▁ |\n|Misc          |         0|             1|   8057.84|  7633.02|    199|   2505.50|   5689.0|  10987.25|  34022|▇▃▂▁▁ |\n|Total         |         0|             1| 290570.78| 99914.95| 139920| 204422.50| 281317.5| 380893.75| 488300|▇▆▅▆▃ |\n\n\n:::\n:::\n\n\nRecoded: Guns exported from a PDF report by the <a class='glossary' title='Bureau of Alcohol, Tobacco, Firearms and Explosives (ATF): ATF’s responsibilities include the investigation and prevention of federal offenses involving the unlawful use, manufacture, and possession of firearms and explosives; acts of arson and bombings; and illegal trafficking of alcohol and tobacco products. The ATF also regulates, via licensing, the sale, possession, and transportation of firearms, ammunition, and explosives in interstate commerce. (ATF)'>ATF</a>\n\n:::\n***\n\nI have recoded the data in several ways:\n\n    - I turned the resulted matrices from the {**tabulizer**} package into tibbles.\n    - Now I could rename all the columns with one named vector `lookup_export`.\n    - All the columns are of character type. Before I could change the appropriate column to numeric I had to remove the comma for big numbers, otherwise the base::as-numeric() function would not have worked.\n    - I added `Pistols` and `Revolvers` to `Handguns`, because the dataset about imported guns have only this category.\n    - Finnaly I relocated the columns to get the same structure in all data frames.\n\n::::\n:::::\n\n###### Guns imported\n\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-chap03-recode-guns-imported}\n: Recode guns imported from a PDF by the <a class='glossary' title='Bureau of Alcohol, Tobacco, Firearms and Explosives (ATF): ATF’s responsibilities include the investigation and prevention of federal offenses involving the unlawful use, manufacture, and possession of firearms and explosives; acts of arson and bombings; and illegal trafficking of alcohol and tobacco products. The ATF also regulates, via licensing, the sale, possession, and transportation of firearms, ammunition, and explosives in interstate commerce. (ATF)'>ATF</a>\n::::::\n:::\n::::{.my-r-code-container}\n\n:::{#lst-chap03-recode-guns-imported}\n\n::: {.cell}\n\n```{.r .cell-code}\nguns_imported_2018 <-  base::readRDS(\"data/chap03/guns_imported_2018.rds\")\n\nlookup_import <- c(Year = \"V1\",\n            Shotguns = \"V2\",\n            Rifles = \"V3\",\n            Handguns = \"V4\",\n            Total = \"V5\")\n\n## reduce the reported period for all file from 1980 to 2017\nguns_imported_clean <- dplyr::rename(\n    tibble::as_tibble(guns_imported_2018), \n    dplyr::all_of(lookup_import)\n    ) |> \n    \n    ## comma separated character columns to numeric\n    dplyr::mutate(dplyr::across(2:5, \n        function(x)\n            { base::as.numeric(as.character(base::gsub(\",\", \"\", x))) })\n        ) |> \n\n    dplyr::slice(1:dplyr::n() - 1) |> \n    dplyr::mutate(Misc = 0) |> \n    dplyr::relocate(c(Year, Handguns, Rifles, \n                      Shotguns, Misc, Total))\n\n\nsave_data_file(\"chap03\", guns_imported_clean, \"guns_imported_clean.rds\")\n\nutils::str(guns_imported_clean)\nskimr::skim(guns_imported_clean)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> tibble [32 × 6] (S3: tbl_df/tbl/data.frame)\n#>  $ Year    : chr [1:32] \"1986\" \"1987\" \"1988\" \"1989\" ...\n#>  $ Handguns: num [1:32] 231000 342113 621620 440132 448517 ...\n#>  $ Rifles  : num [1:32] 269000 413780 282640 293152 203505 ...\n#>  $ Shotguns: num [1:32] 201000 307620 372008 274497 191787 ...\n#>  $ Misc    : num [1:32] 0 0 0 0 0 0 0 0 0 0 ...\n#>  $ Total   : num [1:32] 701000 1063513 1276268 1007781 843809 ...\n```\n\n\n:::\n\n::: {.cell-output-display}\n\nTable: Data summary\n\n|                         |                    |\n|:------------------------|:-------------------|\n|Name                     |guns_imported_clean |\n|Number of rows           |32                  |\n|Number of columns        |6                   |\n|_______________________  |                    |\n|Column type frequency:   |                    |\n|character                |1                   |\n|numeric                  |5                   |\n|________________________ |                    |\n|Group variables          |None                |\n\n\n**Variable type: character**\n\n|skim_variable | n_missing| complete_rate| min| max| empty| n_unique| whitespace|\n|:-------------|---------:|-------------:|---:|---:|-----:|--------:|----------:|\n|Year          |         0|             1|   4|   4|     0|       32|          0|\n\n\n**Variable type: numeric**\n\n|skim_variable | n_missing| complete_rate|      mean|        sd|     p0|       p25|     p50|       p75|    p100|hist  |\n|:-------------|---------:|-------------:|---------:|---------:|------:|---------:|-------:|---------:|-------:|:-----|\n|Handguns      |         0|             1| 1228289.6|  959074.1| 231000|  486461.0|  858514| 1739603.2| 3671837|▇▂▂▁▁ |\n|Rifles        |         0|             1|  613776.0|  390186.3| 198191|  290524.0|  556201|  797873.2| 1592522|▇▅▃▁▂ |\n|Shotguns      |         0|             1|  433837.8|  233098.7| 106296|  239432.2|  417866|  570714.2|  973465|▇▆▆▃▂ |\n|Misc          |         0|             1|       0.0|       0.0|      0|       0.0|       0|       0.0|       0|▁▁▇▁▁ |\n|Total         |         0|             1| 2275903.5| 1419964.9| 701000| 1049580.0| 1895880| 3095591.8| 5539539|▇▂▂▂▂ |\n\n\n:::\n:::\n\n\nRecoded: Guns imported from a PDF by the <a class='glossary' title='Bureau of Alcohol, Tobacco, Firearms and Explosives (ATF): ATF’s responsibilities include the investigation and prevention of federal offenses involving the unlawful use, manufacture, and possession of firearms and explosives; acts of arson and bombings; and illegal trafficking of alcohol and tobacco products. The ATF also regulates, via licensing, the sale, possession, and transportation of firearms, ammunition, and explosives in interstate commerce. (ATF)'>ATF</a>\n:::\n***\n\nHere applies similar note as in the previous tab:\n\n    - I turned the resulted matrices from the {**tabulizer**} package into tibbles.\n    - Now I could rename all the columns with one named vector `lookup_import`.\n    - All the columns are of character type. Before I could change the appropriate column to numeric I had to remove the comma for big numbers, otherwise the base::as-numeric() function would not have worked.\n    - I relocated the columns to get the same structure in all data frames.\n\n::::\n:::::\n\n###### Gun production\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-chap03-recode-gun-production}\n: Recode firearms production dataset 1986-2019 from USAFact.org\n::::::\n:::\n::::{.my-r-code-container}\n\n::: {.cell}\n\n```{.r .cell-code}\nguns_manufactured_2019 <- base::readRDS(\"data/chap03/guns_manufactured_2019.rds\")\n\nguns_manufactured_2019_clean <- guns_manufactured_2019 |> \n    dplyr::select(-c(2:7)) |> \n    dplyr::slice(c(1,3:7)) |> \n    ## strange: `1986` is a character variable\n    dplyr::mutate(`1986` = as.numeric(`1986`))\n\nbase::saveRDS(guns_manufactured_2019_clean, \n              \"data/chap03/guns_manufactured_2019_clean.rds\")\n\nutils::str(guns_manufactured_2019_clean)\nskimr::skim(guns_manufactured_2019_clean)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> spc_tbl_ [6 × 35] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n#>  $ Years: chr [1:6] \"Firearms manufactured (Items)\" \"Pistols (Items)\" \"Revolvers (Items)\" \"Shotguns (Items)\" ...\n#>  $ 1986 : num [1:6] 3040934 662973 761414 641482 4558 ...\n#>  $ 1987 : num [1:6] 3559663 964561 722512 857949 6980 ...\n#>  $ 1988 : num [1:6] 3963877 1101011 754744 928070 35345 ...\n#>  $ 1989 : num [1:6] 4418393 1404753 628573 935541 42126 ...\n#>  $ 1990 : num [1:6] 3959968 1371427 470495 848948 57434 ...\n#>  $ 1991 : num [1:6] 3563106 1378252 456966 828426 15980 ...\n#>  $ 1992 : num [1:6] 4175836 1669537 469413 1018204 16849 ...\n#>  $ 1993 : num [1:6] 5055637 2093362 562292 1144940 81349 ...\n#>  $ 1994 : num [1:6] 5173217 2004298 586450 1254926 10936 ...\n#>  $ 1995 : num [1:6] 4316342 1195284 527664 1173645 8629 ...\n#>  $ 1996 : num [1:6] 3854439 987528 498944 925732 17920 ...\n#>  $ 1997 : num [1:6] 3593504 1036077 370428 915978 19680 ...\n#>  $ 1998 : num [1:6] 3713590 960365 324390 868639 24506 ...\n#>  $ 1999 : num [1:6] 4047747 995446 335784 1106995 39837 ...\n#>  $ 2000 : num [1:6] 3793541 962901 318960 898442 30196 ...\n#>  $ 2001 : num [1:6] 2932655 626836 320143 679813 21309 ...\n#>  $ 2002 : num [1:6] 3366895 741514 347070 741325 21700 ...\n#>  $ 2003 : num [1:6] 3308404 811660 309364 726078 30978 ...\n#>  $ 2004 : num [1:6] 3099025 728511 294099 731769 19508 ...\n#>  $ 2005 : num [1:6] 3241494 803425 274205 709313 23179 ...\n#>  $ 2006 : num [1:6] 3653324 1021260 385069 714618 35872 ...\n#>  $ 2007 : num [1:6] 3922613 1219664 391334 645231 55461 ...\n#>  $ 2008 : num [1:6] 4498944 1609381 431753 630710 92564 ...\n#>  $ 2009 : num [1:6] 5555818 1868258 547195 752699 138815 ...\n#>  $ 2010 : num [1:6] 5459240 2258450 558927 743378 67929 ...\n#>  $ 2011 : num [1:6] 6541886 2598133 572857 862401 190407 ...\n#>  $ 2012 : num [1:6] 8578610 3487883 667357 949010 306154 ...\n#>  $ 2013 : num [1:6] 10844792 4441726 725282 1203072 495142 ...\n#>  $ 2014 : num [1:6] 9050626 3633454 744047 935411 358165 ...\n#>  $ 2015 : num [1:6] 9358661 3557199 885259 777273 447131 ...\n#>  $ 2016 : num [1:6] 11497441 4720075 856291 848617 833123 ...\n#>  $ 2017 : num [1:6] 8327792 3691010 720917 653139 758634 ...\n#>  $ 2018 : num [1:6] 9052628 3881158 664835 536126 1089973 ...\n#>  $ 2019 : num [1:6] 7011945 3046013 580601 480735 946929 ...\n#>  - attr(*, \"spec\")=List of 3\n#>   ..$ cols   :List of 41\n#>   .. ..$ Years: list()\n#>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_character\" \"collector\"\n#>   .. ..$ 1980 : list()\n#>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_character\" \"collector\"\n#>   .. ..$ 1981 : list()\n#>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_character\" \"collector\"\n#>   .. ..$ 1982 : list()\n#>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_character\" \"collector\"\n#>   .. ..$ 1983 : list()\n#>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_character\" \"collector\"\n#>   .. ..$ 1984 : list()\n#>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_character\" \"collector\"\n#>   .. ..$ 1985 : list()\n#>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_character\" \"collector\"\n#>   .. ..$ 1986 : list()\n#>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_character\" \"collector\"\n#>   .. ..$ 1987 : list()\n#>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_double\" \"collector\"\n#>   .. ..$ 1988 : list()\n#>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_double\" \"collector\"\n#>   .. ..$ 1989 : list()\n#>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_double\" \"collector\"\n#>   .. ..$ 1990 : list()\n#>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_double\" \"collector\"\n#>   .. ..$ 1991 : list()\n#>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_double\" \"collector\"\n#>   .. ..$ 1992 : list()\n#>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_double\" \"collector\"\n#>   .. ..$ 1993 : list()\n#>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_double\" \"collector\"\n#>   .. ..$ 1994 : list()\n#>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_double\" \"collector\"\n#>   .. ..$ 1995 : list()\n#>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_double\" \"collector\"\n#>   .. ..$ 1996 : list()\n#>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_double\" \"collector\"\n#>   .. ..$ 1997 : list()\n#>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_double\" \"collector\"\n#>   .. ..$ 1998 : list()\n#>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_double\" \"collector\"\n#>   .. ..$ 1999 : list()\n#>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_double\" \"collector\"\n#>   .. ..$ 2000 : list()\n#>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_double\" \"collector\"\n#>   .. ..$ 2001 : list()\n#>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_double\" \"collector\"\n#>   .. ..$ 2002 : list()\n#>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_double\" \"collector\"\n#>   .. ..$ 2003 : list()\n#>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_double\" \"collector\"\n#>   .. ..$ 2004 : list()\n#>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_double\" \"collector\"\n#>   .. ..$ 2005 : list()\n#>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_double\" \"collector\"\n#>   .. ..$ 2006 : list()\n#>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_double\" \"collector\"\n#>   .. ..$ 2007 : list()\n#>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_double\" \"collector\"\n#>   .. ..$ 2008 : list()\n#>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_double\" \"collector\"\n#>   .. ..$ 2009 : list()\n#>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_double\" \"collector\"\n#>   .. ..$ 2010 : list()\n#>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_double\" \"collector\"\n#>   .. ..$ 2011 : list()\n#>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_double\" \"collector\"\n#>   .. ..$ 2012 : list()\n#>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_double\" \"collector\"\n#>   .. ..$ 2013 : list()\n#>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_double\" \"collector\"\n#>   .. ..$ 2014 : list()\n#>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_double\" \"collector\"\n#>   .. ..$ 2015 : list()\n#>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_double\" \"collector\"\n#>   .. ..$ 2016 : list()\n#>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_double\" \"collector\"\n#>   .. ..$ 2017 : list()\n#>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_double\" \"collector\"\n#>   .. ..$ 2018 : list()\n#>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_double\" \"collector\"\n#>   .. ..$ 2019 : list()\n#>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_double\" \"collector\"\n#>   ..$ default: list()\n#>   .. ..- attr(*, \"class\")= chr [1:2] \"collector_guess\" \"collector\"\n#>   ..$ delim  : chr \",\"\n#>   ..- attr(*, \"class\")= chr \"col_spec\"\n#>  - attr(*, \"problems\")=<externalptr>\n```\n\n\n:::\n\n::: {.cell-output-display}\n\nTable: Data summary\n\n|                         |                             |\n|:------------------------|:----------------------------|\n|Name                     |guns_manufactured_2019_cl... |\n|Number of rows           |6                            |\n|Number of columns        |35                           |\n|_______________________  |                             |\n|Column type frequency:   |                             |\n|character                |1                            |\n|numeric                  |34                           |\n|________________________ |                             |\n|Group variables          |None                         |\n\n\n**Variable type: character**\n\n|skim_variable | n_missing| complete_rate| min| max| empty| n_unique| whitespace|\n|:-------------|---------:|-------------:|---:|---:|-----:|--------:|----------:|\n|Years         |         0|             1|  14|  29|     0|        6|          0|\n\n\n**Variable type: numeric**\n\n|skim_variable | n_missing| complete_rate|      mean|      sd|     p0|      p25|       p50|       p75|     p100|hist  |\n|:-------------|---------:|-------------:|---------:|-------:|------:|--------:|---------:|---------:|--------:|:-----|\n|1986          |         0|             1| 1013644.7| 1044520|   4558| 646854.8|  712193.5|  918233.8|  3040934|▂▇▁▁▂ |\n|1987          |         0|             1| 1186554.3| 1218822|   6980| 756371.2|  911255.0|  996886.0|  3559663|▂▇▁▁▂ |\n|1988          |         0|             1| 1321292.3| 1355892|  35345| 798075.5| 1014540.5| 1133783.0|  3963877|▅▇▁▁▂ |\n|1989          |         0|             1| 1472797.7| 1531902|  42126| 705315.0| 1170147.0| 1406738.2|  4418393|▅▇▁▁▂ |\n|1990          |         0|             1| 1319989.3| 1379959|  57434| 565108.2| 1030306.0| 1331486.2|  3959968|▅▇▁▁▂ |\n|1991          |         0|             1| 1187702.0| 1249591|  15980| 549831.0|  855954.0| 1254559.5|  3563106|▅▇▁▁▂ |\n|1992          |         0|             1| 1391945.3| 1473834|  16849| 602518.0| 1010018.5| 1506703.8|  4175836|▅▇▁▁▂ |\n|1993          |         0|             1| 1685212.3| 1783997|  81349| 707954.0| 1159317.0| 1863445.0|  5055637|▇▇▃▁▃ |\n|1994          |         0|             1| 1724405.7| 1821553|  10936| 753569.0| 1285766.5| 1832375.2|  5173217|▅▇▁▁▂ |\n|1995          |         0|             1| 1438780.7| 1502410|   8629| 689159.2| 1184464.5| 1357161.0|  4316342|▅▇▁▁▂ |\n|1996          |         0|             1| 1284813.0| 1346281|  17920| 605641.0|  956630.0| 1315118.2|  3854439|▅▇▁▁▂ |\n|1997          |         0|             1| 1197834.7| 1258599|  19680| 506815.5|  976027.5| 1197525.0|  3593504|▅▇▁▁▂ |\n|1998          |         0|             1| 1237863.3| 1321963|  24506| 460452.2|  914502.0| 1391858.8|  3713590|▇▇▃▁▃ |\n|1999          |         0|             1| 1349249.0| 1432202|  39837| 500699.5| 1051220.5| 1454012.5|  4047747|▅▇▁▁▂ |\n|2000          |         0|             1| 1264513.7| 1352038|  30196| 463830.5|  930671.5| 1428006.8|  3793541|▇▇▃▁▃ |\n|2001          |         0|             1|  977551.7| 1046414|  21309| 396816.2|  653324.5| 1133368.8|  2932655|▇▇▃▁▃ |\n|2002          |         0|             1| 1122298.3| 1207898|  21700| 445633.8|  741419.5| 1321843.0|  3366895|▇▇▃▁▃ |\n|2003          |         0|             1| 1102801.3| 1181269|  30978| 413542.5|  768869.0| 1275658.0|  3308404|▇▇▃▁▃ |\n|2004          |         0|             1| 1033008.3| 1105477|  19508| 402702.0|  730140.0| 1176795.8|  3099025|▇▇▃▁▃ |\n|2005          |         0|             1| 1080498.0| 1164096|  23179| 382982.0|  756369.0| 1274385.2|  3241494|▇▇▃▁▃ |\n|2006          |         0|             1| 1217774.7| 1295505|  35872| 467456.2|  867939.0| 1377693.8|  3653324|▇▂▂▁▂ |\n|2007          |         0|             1| 1307537.7| 1398868|  55461| 454808.2|  932447.5| 1513108.2|  3922613|▇▂▂▁▂ |\n|2008          |         0|             1| 1499648.0| 1608622|  92564| 481492.2| 1120045.5| 1703247.2|  4498944|▇▅▁▁▂ |\n|2009          |         0|             1| 1851939.3| 1986052| 138815| 598571.0| 1310478.5| 2153702.8|  5555818|▇▅▁▁▂ |\n|2010          |         0|             1| 1819746.7| 1962427|  67929| 605039.8| 1286967.0| 2151476.5|  5459240|▇▂▂▁▂ |\n|2011          |         0|             1| 2180628.7| 2345097| 190407| 645243.0| 1590244.5| 2528121.8|  6541886|▇▅▁▁▂ |\n|2012          |         0|             1| 2859536.7| 3103979| 306154| 737770.2| 2058608.0| 3407963.8|  8578610|▇▅▁▁▂ |\n|2013          |         0|             1| 3614930.7| 3923969| 495142| 844729.5| 2591321.0| 4326187.0| 10844792|▇▅▁▁▂ |\n|2014          |         0|             1| 3016875.3| 3270622| 358165| 791888.0| 2157480.0| 3569977.8|  9050626|▇▅▁▁▂ |\n|2015          |         0|             1| 3119553.7| 3378333| 447131| 804269.5| 2221229.0| 3658149.0|  9358661|▇▅▁▁▂ |\n|2016          |         0|             1| 3832480.3| 4158420| 833123| 850535.5| 2547813.0| 4599890.0| 11497441|▇▅▁▁▂ |\n|2017          |         0|             1| 2775930.7| 2984401| 653139| 730346.2| 1631363.0| 3394280.5|  8327792|▇▅▁▁▂ |\n|2018          |         0|             1| 3017542.7| 3243302| 536126| 771119.5| 1985254.5| 3631002.5|  9052628|▇▅▁▁▂ |\n|2019          |         0|             1| 2337315.0| 2488560| 480735| 672183.0| 1452298.0| 2773926.5|  7011945|▇▅▁▁▂ |\n\n\n:::\n:::\n\n\n::::\n:::::\n\n###### Guns manufactured\n\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-chap03-recode-guns-manufactured}\n: Recode the guns manufactured data frame to get an appropriate structure to add the imported and subtract the exported data.\n::::::\n:::\n::::{.my-r-code-container}\n\n::: {#lst-chap03-recode-guns-manufactured}\n\n::: {.cell}\n\n```{.r .cell-code}\nguns_manufactured_clean <- base::readRDS(\"data/chap03/guns_manufactured_2019_clean.rds\")\n\nlookup_manufactured <- c(\n    Total = \"Firearms manufactured (Items)\",\n    Pistols = \"Pistols (Items)\",\n    Rifles = \"Rifles (Items)\",\n    Shotguns = \"Shotguns (Items)\",\n    Revolvers = \"Revolvers (Items)\",\n    Misc = \"Misc. Firearms (Items)\"\n    )\n\nguns_manufactured_clean  <-  guns_manufactured_clean |>\n    dplyr::select(-c(`2018`, `2019`)) |>\n    tidyr::pivot_longer(\n        cols = !Years,\n        names_to = \"Year\",\n        values_to = \"count\"\n    ) |>\n    tidyr::pivot_wider(\n        names_from = Years,\n        values_from = count\n    ) |> \n    dplyr::rename(\n        dplyr::all_of(lookup_manufactured)\n    ) |> \n    dplyr::mutate(Handguns = Pistols + Revolvers) |> \n    dplyr::select(-c(Pistols, Revolvers)) |> \n    dplyr::relocate(c(Year, Handguns, Rifles, \n                      Shotguns, Misc, Total))\n\nsave_data_file(\"chap03\", guns_manufactured_clean, \"guns_manufactured_clean.rds\")\n\nutils::str(guns_manufactured_clean)\nskimr::skim(guns_manufactured_clean)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> tibble [32 × 6] (S3: tbl_df/tbl/data.frame)\n#>  $ Year    : chr [1:32] \"1986\" \"1987\" \"1988\" \"1989\" ...\n#>  $ Handguns: num [1:32] 1424387 1687073 1855755 2033326 1841922 ...\n#>  $ Rifles  : num [1:32] 970507 1007661 1144707 1407400 1211664 ...\n#>  $ Shotguns: num [1:32] 641482 857949 928070 935541 848948 ...\n#>  $ Misc    : num [1:32] 4558 6980 35345 42126 57434 ...\n#>  $ Total   : num [1:32] 3040934 3559663 3963877 4418393 3959968 ...\n```\n\n\n:::\n\n::: {.cell-output-display}\n\nTable: Data summary\n\n|                         |                        |\n|:------------------------|:-----------------------|\n|Name                     |guns_manufactured_clean |\n|Number of rows           |32                      |\n|Number of columns        |6                       |\n|_______________________  |                        |\n|Column type frequency:   |                        |\n|character                |1                       |\n|numeric                  |5                       |\n|________________________ |                        |\n|Group variables          |None                    |\n\n\n**Variable type: character**\n\n|skim_variable | n_missing| complete_rate| min| max| empty| n_unique| whitespace|\n|:-------------|---------:|-------------:|---:|---:|-----:|--------:|----------:|\n|Year          |         0|             1|   4|   4|     0|       32|          0|\n\n\n**Variable type: numeric**\n\n|skim_variable | n_missing| complete_rate|      mean|      sd|      p0|       p25|       p50|       p75|     p100|hist  |\n|:-------------|---------:|-------------:|---------:|-------:|-------:|---------:|---------:|---------:|--------:|:-----|\n|Handguns      |         0|             1| 2294575.4| 1305428|  946979| 1387554.2| 1838570.0| 2696084.8|  5576366|▇▂▁▂▁ |\n|Rifles        |         0|             1| 1815044.8|  910422|  883482| 1276250.8| 1463938.5| 1935129.8|  4239335|▇▂▁▁▁ |\n|Shotguns      |         0|             1|  864117.9|  172169|  630710|  730346.2|  853448.5|  935443.5|  1254926|▇▅▅▁▂ |\n|Misc          |         0|             1|  134637.4|  216279|    4558|   19637.0|   35608.5|  104126.8|   833123|▇▁▁▁▁ |\n|Total         |         0|             1| 5108375.4| 2388668| 2932655| 3585904.5| 4005812.0| 5483384.5| 11497441|▇▂▁▂▁ |\n\n\n:::\n:::\n\n\nRecoded: Prepare manufactured data to get an appropriate structure to add the imported and subtract the exported data.\n:::\n::::\n:::::\n\n\n\n###### Guns total\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-chap03-guns-total}\n: Manufactured guns - exported guns + imported guns\n::::::\n:::\n::::{.my-r-code-container}\n\n::: {#lst-chap03-guns-total}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nguns_manufactured_clean <-  base::readRDS(\"data/chap03/guns_manufactured_clean.rds\")\nguns_exported_clean <- base::readRDS(\"data/chap03/guns_exported_clean.rds\")\nguns_imported_clean <- base::readRDS(\"data/chap03/guns_imported_clean.rds\")\n\nguns_total_temp_1 <- guns_manufactured_clean[, 2:6] - guns_exported_clean[, 2:6]\nguns_total_temp_2 <- guns_total_temp_1[, 1:5] + guns_imported_clean[, 2:6]\n\nguns_total <- dplyr::bind_cols(guns_manufactured_clean[, 1], guns_total_temp_2)\n\nbase::saveRDS(guns_total, \"data/chap03/guns_total.rds\")\n\nguns_total\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> # A tibble: 32 × 6\n#>    Year  Handguns  Rifles Shotguns  Misc   Total\n#>    <chr>    <dbl>   <dbl>    <dbl> <dbl>   <dbl>\n#>  1 1986   1534305 1202283   783539  4359 3524486\n#>  2 1987   1869634 1379280  1089232 -3015 4335131\n#>  3 1988   2345516 1373451  1231379 32617 4982963\n#>  4 1989   2354994 1627305  1142479 40114 5164892\n#>  5 1990   2110221 1343335   936485 52111 4442152\n#>  6 1991   1939116 1103700   826766 13016 3882598\n#>  7 1992   2930536 2335007  1341010 12202 6618755\n#>  8 1993   3709645 2671944  1219579 66586 7667754\n#>  9 1994   3333022 2082640  1226268  7716 6649646\n#> 10 1995   2199438 1581471  1208470  6146 4995525\n#> # ℹ 22 more rows\n```\n\n\n:::\n:::\n\nManufactured guns - exported guns + imported guns\n:::\n\n***\n\nAs a first approximation to get guns data circulated in the US I have taken the manufactured numbers, subtracted the exported guns and added the imported guns.\n\nI have already listed some reasons why the above result is still not the real amount of circulated guns per year in the US (see: @not-chap03-circulated-guns-us)\n\n::::\n:::::\n\n\n:::\n:::\n:::\n\n\n### Classification of Graphs\n\n#### Introduction\n\nThere are different possible classification of graph types. In the book\nHarris uses as major criteria the types and numbers of variables. This\nis very sensitive subject orientated arrangement addressed at the\nstatistics novice with the main question: What type of graph should I\nuse for my data?\n\nThe disadvantage of the subject oriented selection criteria is that\nthere some graph types (e.g. the bar chart) that appear several times\nunder different headings. Explaining the graph types is therefore\nsomewhat redundant on the one hand and piecemeal on the other hand.\n\nAnother classification criteria would be the type of the graph itself.\nUnder this pattern one could concentrate of the special features for\neach graph type. One of these features would be their applicability\nreferring the variable types.\n\n#### Lists of different categorization approaches\n\n::: my-example\n::: my-example-header\n::: {#exm-chap03-categorization-approaches}\n: Five different categorization approaches\n:::\n:::\n\n::: my-example-container\n::: panel-tabset\n###### Variables\n\n::: {#bul-chap03-graphs-var-types}\n1.  **One variable**\n    -   *Categorical* (achievement 1)\n        -   Bar chart (@sec-chap03-bar-chart-1)\n        -   Pie chart (@sec-chap03-pie-chart)\n        -   Waffle chart (@sec-chap03-waffle-chart)\n    -   *Continuous* (achievement 2)\n        -   Histogram (@sec-chap03-histogram)\n        -   Density plot (@sec-chap03-density-plot)\n        -   Box plot (@sec-chap03-box-plot-1)\n        -   Violin plot (see under two variables:\n            @sec-chap03-violin-plot)\n2.  **Two variables** (achievement 3)\n    -   *Both categorical*\n        -   Mosaic plot (@sec-chap03-mosaic-plot)\n        -   Bar chart (@sec-chap03-bar-chart-2)\n            -   stacked\n            -   grouped\n    -   *Categorical & continuous*\n        -   Bar chart (@sec-chap03-bar-chart-3)\n        -   Point chart (@sec-chap03-point-chart)\n        -   Box plot (@sec-chap03-box-plot-2)\n        -   Violin plot (@sec-chap03-violin-plot)\n    -   *Both continuous*\n        -   Line graph (@sec-chap03-line-graph)\n        -   Scatterplot (@sec-chap03-scatterplot)\n\nBook variable types and their corresponding graph types\n:::\n\n------------------------------------------------------------------------\n\nYou can see the redundancy when you categorize the graph types by\nvariable types. But the advantage is, that your choice of graph is\ndriven by essential statistical aspects.\n\nThis chapter will follow the book and therefore it will present the same\norder in the explication of the graphs as in the book outlined.\n\n###### Graphs\n\n::: {#bul-chap03-graph-types}\n-   Bar chart\n-   Box plot\n-   Density plot\n-   Histogram\n-   Line plot\n-   Mosaic plot\n-   Pie chart\n-   Point chart\n-   Scatterplot\n-   Violin plot\n-   Waffle chart\n\nBook graph types sorted alphabetically\n:::\n\n------------------------------------------------------------------------\n\nThis is a very abridged list of graphs used for presentation of\nstatistical results. Although it is just a tiny selection of possible\ngraphs it contains those graphs that are most important, most used and\nmost well know types.\n\n###### R Charts\n\n::: {#bul-chap03-graph-types-r-charts}\n-   **Correlations**\n    -   Bubble\n    -   Contour plot\n    -   Correlogram\n    -   Heat map\n    -   Scatterplot\n-   **Distributions**\n    -   Beeswarm\n    -   Box plot\n    -   Density plot\n    -   Dot plot\n    -   Dumbbell\n    -   Histogram\n    -   Ridgeline\n    -   Violin plot\n-   **Evolution**\n    -   Area chart\n    -   Calendar\n    -   Candle stick\n    -   Line chart\n    -   Slope\n-   **Flow**\n    -   Alluvial\n    -   Chord\n    -   Sankey\n    -   Waterfall\n-   **Miscellaneous**\n    -   Art\n    -   Biology\n    -   Calendar\n    -   Computer & Games\n    -   Fun\n    -   Image Processing\n    -   Sports\n-   **Part of whole**\n    -   Bar chart\n    -   Dendogram\n    -   Donut chart\n    -   Mosaic chart\n    -   Parliament\n    -   Pie chart\n    -   Tree map\n    -   Venn diagram\n    -   Voronoi\n    -   Waffle chart\n-   **Ranking**\n    -   Bar chart\n    -   Bump chart\n    -   Lollipop\n    -   Parallel Coordinates\n    -   Radar chart\n    -   Word cloud\n-   **Spatial**\n    -   Base map\n    -   Cartogram\n    -   Choropleth\n    -   Interactive\n    -   Proportion symbol\n\nCategorization of graph types used by [R Chart](https://r-charts.com/)\n:::\n\n------------------------------------------------------------------------\n\nAlthough this list has only 8 categories it is in contrast to\n@bul-chap03-graph-types a more complete list of different graphs. It\nfeatures also not so well known graph types. Besides a miscellaneous\ncategory where the members of this group do not share a common feature\nthe graph are sorted in categorization schema that has --- with the\nexception of bar charts --- no redundancy, e.g. is almost a taxonomy of\ngraph types.\n\n###### From Data to Viz\n\n::: {#bul-chap03-graph-types-data-viz}\n-   **NUMERIC**\n    -   **One numeric variable**\n        -   Histogram\n        -   Density plot\n    -   **Two numeric variables**\n        -   *Not ordered*\n            -   Few points\n                -   Box plot\n                -   Histogram\n                -   Scatter plot\n            -   Many points\n                -   Violin plot\n                -   Density plot\n                -   Scatter with marginal point\n                -   2D density plot\n        -   *Ordered*\n            -   Connected scatter plot\n            -   Area plot\n            -   Line plot\n    -   **Three numeric variables**\n        -   *Not ordered*\n            -   Box plot\n            -   Violin plot\n            -   Bubble plot\n            -   3D scatter or surface\n        -   *Ordered*\n            -   Stacked area plot\n            -   Stream graph\n            -   Line plot\n            -   Area (SM)\n    -   **Several numeric variables**\n        -   *Not ordered*\n            -   Box plot\n            -   Violin plot\n            -   Ridge line\n            -   PCA\n            -   Correlogram\n            -   Heatmap\n            -   Dendogram\n        -   *Ordered*\n            -   Stacked area plot\n            -   Stream graph\n            -   Line plot\n            -   Area (SM)\n-   **CATEGORICAL**\n    -   **One categorical variable**\n        -   Bar plot\n        -   Lollipop\n        -   Waffle chart\n        -   Word cloud\n        -   Doughnut\n        -   Pie chart\n        -   Tree map\n        -   Circular packing\n    -   **Two or more categorical variables**\n        -   *Two independent lists*\n            -   Venn diagram\n        -   *Nested or hierarchical data set*\n            -   Tree map\n            -   Circular packing\n            -   Sunburst\n            -   Bar plot\n            -   Dendogram\n        -   *Subgroups*\n            -   Grouped scatter\n            -   Heat map\n            -   Lollipop\n            -   Grouped bar plot\n            -   Stacked bar plot\n            -   Parallel plot\n            -   Spider plot\n            -   Sankey diagram\n        -   *Adjacency*\n            -   Network\n            -   Chord\n            -   Arc\n            -   Sankey diagram\n            -   Heat map\n-   **NUMERIC & CATEGORICAL**\n    -   **One numeric & one categorical**\n        -   *One observation per group*\n            -   Box plot\n            -   Lollipop\n            -   Doughnut\n            -   Pie chart\n            -   Word cloud\n            -   Tree map\n            -   Circular packing\n            -   Waffle chart\n        -   *Several observations per group*\n            -   Box plot\n            -   Violin plot\n            -   Ridge line\n            -   Density plot\n            -   Histogram\n    -   **One categorical & several numeric**\n        -   *No order*\n            -   Group scatter\n            -   2D density\n            -   Box plot\n            -   Violin plot\n            -   PCA\n            -   Correlogram\n        -   *One numeric is ordered*\n            -   Stacked area\n            -   Area\n            -   Stream graph\n            -   Line plot\n            -   Connected scatter\n        -   *One value per group*\n            -   Grouped scatter\n            -   Heat map\n            -   Lollipop\n            -   Grouped bar plot\n            -   Stacked bar plot\n            -   Parallel plot\n            -   Spider plot\n            -   Sankey diagram\n    -   **Several categorical & one numeric**\n        -   *Subgroup*\n            -   One observation per group\n                -   One value per group\n                -   Grouped scatter\n                -   Heat map\n                -   Lollipop\n                -   Grouped bar plot\n                -   Stacked bar plot\n                -   Parallel plot\n                -   Spider plot\n                -   Sankey diagram\n            -   Several observations per group\n                -   Box plot\n                -   Violin plot\n        -   *Nested / Hierarchical ordered*\n            -   One observation per group\n                -   Bar plot\n                -   Dendogram\n                -   Sun burst\n                -   Tree map\n                -   Circular packing\n            -   Several observations per group\n                -   Box plot\n                -   Violin plot\n        -   *Adjacency*\n            -   Network diagram\n            -   Chord diagram\n            -   Arc diagram\n            -   Sankey diagram\n            -   Heat map\n-   **MAPS**\n    -   Map\n    -   Connection map\n    -   Choropleth\n    -   Map hexabin\n    -   Bubble map\n-   **NETWORK**\n    -   **Simple network**\n        -   Network\n        -   Chord diagram\n        -   Arc diagram\n        -   Sankey diagram\n        -   Heat map\n        -   Hive\n    -   **Nested or hierarchical network**\n        -   *No value*\n            -   Dendogram\n            -   Tree map\n            -   Circular packing\n            -   Sunburst\n            -   Sankey diagram\n        -   *Value for leaf*\n            -   Dendogram\n            -   Tree map\n            -   Circular packing\n            -   Sunburst\n            -   Sankey diagram\n        -   *Value for edges*\n            -   Dendogram\n            -   Sankey diagram\n            -   Chord diagram\n        -   *Value for connection* Hierarchical edge bundling\n-   **TIME SERIES**\n    -   **One series**\n        -   Box plot\n        -   Violin plot\n        -   Ridge line\n        -   Area\n        -   Line plot\n        -   Bar plot\n        -   Lollipop\n    -   **Several series**\n        -   Box plot\n        -   Violin plot\n        -   Ridge line\n        -   Heat map\n        -   Line plot\n        -   Stacked area\n        -   Stream graph\n\nCategorization of graph types used by [From Data to\nViz](https://www.data-to-viz.com/)\n:::\n\n------------------------------------------------------------------------\n\nThis is the same variable oriented approach as in the book but with much\nmore details and differentiation. It is cluttered with redundancies but\nshould be helpful for selecting an appropriate graph type for your data\nanalysis. And the interactive style on the web allows for a much better\norientation as implemented in the above list.\n\n###### Top 50\n\n::: {#bul-chap03-graph-types-top-50}\n-   **Correlation**\n    -   Scatterplot\n    -   Scatterplot With Encircling\n    -   Jitter Plot\n    -   Counts Chart\n    -   Bubble Plot\n    -   Animated Bubble Plot\n    -   Marginal Histogram / Boxplot\n    -   Correlogram\n-   **Deviation**\n    -   Diverging Bars\n    -   Diverging Lollipop Chart\n    -   Diverging Dot Plot\n    -   Area Chart\n-   **Ranking**\n    -   Ordered Bar Chart\n    -   Lollipop Chart\n    -   Dot Plot\n    -   Slope Chart\n    -   Dumbbell Plot\n-   **Distribution**\n    -   Histogram\n    -   Density Plot\n    -   Box Plot\n    -   Dot + Box Plot\n    -   Tufte Boxplot\n    -   Violin Plot\n    -   Population Pyramid\n-   **Composition**\n    -   Waffle Chart\n    -   Pie Chart\n    -   Treemap\n    -   Bar Chart\n-   **Change**\n    -   Time Series Plots\n        -   From a Data Frame\n        -   Format to Monthly X Axis\n        -   Format to Yearly X Axis\n        -   From Long Data Format\n        -   From Wide Data Format\n    -   Stacked Area Chart\n    -   Calendar Heat Map\n    -   Slope Chart\n    -   Seasonal Plot\n-   **Groups**\n    -   Dendrogram\n    -   Clusters\n-   **Spatial**\n    -   Open Street Map\n    -   Google Road Map\n    -   Google Hybrid Map\n\nCategorization of graph types used by [Top 50 ggplot2\nVisualizations](https://r-statistics.co/Top50-Ggplot2-Visualizations-MasterList-R-Code.html)\n:::\n\n###### ggplot2 gallery\n\n::: {#bul-chap03-graph-types-ggplot2-gallery}\n-   **Univariate**\n    -   Bar graphs\n    -   Histograms\n    -   Frequency polygons\n    -   Dot plots\n    -   Density plots\n    -   Violin plots\n    -   Box plots\n-   **Amounts**\n    -   Summary bar graphs\n    -   Grouped bar graphs\n    -   Overlapping bar graphs\n    -   Waffle charts\n    -   Heatmaps\n    -   Cleveland dot plot\n-   **Proportions**\n    -   Pie charts\n    -   Diverging bar graphs\n    -   Mosaic plots\n    -   Treemaps\n    -   Stacked densities\n-   **Distributions**\n    -   Overlapping histograms\n    -   Overlapping frequency polygons\n    -   Overlapping dot plots\n    -   Beeswarm plots\n    -   Overlapping density plot\n    -   Ridgeline plots\n    -   Grouped box plots\n    -   Grouped violin plots\n    -   Raincloud plots\n-   **Dates and times**\n    -   Line graphs\n    -   Grouped line graphs\n    -   Bump charts\n    -   Slope graphs\n    -   Stream plots\n    -   Alluvial charts\n-   **Relationships**\n    -   Scatter plots\n    -   Grouped scatter plots\n    -   Bubble charts\n    -   Grouped bubble graph\n    -   Parallel sets\n    -   Density contours\n    -   2D histograms\n    -   Hexagon bins\n-   **Lines**\n    -   `geom_line()`\n    -   `geom_path()`\n    -   `geom_step()`\n-   **Complex lines**\n    -   `geom_curve()`\n-   **Areas**\n    -   `geom_ribbon()`\n\nCategorization of graph types used by [ggplot2\ngallery](https://mjfrigaard.github.io/ggp2-gallery/)\n:::\n:::\n:::\n:::\n\n------------------------------------------------------------------------\n\n## Achievement 1: Graphs for a single categorical variable {#sec-chap03-achievement-1}\n\n### Introduction\n\nThere are several options for visualizing a single categorical variable:\n\n------------------------------------------------------------------------\n\n::: {#bul-chap03-single-cat-var}\n-   <a class='glossary' title='Bar charts are visual displays of data often used to examine similarities and differences across categories of things; bars can represent frequencies, percentages, means, or other statistics. (SwR, Glossary)'>Bar charts</a>\n-   <a class='glossary' title='Point charts are charts that show summary values for a numeric variable, typically across groups; for example, a point chart could be used in place of a bar graph to show mean or median across groups. (SwR, Glossary)'>Point charts</a>\n-   <a class='glossary' title='Waffle Charts are visual displays of data that show the parts of a whole similar to a pie chart; waffle charts are generally preferred over pie charts. (SwR, Glossary)'>Waffle charts</a>\n-   <a class='glossary' title='Pie charts are used to show parts of a whole; pie charts get their name from looking like a pie with pieces representing different groups, and they are not recommended for most situations because they can be difficult to interpret'>Pie charts</a>\n\nGraph options for a single categorical variable\n:::\n\n------------------------------------------------------------------------\n\n### Bar Chart {#sec-chap03-bar-chart-1}\n\n::: my-example\n::: my-example-header\n::: {#exm-chap03-bar-charts}\n: Creating Bar Charts for Firearm Usage\n:::\n:::\n\n::: my-example-container\n::: panel-tabset\n###### Bar width\n\n::: my-r-code\n::: my-r-code-header\n::: {#cnj-chap03-thick-thin-bar-charts-gun-use}\n: Bar charts for gun use (NHANES 2011-2012) with different width of bars\n:::\n:::\n\n::: my-r-code-container\n\n::: {.cell}\n\n```{.r .cell-code}\n## bar chart: bars with wide width\np_normal <- nhanes_2012_clean1 |> \n    dplyr::select(gun_use) |> \n    tidyr::drop_na() |>     \n    ggplot2::ggplot(\n        ggplot2::aes(x = gun_use)\n    ) +\n    ggplot2::geom_bar() + \n    ggplot2::labs(x = \"Gun use\", \n                  y = \"Number of participants\") +\n    ggplot2::theme_minimal()\n\n## bar chart: bars with small width\np_small <- nhanes_2012_clean1 |>\n    dplyr::select(gun_use) |> \n    tidyr::drop_na() |>\n    ggplot2::ggplot(\n        ggplot2::aes(x = gun_use)\n    ) +\n    ggplot2::geom_bar(width = 0.4) + \n    ggplot2::theme_minimal() +\n    ggplot2::theme(aspect.ratio = 4/1) +\n    ggplot2::labs(x = \"Gun use\", \n                  y = \"Number of participants\")\n\n## display both charts side by side\ngridExtra::grid.arrange(p_normal, p_small, ncol = 2)\n```\n\n::: {.cell-output-display}\n![Ever used firearms for any reason? (NHANES survey 2011-2012)](03-data-visualization_files/figure-html/fig-thick-thin-bar-charts-gun-use-1.png){#fig-thick-thin-bar-charts-gun-use width=672}\n:::\n:::\n\n\n------------------------------------------------------------------------\n\n1.  **Left**: Only two bars look horrifying. In this example they are\n    even a lot smaller as normal, because of the second graph to the\n    right.\n2.  **Right**: It is not enough to create smaller bars with the `width`\n    argument inside the `ggplot2::geom_bar()` function because that\n    would create unproportional wide space between the two bars. One\n    need to apply the aspect ratio for the used theme as well. In this\n    case all commands to the theme (e.g. my `ggplot2::the_bw()`) has to\n    come before the `aspect.ratio` argument. One has to try out which\n    aspect ratio works best.\n3.  I used here --- as recommended in the book --- the {**gridExtra**}\n    package to display the figures side by side (see @pak-gridExtra).\n    But there are other options as well. In the next tab I will use the\n    {**patchwork**} package, that is especially for {**ggplot2**}\n    developed (see @pak-patchwork). A third option would be to use one\n    of Quarto formatting commands: See\n    -   [Subfigures](https://quarto.org/docs/authoring/figures.html#subfigures)\n    -   [Figure\n        panels](https://quarto.org/docs/authoring/figures.html#figure-panels)\n    -   [Multiple\n        Rows](https://quarto.org/docs/authoring/figures.html#multiple-rows)\n        and\n    -   [Figure\n        divs](https://quarto.org/docs/authoring/figures.html#figure-divs).\n:::\n:::\n\n###### Bar color\n\n::: my-r-code\n::: my-r-code-header\n::: {#cnj-chap03-colored-bar-charts}\n: Bar charts for gun use (NHANES 2011-2012) with different colorizing\nmethods\n:::\n:::\n\n::: my-r-code-container\n\n::: {.cell}\n\n```{.r .cell-code}\n## bar chart: filled colors within aes() (data controlled)\np_fill_in <- nhanes_2012_clean1 |>\n    dplyr::select(gun_use) |> \n    tidyr::drop_na() |>\n    ggplot2::ggplot(ggplot2::aes(x = gun_use)) +\n    ggplot2::geom_bar(\n        ggplot2::aes(fill = gun_use), width = 0.4) + \n    ggplot2::theme_bw() +\n    ggplot2::theme(legend.position = \"none\") +\n    ggplot2::theme(aspect.ratio = 3/1) +\n    ggplot2::labs(x = \"Gun use\", \n                  y = \"Number of participants\",\n                  subtitle = \"Filled inside \\naes()\") \n\n## bar chart: filled colors outside aes() (manually controlled)\np_fill_out <- nhanes_2012_clean1 |> \n    dplyr::select(gun_use) |> \n    tidyr::drop_na() |>\n    ggplot2::ggplot(ggplot2::aes(x = gun_use)) +\n    # ggplot2::theme(legend.position = \"none\") +\n    ggplot2::geom_bar(width = 0.4, fill =  c(\"darkred\", \"steelblue\")) +\n    ggplot2::theme_bw() +\n    ggplot2::theme(aspect.ratio = 3/1) +\n    ggplot2::labs(x = \"Gun use\", \n                  y = \"Number of participants\",\n                  subtitle = \"Filled outside \\naes() my colors\")\n\n## ## bar chart: fill = data controlled by my own colors\np_fill_in_my_colors <- nhanes_2012_clean1 |> \n    dplyr::select(gun_use) |> \n    tidyr::drop_na() |>\n    ggplot2::ggplot(ggplot2::aes(x = gun_use)) +\n    ggplot2::geom_bar(\n        ggplot2::aes(fill = gun_use), width = 0.4) + \n    ggplot2::theme_bw() +\n    ggplot2::scale_fill_manual(values = c(\"darkred\", \"steelblue\"), guide = \"none\") +\n    ggplot2::theme(aspect.ratio = 3/1) +\n    ggplot2::labs(x = \"Gun use\", \n                  y = \"Number of participants\",\n                  subtitle = \"Filled inside \\nwith my colors\") \n\n## bar chart: manually controlled colors with my own color\np_fill_out_my_colors <- nhanes_2012_clean1 |> \n    dplyr::select(gun_use) |> \n    tidyr::drop_na() |>\n    ggplot2::ggplot(ggplot2::aes(x = gun_use)) +\n    ggplot2::geom_bar(width = 0.4, fill = c(\"darkred\", \"steelblue\")) + \n    ggplot2::theme_bw() +\n    ggplot2::theme(aspect.ratio = 3/1) +\n    ggplot2::labs(x = \"Gun use\", \n                  y = \"Number of participants\",\n                  subtitle = \"Filled outside \\nwith my colors\")\n\n##  patchwork with :: syntax ############################\n## display all 4 charts side by side\n## using the trick from \n## https://github.com/thomasp85/patchwork/issues/351#issuecomment-1931140157\n\npatchwork:::\"|.ggplot\"(\n    p_fill_in,\n    p_fill_out\n)\npatchwork:::\"|.ggplot\"(\n    p_fill_in_my_colors,\n    p_fill_out_my_colors\n)\n\n# library(patchwork)\n# p_fill_in | p_fill_out |\n#      p_fill_in_my_colors | p_fill_out_my_colors \n```\n\n::: {.cell-output-display}\n![Ever used firearms for any reason? (NHANES survey 2011-2012)](03-data-visualization_files/figure-html/fig-colorized-bar-charts-gun-use-1.png){#fig-colorized-bar-charts-gun-use-1 width=672}\n:::\n\n::: {.cell-output-display}\n![Ever used firearms for any reason? (NHANES survey 2011-2012)](03-data-visualization_files/figure-html/fig-colorized-bar-charts-gun-use-2.png){#fig-colorized-bar-charts-gun-use-2 width=672}\n:::\n:::\n\n\n------------------------------------------------------------------------\n\n-   **Left Top**: This graph has the color fill argument within `aes()` and\n    is therefore data controlled. This means that the colors will be\n    settled automatically by factor level.\n-   **Right Top**: This graph has the color fill argument outside\n    `aes()` and is therefore manually controlled. One needs to supply\n    colors otherwise one gets a graph without any colors at all.\n-   **Left bottom**: Even if the graph has the color fill argument\n    within `aes()` and is therefore data controlled, you can change the\n    color composition. But you has also the responsibility to provide a\n    correct legend --- or as I have done in this example --- to remove\n    the legend from the display. (The argument `guide = FALSE` as used\n    in the book is superseded with `guide = \"none\"`)\n-   **Right bottom**: The graph is manually controlled because it has the color\n    fill argument outside `aes()` with specified colors.\n\nI used {**patchwork**} here to show all four example graphs\n(see @pak-patchwork). As always I didn't want to use the `base::library()` function to load and attach the package. But I didn't know how to do this with the {**patchwork**} operators. Finally I asked my question on StackOverflow and received as answer [the solution](https://github.com/thomasp85/patchwork/issues/351#issuecomment-1931140157).\n\nAt first I tried it with the `+` operator. But that produced two very\nsmall graphs in the first row of the middle of the display area, and\nother two small graphs in the second row of the middle of the display\narea. Beside this ugly display the text of the subtitle was also\ntruncated. After some experimentation I learned that I had to use the `|` operator.\n\n:::\n:::\n:::\n:::\n:::\n\n### Pie Chart {#sec-chap03-pie-chart}\n\n<a class='glossary' title='Pie charts are used to show parts of a whole; pie charts get their name from looking like a pie with pieces representing different groups, and they are not recommended for most situations because they can be difficult to interpret'>Pie charts</a> show parts of a whole. The pie, or circle,\nrepresents the whole. The slices of pie shown in different colors\nrepresent the parts. A similar graph type is the but they are **not\nrecommended\"** for several reasons\n\n-   Humans aren’t particularly good at estimating quantity from angles:\n    Once we have more than two categories, pie charts can easily\n    misrepresent percentages and become hard to read.\n-   Pie charts do badly when there are lots of categories: Matching the\n    labels and the slices can be hard work and small percentages (which\n    might be important) are tricky to show.\n\n::: my-resource\n::: my-resource-header\nWhy you shouldn’t use pie charts\n:::\n\n::: my-resource-container\n-   [Why you shouldn’t use pie\n    charts](https://scc.ms.unimelb.edu.au/resources/data-visualisation-and-exploration/no_pie-charts):\n    Very convincing examples that demonstrate why pie charts provide\n    generally not a good graphical display [@hunt2019].\n-   [Here’s why you should (almost) never use a pie chart for your\n    data](https://theconversation.com/heres-why-you-should-almost-never-use-a-pie-chart-for-your-data-214576)\n    [@barnett2024].\n-   [What is a pie\n    chart?](https://www.storytellingwithdata.com/blog/2020/5/14/what-is-a-pie-chart):\n    A more sympathetic view on pie chart can be found in [@ricks2020].\n-   [The issue with pie\n    charts](https://www.data-to-viz.com/caveat/pie.html): The article\n    shows visually the problems with pie charts and recommend some\n    alternatives. [@holtz2018]\n:::\n:::\n\nBut there are some cases, where pie chart (or\n<a class='glossary' title='Donut or doughnut charts (sometimes also called ring charts) are an alternative chart for pie charts, which have a hole in the middle, making them cleaner to read than pie charts. (R Charts)'>donut charts</a> sometimes also called ring chart) are\nappropriate:\n\n1.  **Visualize an important number by highlighting just one junk of the\n    circle**\n\n------------------------------------------------------------------------\n\n::: {#fig-chap03-pie-donut layout-ncol=\"2\"}\n![Pie chart\ndemo](img/chap03/pie-chart-one-figure-min.png){#fig-pie-chart-demo\nfig-alt=\"Donut chart: Circle with hole in the middle, colored 63% orange with text '63% didn't visit a dentist'\"\nfig-align=\"center\"}\n\n![Donut chart\ndemo](img/chap03/donut-chart-one-figure-min.png){#fig-donut-demo\nfig-alt=\"Donut chart: Circle with hole in the middle, colored 63% orange with text '63% didn't visit a dentist'\"\nfig-align=\"center\"}\n\nHighlight just one junk to support only one number [@evergreen2019,\npp.33-35]\n:::\n\n------------------------------------------------------------------------\n\nBTW: Donut charts are even worse than pie charts:\n\n> The middle of the pie is gone. The middle of the pie … where the angle\n> is established, which is what humans would look at to try to determine\n> wedge size, proportion, and data. Even though we aren’t accurate at\n> interpreting angles, the situation is made worse when we remove the\n> middle of the pie. Now we are left to judge curvature and … compare\n> wedges by both curvature and angle [@evergreen2019, p.32].\n\n2.  **Use a very limited number of wedges (best not more than two) for\n    making a clear point.**\n\n![Pie charts are acceptable with very few categories [@evergreen2019,\np.176]](img/chap03/pie-chart-two-wedges-min.png){#fig-pie-chart-2\nfig-alt=\"circle colored with two different blue, on the left side - about 45% it says 'Male and on the right side 'Female'\"\nfig-align=\"center\" width=\"40%\"}\n\n::: my-example\n::: my-example-header\n::: {#exm-chap03-pie-chart}\n: Creating Pie & Donut Charts for Firearm Usage\n:::\n:::\n\n::: my-example-container\n::: panel-tabset\n###### Pie chart (number)\n\n::: my-r-code\n::: my-r-code-header\n::: {#cnj-chap03-pie-chart-number-gun-use}\n: Visualize percentage of gun user from NHANES survey 2011-2012\n:::\n:::\n\n::: my-r-code-container\n\n::: {.cell}\n\n```{.r .cell-code}\nlab <- \"<span style='font-size:36pt; color:white'>**35%**</span>\"\ngun_use_2012 |> \n    tidyr::drop_na() |>\n    ggplot2::ggplot(ggplot2::aes(x = '', y = percent)) +\n    ggplot2::geom_col(fill = c(\"#fa8324\", \"grey\")) +\n    ggplot2::coord_polar(theta = 'y') +\n    ggtext::geom_richtext(ggplot2::aes(\n        x = 1.1, y = 8,\n        label = lab),\n        fill = \"#fa8324\",\n        label.colour = \"#fa8324\") +\n    ggplot2::annotate(\"text\", x = .7, y = 10,\n                      label = \"                used firearms\",\n                      color = \"white\",\n                      size = 6) +\n    ggplot2::theme_void() \n```\n\n::: {.cell-output-display}\n![Percentage of gun user (NHANES survey 2011-2012)](03-data-visualization_files/figure-html/fig-pie-chart-number-gun-use-1.png){#fig-pie-chart-number-gun-use width=384}\n:::\n:::\n\n\n------------------------------------------------------------------------\n\nThe most important code line to create a pie graph is\n`ggplot2::coord_polar(theta = 'y')`. In the concept of `gg` (grammar of\ngraphics) a car chart and a pie chart are --- with the exception of the\nabove code line --- identical [@c2010].\n\nBeside the `ggplot2::annotate()` function for text comments inside\ngraphics I had for to get the necessary formatting options for the big\nnumber also to use {**ggtext**}, one of [132 registered {**ggplot2**}\nextensions](https://exts.ggplot2.tidyverse.org/gallery/). {**ggtext**}\nenables the rendering of complex formatted plot labels (see\n@pak-ggtext).\n:::\n:::\n\nFor training purposes I tried to create exactly the same pattern (color,\ntext size etc.) of a pie chart as in @fig-pie-chart-demo.\n\n###### Pie chart (yes/no)\n\n::: my-r-code\n::: my-r-code-header\n::: {#cnj-chap03-pie-chart-binary-gun-use}\n: Ever used firearms for any reason? (NHANES survey 2011-2012)\n:::\n:::\n\n::: my-r-code-container\n\n::: {.cell}\n\n```{.r .cell-code}\ngun_use_2012 |> \n    tidyr::drop_na() |>\n    ggplot2::ggplot(\n        ggplot2::aes(x = '', y = percent, \n                     fill = forcats::fct_rev(gun_use))\n        ) +\n    ggplot2::geom_col() + \n    ggplot2::geom_text(ggplot2::aes(\n        label = gun_use),\n        color = \"white\",\n        position = ggplot2::position_stack(vjust = 0.5),\n        size = 10) +\n    ggplot2::coord_polar(theta = 'y') +\n    ggplot2::theme_void() +\n    ggplot2::theme(legend.position = \"none\") +\n    ggplot2::labs(x = '', y = '') +\n    viridis::scale_fill_viridis(\n        discrete = TRUE,\n        option = \"turbo\",\n        begin = 0.1,\n        end = 0.9)\n```\n\n::: {.cell-output-display}\n![Ever used firearms for any reason? (NHANES survey 2011-2012)](03-data-visualization_files/figure-html/fig-pie-chart-binary-gun-use-1.png){#fig-pie-chart-binary-gun-use width=384}\n:::\n:::\n\n\nI have used {**viridis**} to produce colorblind-friendly color maps (see\n@pak-viridis). Instead of using as the first default color yellow I have\nchosen with the color map options and the begin/end argument, what color\nshoud appear for this binary variable.\n:::\n:::\n\n###### Donut 1\n\n::: my-r-code\n::: my-r-code-header\n::: {#cnj-chap03-donut-small-hole-gun-use}\n: Donut chart with small hole\n:::\n:::\n\n::: my-r-code-container\n\n::: {.cell}\n\n```{.r .cell-code}\n# Small hole\nhsize <- 1\ngun_use_small_hole <- gun_use_2012 |>  \n  dplyr::mutate(x = hsize)\n\ngun_use_small_hole |> \n    tidyr::drop_na() |>\n    dplyr::mutate(x = hsize) |> \n    ggplot2::ggplot(\n        ggplot2::aes(x = hsize, y = percent, \n                     fill = forcats::fct_rev(gun_use))\n        ) +\n    ggplot2::geom_col() + \n    ggplot2::coord_polar(theta = 'y') +\n    ggplot2::xlim(c(0.2, hsize + 0.5)) +\n    ggplot2::theme_void() +\n    ggplot2::labs(x = '', y = '', fill = \"Gun used?\") +\n    viridis::scale_fill_viridis(\n        breaks = c('Yes', 'No'),\n        discrete = TRUE,\n        option = \"turbo\",\n        begin = 0.1,\n        end = 0.9)\n```\n\n::: {.cell-output-display}\n![Ever used firearms for any reason? (NHANES survey 2011-2012)](03-data-visualization_files/figure-html/fig-donut-small-hole-gun-use-1.png){#fig-donut-small-hole-gun-use width=480}\n:::\n:::\n\n:::\n:::\n\n###### Donut 2\n\n::: my-r-code\n::: my-r-code-header\n::: {#cnj-chap03-donut-big-hole-gun-use}\n: Donut chart with big hole\n:::\n:::\n\n::: my-r-code-container\n\n::: {.cell}\n\n```{.r .cell-code}\nhsize <- 2\ngun_use_big_hole <- gun_use_2012  |>\n  dplyr::mutate(x = hsize)\n\ngun_use_big_hole |>\n    tidyr::drop_na() |>\n    dplyr::mutate(x = hsize) |> \n    ggplot2::ggplot(\n        ggplot2::aes(x = hsize, y = percent, \n                     fill = forcats::fct_rev(gun_use))\n        ) +\n    ggplot2::geom_col() + \n    ggplot2::coord_polar(theta = 'y') +\n    ggplot2::xlim(c(0.2, hsize + 0.5)) +\n    ggplot2::theme_void() +\n    ggplot2::labs(x = '', y = '', fill = \"Gun used?\") +\n    viridis::scale_fill_viridis(\n        breaks = c('Yes', 'No'),\n        discrete = TRUE,\n        option = \"turbo\",\n        begin = 0.1,\n        end = 0.9)\n```\n\n::: {.cell-output-display}\n![Ever used firearms for any reason? (NHANES survey 2011-2012)](03-data-visualization_files/figure-html/fig-donut-big-hole-gun-use-1.png){#fig-donut-big-hole-gun-use width=480}\n:::\n:::\n\n:::\n:::\n:::\n:::\n:::\n\n------------------------------------------------------------------------\n\n### Waffle Chart {#sec-chap03-waffle-chart}\n\n::: my-example\n::: my-example-header\n::: {#exm-chap03-waffle-charts}\n: Creating Waffle Charts\n:::\n:::\n\n::: my-example-container\n::: panel-tabset\n###### 2012\n\n::: my-r-code\n::: my-r-code-header\n::: {#cnj-chap03-waffle-chart-nhanes-2012}\n: Creating a waffle chart for number of total rounds fired (NHANES\nsurvey 2011-2012)\n:::\n:::\n\n::: my-r-code-container\n::: {#lst-chap03-waffle-chart-rounds-fired1}\n\n::: {.cell}\n\n```{.r .cell-code}\nfired_2012 |> \n    waffle::waffle(rows = 10,\n                   colors = c(\"lightblue1\", \"lightsteelblue1\", \n                              \"deepskyblue1\", \"dodgerblue3\", \"black\",\n                    \"lemonchiffon1\"))\n```\n\n::: {.cell-output-display}\n![Proportion of total rounds fired (NHANES survey 2011-2012)](03-data-visualization_files/figure-html/fig-waffle-chart-nhanes-2012-1.png){#fig-waffle-chart-nhanes-2012 width=672}\n:::\n:::\n\n\nProportion of total rounds fired (NHANES survey 2011-2012)\n:::\n\n------------------------------------------------------------------------\n\nIn contrast to the example in the book I have used percentages and not\nabsolute numbers.\n\n> To emulate the percentage view of a pie chart, a 10x10 grid should be\n> used with each square representing 1% of the total. ([waffle\n> homepage](https://cinc.rud.is/web/packages/waffle/index.html))\n\nAnother advantage: Using percentages I can compare 2011-2012 with\n2017-2018 (see @fig-waffle-chart-rounds-fired2)\n:::\n:::\n\n![How many total rounds have you ever fired? [Codebook 2011-2012\nAUDIOMETRY](https://wwwn.cdc.gov/nchs/data/nhanes/2011-2012/questionnaires/auq.pdf)](img/chap03/NHANES-codebook-firearms-2012-min.png){#fig-firearms-codebook-2012\nfig-alt=\"'How many rounds in total have you ever fired?' this question has several options: - 1 = 1 to less than 100 rounds  - 2 = 100 to less than 1,000 rounds  - 3 = 1,000 to less than 10,000 rounds  - 4 = 10,000 to less than 50,000 rounds  - 5 = 50,000 rounds or more  - 7 = Refused  - 9 = Don’t know\"\nfig-align=\"center\"}\n\n###### 2018\n\n::: my-r-code\n::: my-r-code-header\n::: {#cnj-chap03-waffle-chart-nhanes-2018}\n: Creating a waffle chart for number of total rounds fired (NHANES\nsurvey 2017-2018)\n:::\n:::\n\n::: my-r-code-container\n\n::: {#lst-chap03-waffle-chart-rounds-fired2}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnhanes_2018 <- readRDS(\"data/chap03/nhanes_2018.rds\")\n\nrounds_fired_2018 <- nhanes_2018 |> \n    dplyr::select(AUQ310) |> \n    tidyr::drop_na() |> \n    dplyr::mutate(AUQ310 = forcats::as_factor(AUQ310)) |> \n    dplyr::mutate(AUQ310 = forcats::fct_recode(AUQ310,\n        \"1 to less than 100\" = \"1\",\n        \"100 to less than 1000\" = \"2\",\n        \"1000 to less than 10k\" = \"3\",\n        \"10k to less than 50 k\" = \"4\",\n        \"50k or more\" = \"5\",\n        \"Refused to answer\" = \"7\",\n        \"Don't know\" = \"9\")\n    )  |>    \n    dplyr::rename(rounds_fired = AUQ310) \n\nfired_2018 <-  rounds_fired_2018 |> \n    dplyr::count(rounds_fired) |>\n    dplyr::mutate(prop = round(n / sum(n), 2) * 100) |> \n    dplyr::relocate(n, .after = dplyr::last_col())\n\n(\n    waffle_plot <- \n        waffle::waffle(parts = fired_2018,\n                       rows = 10,\n                       colors = c(\"lightblue1\", \"lightsteelblue1\", \n                                  \"deepskyblue1\", \"dodgerblue3\", \"black\",\n                       \"gold1\", \"lemonchiffon1\"))\n)\n```\n\n::: {.cell-output-display}\n![Proportion of total rounds fired (NHANES survey 2017-2018)](03-data-visualization_files/figure-html/fig-waffle-chart-rounds-fired2-1.png){#fig-waffle-chart-rounds-fired2 width=672}\n:::\n:::\n\n\nProportion of total rounds fired (NHANES survey 2017-2018)\n:::\n\n------------------------------------------------------------------------\n\nThe number of different levels of the factor variable is almost too high\nto realize at one glance the differences of the various categories.\n\n> Best practices suggest keeping the number of categories small, just as\n> should be done when creating pie charts. ([Create Waffle Charts\n> Visualization](https://cinc.rud.is/web/packages/waffle/index.html))\n\nCompare 2011-2012 with 2017-2018 (see @fig-waffle-chart-nhanes-2012).\nYou see there is just a small difference: Respondents in the 2017-2018\nsurvey have fired tiny less rounds as the people asked in the 2011-2012\nsurvey. Generally speaking: The fired total of rounds remains more or\nless constant during the period 2012 - 2018.\n:::\n:::\n\n![How many total rounds have you ever fired? [Codebook 2017-2018\nAUDIOMETRY](https://wwwn.cdc.gov/nchs/data/nhanes/2017-2018/questionnaires/AUQ_J.pdf)](img/chap03/NHANES-codebook-firearms-2018-min.png){#fig-firearms-codebook-2018\nfig-alt=\"'How many rounds in total have you ever fired?' this question has several options: - 1 = 1 to less than 100 rounds  - 2 = 100 to less than 1,000 rounds  - 3 = 1,000 to less than 10,000 rounds  - 4 = 10,000 to less than 50,000 rounds  - 5 = 50,000 rounds or more  - 7 = Refused  - 9 = Don’t know\"\nfig-align=\"center\"}\n\n###### Compare\n\n::: my-r-code\n::: my-r-code-header\n::: {#cnj-chap03-compare-fired-nhanes-2012-2018}\n: Compare the total rounds fired between the NHANES survey participants\n2011-2012 and 2017-2018\n:::\n:::\n\n::: my-r-code-container\n\n::: {#tbl-compare-fired-nhanes-2012-2018 .cell tbl-cap='Total rounds fired of NHANES survey participants 2011-2012 and 2017-2018'}\n\n```{.r .cell-code}\nfired_df <- dplyr::full_join(x = fired_2012,\n                          y = fired_2018,\n                          by = dplyr::join_by(rounds_fired) \n)\n\nfired_df <-  fired_df |> \n    dplyr::rename(\n        \"Rounds fired\" = rounds_fired,\n        `2012(%)` = prop.x,\n        `n (2012)` = n.x,\n        `2018(%)` = prop.y,\n        `n (2018)` = n.y,\n        ) |> \n    dplyr::mutate(`Diff (%)` = `2012(%)` - `2018(%)`)\n\nfired_df\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#>            Rounds fired 2012(%) n (2012) 2018(%) n (2018) Diff (%)\n#> 1    1 to less than 100      43      701      45      289       -2\n#> 2 100 to less than 1000      26      423      24      154        2\n#> 3 1000 to less than 10k      18      291      20      131       -2\n#> 4  10k to less than 50k       7      106      NA       NA       NA\n#> 5           50k or more       4       66       2       15        2\n#> 6            Don't know       2       26       2       10        0\n#> 7 10k to less than 50 k      NA       NA       7       45       NA\n#> 8     Refused to answer      NA       NA       0        2       NA\n```\n\n\n:::\n:::\n\n\n------------------------------------------------------------------------\n\nThe participants of the NHANES survey 2011-2012 and 2017-2018 fired\nalmost the same numbers of total rounds. The participants in 2017-2018\nfired just a tiny amount of bullets less.\n:::\n:::\n\n###### 2018 cividis\n\n::: my-r-code\n::: my-r-code-header\n::: {#cnj-chap03-waffle-chart-nhanes-2018-cividis}\n: Creating a waffle chart for number of total rounds fired (NHANES\nsurvey 2017-2018) with `cividis` color scale\n:::\n:::\n\n::: my-r-code-container\n\n::: {#lst-chap03-waffle-chart-rounds-fired2-cividis}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnhanes_2018 <- readRDS(\"data/chap03/nhanes_2018.rds\")\n\nrounds_fired_2018 <- nhanes_2018 |> \n    dplyr::select(AUQ310) |> \n    tidyr::drop_na() |> \n    dplyr::mutate(AUQ310 = forcats::as_factor(AUQ310)) |> \n    dplyr::mutate(AUQ310 = forcats::fct_recode(AUQ310,\n        \"1 to less than 100\" = \"1\",\n        \"100 to less than 1000\" = \"2\",\n        \"1000 to less than 10k\" = \"3\",\n        \"10k to less than 50 k\" = \"4\",\n        \"50k or more\" = \"5\",\n        \"Refused to answer\" = \"7\",\n        \"Don't know\" = \"9\")\n    )  |>    \n    dplyr::rename(rounds_fired = AUQ310) \n\nfired_2018 <-  rounds_fired_2018 |> \n    dplyr::count(rounds_fired) |>\n    dplyr::mutate(prop = round(n / sum(n), 2) * 100) |> \n    dplyr::relocate(n, .after = dplyr::last_col())\n\nwaffle::waffle(parts = fired_2018,\n               rows = 10,\n               colors = c(\"#BCAF6FFF\", \"#A69D75FF\",\n                          \"#918C78FF\", \"#7C7B78FF\",\n                          \"#6A6C71FF\", \"#575C6DFF\", \"#414D6BFF\")\n)\n```\n\n::: {.cell-output-display}\n![Proportion of total rounds fired (NHANES survey 2017-2018) with cividis color scale](03-data-visualization_files/figure-html/fig-waffle-chart-rounds-fired2-cividis-1.png){#fig-waffle-chart-rounds-fired2-cividis width=672}\n:::\n:::\n\n\nProportion of total rounds fired (NHANES survey 2017-2018) with `cividis` color scale\n\n:::\n\n::::\n:::::\n\nIn contrast to @fig-waffle-chart-rounds-fired2 --- where I have used individual choices of different colors without any awareness of color blindness or black & white printing --- here I have used the color blindness friendly `cividis` palette form the {**viridis**} package. Read more about my reflections about choosing color palettes in @sec-chap03-color-palettes.\n\n:::\n\n::::\n:::::\n\n## Achievement 2: Graphs for a single continuous variable {#sec-chap03-achievement-2}\n\n### Introduction\n\nOptions are:\n\n------------------------------------------------------------------------\n\n::: {#bul-chap03-single-cont-var}\n-   <a class='glossary' title='Histograms are visual displays of data used to examine the distribution of a numeric variable. (SwR, Glossary)'>histograms</a>,\n-   <a class='glossary' title='Density plots are used for examining the distribution of a variable measured along a continuum; density plots are similar to histograms but are smoothed and may not show existing gaps in data (SwR, Glossary)'>density plots</a>,\n-   <a class='glossary' title='Boxplots are a visual representation of data that shows central tendency (usually the median) and spread (usually the interquartile range) of a numeric variable for one or more groups; boxplots are often used to compare the distribution of a continuous variable across several groups. (SwR, Glossary)'>boxplots</a>,\n-   <a class='glossary' title='Violing plots are visual displays of data that combine features of density plots and boxplots to show the distribution of numeric variables, often across groups. (SwR, Glossary)'>violin plots</a>.\n\nGraph options for a single continuous variable\n:::\n\n------------------------------------------------------------------------\n\n-   **Histograms and density plots** are very similar to each other and\n    show the overall shape of the data. These two types of graphs are\n    especially useful in determining whether or not a variable has a\n    normal distribution.\n\n-   **Boxplots** show the central tendency and spread of the data, which\n    is another way to determine whether a variable is normally\n    distributed or skewed.\n\n-   **Violin plots** are also useful when looking at a continuous\n    variable and are like a combination of boxplots and density plots.\n    Violin plots are commonly used to examine the distribution of a\n    continuous variable for different levels (or groups) of a factor (or\n    categorical) variable.\n\n### Histogram {#sec-chap03-histogram}\n\n::: my-experiment\n::: my-experiment-header\n::: {#def-chap03-histogram-research-funding}\n: Histograms of research funding (2004-2015) with 10 and 30 bins\n:::\n:::\n\n::: my-experiment-container\n::: panel-tabset\n###### 10 bins\n\n::: my-r-code\n::: my-r-code-header\n::: {#cnj-chap03-histogram-research-funding}\n: Histogram of research funding (2004-2015) with 10 bins\n:::\n:::\n\n::: my-r-code-container\n\n::: {.cell}\n\n```{.r .cell-code}\np_histo_funding <- research_funding |> \n    ggplot2::ggplot(ggplot2::aes(x = Funding / 1000000000)) +\n    ggplot2::geom_histogram(bins = 10,\n                            fill = \"grey90\",\n                            color = \"black\") +\n    ggplot2::labs(x = \"Research funding (2004-2015) in billions dollar\",\n                  y = \"Number of causes\") +\n    ggplot2::theme_bw()\n\np_histo_funding\n```\n\n::: {.cell-output-display}\n![Research funding (2004-2015) for the top 30 mortility casues in the U.S. (in billions dollar)](03-data-visualization_files/figure-html/fig-histogram-research-funding-10-bins-1.png){#fig-histogram-research-funding-10-bins width=672}\n:::\n:::\n\n:::\n:::\n\n###### 30 bins\n\n::: my-r-code\n::: my-r-code-header\n::: {#cnj-chap03-research-funding-30-bins}\n: Histogram of research funding (2004-2015) with 30 bins\n:::\n:::\n\n::: my-r-code-container\n\n::: {.cell}\n\n```{.r .cell-code}\nresearch_funding |> \n    ggplot2::ggplot(ggplot2::aes(x = Funding / 1000000000)) +\n    ggplot2::geom_histogram(bins = 30,\n                            fill = \"grey90\",\n                            color = \"black\") +\n    ggplot2::labs(x = \"Research funding (2004-2015) in billions dollar\",\n                  y = \"Number of research topics ('Causes of Deadth')\") +\n    ggplot2::theme_bw()\n```\n\n::: {.cell-output-display}\n![Research funding (2004-2015) for the top 30 mortility casues in the U.S. (in billions dollar)](03-data-visualization_files/figure-html/fig-histogram-research-funding-30-bins-1.png){#fig-histogram-research-funding-30-bins width=672}\n:::\n:::\n\n:::\n:::\n:::\n:::\n:::\n\nWith histograms it is important to play around with the number of\n`bins`. This changes the appearance of histograms sometimes quite\nprofoundly. The default of 30 bins displays a warning that one should\nchoose a better value with the argument `binwidth` (another option to\ncontrol the number of bins.)\n\nIt is not quite clear for me what would be the optimal number of bins of\na given data set. It was easy for @fig-histogram-physical-health: There\nwere only 30 different values, each for one. So to provide the same\nnumber of bins as number of observed days (= 30) was a sensible choice.\n\nThere is not much difference in the case of 10 or 30 bins of\n@def-chap03-histogram-research-funding. A big difference would be for\nexample when the number of modes is changing, or the mode is moving far\nto another value. It seems to me that with a density plot it is simpler\nto choose the optimal curve (even if I do not understand the underlying\nrationale of this <a class='glossary' title='Kernel density estimation (KDE) extrapolates data to an estimated population probability density function. It’s called kernel density estimation because each data point is replaced with a kernel—a weighting function to estimate the pdf. The function spreads the influence of any point around a narrow region surrounding the point. (Statistics How To)'>kernel density estimation</a> (KDE)\nprocedure).\n\n### Density plot {#sec-chap03-density-plot}\n\n::: my-experiment\n::: my-experiment-header\n::: {#def-chap03-density-plot-research-funding}\n: Density plot of research funding (2004-2015) with different bandwidth\n:::\n:::\n\n::: my-experiment-container\n::: panel-tabset\n###### Default\n\n::: my-r-code\n::: my-r-code-header\n::: {#cnj-chap03-density-plot-research-funding-2}\n: Density plot with standard bandwidth `bw = \"nrd0\"`\n:::\n:::\n\n::: my-r-code-container\n\n::: {.cell}\n\n```{.r .cell-code}\np_dens_funding <- research_funding |>\n    ggplot2::ggplot(ggplot2::aes(x = Funding / 1000000000)) +\n    ggplot2::geom_density(fill = \"grey90\",\n                          color = \"black\") +\n    ggplot2::labs(x = \"Research funding (2004-2015) in billions dollar\",\n                  y = \"Probability density\") +\n    ggplot2::theme_bw()\n\np_dens_funding\n```\n\n::: {.cell-output-display}\n![Research funding (2004-2015) for the top 30 mortility casues in the U.S. (in billions dollar)](03-data-visualization_files/figure-html/fig-density-plot-research-funding-0-1.png){#fig-density-plot-research-funding-0 width=672}\n:::\n:::\n\n\n------------------------------------------------------------------------\n\nThis is the density plot without changing the default bandwidth. It uses\n`nrd0` as bandwidth. One can see that it is somewhat similar to\n`bw = 1.5` (see @fig-density-plot-research-funding-2).\n\n-   `bw.nrd0` implements a rule-of-thumb for choosing the bandwidth of a\n    Gaussian kernel density estimator. It defaults to 0.9 times the\n    minimum of the standard deviation and the interquartile range\n    divided by 1.34 times the sample size to the negative one-fifth\n    power (= Silverman's ‘rule of thumb’, Silverman (1986, page 48, eqn\n    (3.31))) unless the quartiles coincide when a positive result will\n    be guaranteed. (Quoted form the help file of `stats::bandwidth()`)\n:::\n:::\n\n###### 0.5\n\n::: my-r-code\n::: my-r-code-header\n::: {#cnj-chap03-density-plot-research-funding-1}\n: Density plot with bandwidth of 0.5\n:::\n:::\n\n::: my-r-code-container\n\n::: {.cell}\n\n```{.r .cell-code}\nresearch_funding |> \n    ggplot2::ggplot(ggplot2::aes(x = Funding / 1000000000)) +\n    ggplot2::geom_density(fill = \"#7d70b6\",\n                          color = \"black\",\n                          bw = .5) +\n    ggplot2::labs(x = \"Research funding (2004-2015) in billions dollar\",\n                  y = \"Probability density\") +\n    ggplot2::theme_bw()\n```\n\n::: {.cell-output-display}\n![Research funding (2004-2015) for the top 30 mortility casues in the U.S. (in billions dollar)](03-data-visualization_files/figure-html/fig-density-plot-research-funding-1-1.png){#fig-density-plot-research-funding-1 width=672}\n:::\n:::\n\n\n------------------------------------------------------------------------\n\nI have replicated Figure 3.26 without knowing what `bw = 0.5` means and\nhow it is computed.\n:::\n:::\n\n###### 1.5\n\n::: my-r-code\n::: my-r-code-header\n<div>\n\n: Density plot of research funding (2004-2015) with bandwidth of 1.5\n\n</div>\n:::\n\n::: my-r-code-container\n\n::: {.cell}\n\n```{.r .cell-code}\nresearch_funding |> \n    ggplot2::ggplot(ggplot2::aes(x = Funding / 1000000000)) +\n    ggplot2::geom_density(fill = \"#7d70b6\",\n                          color = \"black\",\n                          bw = 1.5) +\n    ggplot2::labs(x = \"Research funding (2004-2015) in billions dollar\",\n                  y = \"Probability density\") +\n    ggplot2::theme_bw()\n```\n\n::: {.cell-output-display}\n![Research funding (2004-2015) for the top 30 mortility casues in the U.S. (in billions dollar)](03-data-visualization_files/figure-html/fig-density-plot-research-funding-2-1.png){#fig-density-plot-research-funding-2 width=672}\n:::\n:::\n\n\n------------------------------------------------------------------------\n\nI have replicated Figure 3.27 without knowing what `bw = 1.5` means and\nhow it is computed. This is the figure that was chosen in the book as\nappropriate to represent the data distribution. It is very similar to\nthe {**ggplot2**} standard version\n(@fig-density-plot-research-funding-0), where neither `bw` nor `kernel`\nwas changed.\n:::\n:::\n\n###### nrd0\n\n::: my-r-code\n::: my-r-code-header\n::: {#cnj-chap03-density-plot-research-funding-3a}\n: Density plot with bandwidth selector `nrd0`\n:::\n:::\n\n::: my-r-code-container\n\n::: {.cell}\n\n```{.r .cell-code}\nresearch_funding |> \n    ggplot2::ggplot(ggplot2::aes(x = Funding / 1000000000)) +\n    ggplot2::geom_density(fill = \"grey90\",\n                          color = \"black\",\n                          bw = \"nrd0\") +\n    ggplot2::labs(x = \"Research funding (2004-2015) in billions dollar\",\n                  y = \"Probability density\") +\n    ggplot2::theme_bw()\n```\n\n::: {.cell-output-display}\n![Research funding (2004-2015) for the top 30 mortility casues in the U.S. (in billions dollar)](03-data-visualization_files/figure-html/fig-density-plot-research-funding-3a-1.png){#fig-density-plot-research-funding-3a width=672}\n:::\n:::\n\n\n------------------------------------------------------------------------\n\nHere I have stated expressively that `bw = \"nrd0\"`. This is the default\nvalue that implements a rule-of-thumb for choosing the bandwidth of a\nGaussian\n<a class='glossary' title='Kernel density estimation (KDE) extrapolates data to an estimated population probability density function. It’s called kernel density estimation because each data point is replaced with a kernel—a weighting function to estimate the pdf. The function spreads the influence of any point around a narrow region surrounding the point. (Statistics How To)'>kernel density estimator</a>.\nIt is appropriate for normal-like distributions.\n:::\n:::\n\n###### SJ\n\n::: my-r-code\n::: my-r-code-header\n::: {#cnj-chap03-density-plot-research-funding-3b}\n: Density plot with bandwidth selector `SJ`\n:::\n:::\n\n::: my-r-code-container\n\n::: {.cell}\n\n```{.r .cell-code}\nresearch_funding |> \n    ggplot2::ggplot(ggplot2::aes(x = Funding / 1000000000)) +\n    ggplot2::geom_density(fill = \"grey90\",\n                          color = \"black\",\n                          bw = \"SJ\") +\n    ggplot2::labs(x = \"Research funding (2004-2015) in billions dollar\",\n                  y = \"Probability density\") +\n    ggplot2::theme_bw()\n```\n\n::: {.cell-output-display}\n![Research funding (2004-2015) for the top 30 mortility casues in the U.S. (in billions dollar)](03-data-visualization_files/figure-html/fig-density-plot-research-funding-3b-1.png){#fig-density-plot-research-funding-3b width=672}\n:::\n:::\n\n\n------------------------------------------------------------------------\n\n`bw = \"SJ\"` select the bandwidth using pilot estimation of derivatives\nand is appropriate for multimodal or general non-normal distribution\n[@webelod2018].\n:::\n:::\n\n###### ucv\n\n::: my-r-code\n::: my-r-code-header\n::: {#cnj-chap03-density-plot-research-funding-4a}\n: Density plot with bandwidth `ucv`\n:::\n:::\n\n::: my-r-code-container\n\n::: {.cell}\n\n```{.r .cell-code}\nresearch_funding |> \n    ggplot2::ggplot(ggplot2::aes(x = Funding / 1000000000)) +\n    ggplot2::geom_density(fill = \"grey90\",\n                          color = \"black\",\n                          bw = \"ucv\") +\n    ggplot2::labs(x = \"Research funding (2004-2015) in billions dollar\",\n                  y = \"Probability density\") +\n    ggplot2::theme_bw()\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n#> Warning in bw.ucv(x): minimum occurred at one end of the range\n```\n\n\n:::\n\n::: {.cell-output-display}\n![Research funding (2004-2015) for the top 30 mortility casues in the U.S. (in billions dollar)](03-data-visualization_files/figure-html/fig-density-plot-research-funding-4a-1.png){#fig-density-plot-research-funding-4a width=672}\n:::\n:::\n\n\n------------------------------------------------------------------------\n\n`ucv` is one of the two extremes. It chooses a very small bandwidth.\n(The other extreme selector is `bcv` which chooses very a wide\nbandwidth.)\n:::\n:::\n\n###### bcv\n\n::: my-r-code\n::: my-r-code-header\n::: {#cnj-chap03-density-plot-research-funding-4b}\n: Density plot with bandwith `bcv`\n:::\n:::\n\n::: my-r-code-container\n\n::: {.cell}\n\n```{.r .cell-code}\nresearch_funding |> \n    ggplot2::ggplot(ggplot2::aes(x = Funding / 1000000000)) +\n    ggplot2::geom_density(fill = \"grey90    \", \n                          color = \"black\",\n                          bw = \"bcv\") +\n    ggplot2::labs(x = \"Research funding (2004-2015) in billions dollar\",\n                  y = \"Probability density\") +\n    ggplot2::theme_bw()\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n#> Warning in bw.bcv(x): minimum occurred at one end of the range\n```\n\n\n:::\n\n::: {.cell-output-display}\n![Research funding (2004-2015) for the top 30 mortility casues in the U.S. (in billions dollar)](03-data-visualization_files/figure-html/fig-density-plot-research-funding-4b-1.png){#fig-density-plot-research-funding-4b width=672}\n:::\n:::\n\n\n------------------------------------------------------------------------\n\n`bcv` is one of the two extremes. It chooses a very wide bandwidth. (The\nother extreme selector is `ucv` which chooses a very narrow bandwidth.)\n:::\n:::\n:::\n:::\n:::\n\nThe equivalent of `binwidth` in histograms is `bw` (smoothing bandwidth)\nin density plots. I have to confess that I do not understand all the\nrelevant factors to choose the optimal bandwidth for density plots (or\nbinwidth for histograms).\n\nIn density plots there is also the `kernel` argument for choosing the\nappropriate smoothing kernel. I learned from the video by od webel\n[-@webelod2018] that the chosen kernel (gaussian\", the standard,\n\"rectangular\", \"triangular\", \"epanechnikov\", \"biweight\", \"cosine\" or\n\"optcosine\") is not so important because the result all in similar\ndistributions. Most important, however, is to choose the appropriate\nbandwidth.\n\nIt is said that one disadvantage of density plots is its feature to\nsmooth out the distribution so that you cannot see anymore --- in\ncontrast to histograms --- if there are gaps in the data. But if you\nchoose a very small bandwidth like `ucv` then you get a distribution\nsimilar to a histogram.\n\n::: my-resource\n::: my-resource-header\nInformation about kernel density estimation and bandwidth\n:::\n\n::: my-resource-container\nMuch of my understanding about bandwidth and kernel density estimation\ncomes from the video [Intro to Kernel Density\nEstimation](https://www.youtube.com/watch?v=x5zLaWT5KPs) by od webel\n[-@webelod2018].\n\n\n{{< video https://www.youtube.com/watch?v=x5zLaWT5KPs >}}\n\n\n\nAnother article on this complex topic: [What is Kernel Density\nEstimation?](https://www.statisticshowto.com/kernel-density-estimation/).\nFrom this article I learned that a kernel is nothing else as a weighting\nfunction to estimate the <a class='glossary' title='A probability density function (pdf) tells us the probability that a random variable takes on a certain value. (Statology) The probability density function (PDF) for a given value of random variable X represents the density of probability (probability per unit random variable) within a particular range of that random variable X. Probability densities can take values larger than 1. (StackExchange Mathematics) We can use a continuous probability distribution to calculate the probability that a random variable lies within an interval of possible values. To do this, we use the continuous analogue of a sum, an integral. However, we recognise that calculating an integral is equivalent to calculating the area under a probability density curve. We use p(value) for probability densities and Pr for probabilities. (Bayesian Statistics, Chap.3)'>probability density function</a>\n(PDF). (Until now I had a sketchy impression about this concept derived\nfrom another meaning of \"kernel\", related with the core part of a\ncomputer.)\n:::\n:::\n\n### Box Plot {#sec-chap03-box-plot-1}\n\n<a class='glossary' title='Histograms are visual displays of data used to examine the distribution of a numeric variable. (SwR, Glossary)'>Histograms</a> and <a class='glossary' title='Density plots are used for examining the distribution of a variable measured along a continuum; density plots are similar to histograms but are smoothed and may not show existing gaps in data (SwR, Glossary)'>density plots</a> are great\nfor examining the overall shape of the data for a continuous variable.\n<a class='glossary' title='Boxplots are a visual representation of data that shows central tendency (usually the median) and spread (usually the interquartile range) of a numeric variable for one or more groups; boxplots are often used to compare the distribution of a continuous variable across several groups. (SwR, Glossary)'>Boxplots</a> in contrasts are useful for identifying the\nmiddle value and the boundaries around the middle half of the data.\n\n------------------------------------------------------------------------\n\n![Parts of a boxplot [@ferreira2016,\np.211]](img/chap03/box-plot-parts-min.png){#fig-box-plot-parts\nfig-alt=\"Explains the parts of a box plots: The middle 50% are called Interquartile Range (IQR). It is followed by the 'Whiskers'. Whiskers are calculated: Take the first (lower fence) or third (upper fence) 'Quartile' and add 1.5 x IQR.  A quartile is 25% of the data. Whiskers are followed by the outliers.\"\nfig-align=\"center\" width=\"100%\"}\n\n------------------------------------------------------------------------\n\n::: my-r-code\n::: my-r-code-header\n::: {#cnj-code-name}\n: Box plot of research funding (2004-2015)\n:::\n:::\n\n::: my-r-code-container\n\n::: {.cell}\n\n```{.r .cell-code}\np_box_funding <- research_funding |> \n    ggplot2::ggplot(ggplot2::aes(x = Funding / 1000000000)) +\n    ggplot2::geom_boxplot(fill = \"grey90\",\n                          color = \"black\") +\n    ggplot2::labs(x = \"Research funding (2004-2015) in billions dollar\") +\n    ggplot2::theme_bw()\n\np_box_funding\n```\n\n::: {.cell-output-display}\n![Research funding (2004-2015) for the top 30 mortility casues in the U.S. (in billions dollar)](03-data-visualization_files/figure-html/fig-box-plot-research-funding-1-1.png){#fig-box-plot-research-funding-1 width=672}\n:::\n:::\n\n:::\n:::\n\n### Summary\n\nEach of the three presented plot types (histogram, density plot and box\nplot) has it strength and disadvantage.\n\n> All three graphs show the right skew clearly, while the histogram and\n> boxplot show gaps in the data toward the end of the tail. The boxplot\n> is the only one of the three that clearly identifies the central\n> tendency and spread of the variable.\n\n::: my-r-code\n::: my-r-code-header\n::: {#cnj-chap03-histogram-density-box-plot}\n: Comparison of histogram, density plot and box plot\n:::\n:::\n\n::: my-r-code-container\n\n::: {.cell}\n\n```{.r .cell-code}\ngridExtra::grid.arrange(p_histo_funding, \n                        p_dens_funding, \n                        p_box_funding, \n                        nrow = 3)\n```\n\n::: {.cell-output-display}\n![Comparison: Histogram, densitiy plot and box plot](03-data-visualization_files/figure-html/fig-histogram-density-box-plot-1.png){#fig-histogram-density-box-plot width=672}\n:::\n:::\n\n:::\n:::\n\n------------------------------------------------------------------------\n\n## Achievement 3: Graph for two variable at once {#sec-chap03-achievement-3}\n\n### Two categorical variables {#sec-chap03-two-categorical-variables}\n\n#### Mosaic Plot {#sec-chap03-mosaic-plot}\n\n##### Properties\n\n<a class='glossary' title='Mosaic plots are visual representations of data to show the relationship between two categorical variables; useful primarily when both variables have few categories. (SwR, Glossary)'>Mosaic plots</a> also called\n[Marimekko](https://en.wikipedia.org/wiki/Marimekko) charts or Mekko\ncharts show the relative size of groups across two or more variables. It\ngives an overview of the data and makes it possible to recognize\nrelationships between different variables. For example, independence is\nshown when the boxes across categories all have the same areas.\n\nMosaic plots are the multidimensional extension of\n[spineplots](https://stat.ethz.ch/R-manual/R-devel/library/graphics/html/spineplot.html),\nwhich graphically display the same information for only one variable.\n\n***\n\n::: {#bul-chap03-mosaic-charts-properties}\n-   The displayed variables are categorical or ordinal scales.\n-   The plot is of at least two variables. There is no upper limit, but\n    too many variables may be confusing in graphic form.\n-   The number of observations is not limited, but not read in the\n    image.\n-   The areas of the rectangular tiles that are available for a\n    combination of features are proportional to the number of\n    observations that have this combination of features.\n-   Unlike as other graphs, it is not possible for the mosaic plot to\n    plot a confidence interval.\n\nProperties of Mosaic Charts\n([Wikipedia](https://en.wikipedia.org/wiki/Mosaic_plot))\n:::\n\n***\n\n##### Mosaic charts with {**ggmosaic**}\n\n::: my-example\n::: my-example-header\n::: {#exm-chap03-mosaic-chart-about-gun-usage}\n: Mosaic chart of gun use, rounds fired, ear plugs and by sex (NHANES\nsurvey 2011-2012)\n:::\n:::\n\n::: my-example-container\n::: panel-tabset\n###### Gun use & sex\n\n::: my-r-code\n::: my-r-code-header\n::: {#cnj-chap03-mosaic-gun-use-sex}\n: Firearm use by sex in the US among 2011–2012 NHANES\nparticipants\n:::\n:::\n\n::: my-r-code-container\n\n::: {.cell}\n\n```{.r .cell-code}\nnhanes_2012_clean <- readRDS(\"data/chap03/nhanes_2012_clean.rds\")\n\nlibrary(ggmosaic)\nlibrary(ggplot2)\n\nnhanes_2012_clean |> \n    tidyr::drop_na(c(gun_use, sex)) |> \n    ggplot2::ggplot() + \n    ggmosaic::geom_mosaic(ggplot2::aes(\n        x = ggmosaic::product(gun_use, sex), \n        fill = gun_use)\n        ) +\n    ggplot2::theme_classic() +\n    ggplot2::labs(x = \"Sex\",\n              y = \"Ever used a gun?\",\n              fill = \"Gun use\") +\n    ggplot2::guides(fill = ggplot2::guide_legend(reverse = TRUE)) +\n    ggplot2::scale_fill_viridis_d(\n      alpha = 1,\n      begin = 0.15,\n      end = 0.35,\n      direction = -1,\n      option = \"turbo\",\n      aesthetics = \"fill\"\n    )\n```\n\n::: {.cell-output-display}\n![Firearm use by sex in the US among 2011–2012 NHANES participants](03-data-visualization_files/figure-html/fig-mosaic-gun-use-sex-1.png){#fig-mosaic-gun-use-sex width=672}\n:::\n:::\n\n***\n\n\n:::::{.my-note}\n:::{.my-note-header}\nBetter use of mosaic charts when variables have different levels with different proportions\n:::\n::::{.my-note-container}\n@fig-mosaic-gun-use-sex is a bad example for a mosaic chart: One of its features (that the area of the columns reflect the proportion of the level) does not shine in this example because both levels (men and women) have approximately the same proportion (49.8 vs. 50.2%). Although it is better to have variables with several levels.\n::::\n:::::\n\n\n\n\n:::\n:::\n\n\n::: my-watch-out\n::: my-watch-out-header\nWATCH OUT! Loading and attaching {**ggmosaic**} is mandatory\n:::\n\n::: my-watch-out-container\nJust calling the {**ggmosaic**} functions with the `::` syntax results into an error. I have to expressively load and attach the package with `library(ggmosiac)`. But the error only appears when I render the whole document; running just the R code chunk\nworks. I suppose that this results from a misbehavior of the\n{**ggmosaic**} code.\n\nThere is also another warning with {**ggmosaic**} version 0.33: One\nshould use `tidyr::unite(`) instead of `tidyr::unite_()` since\n{**tidyr**} version 1.2.0. This is a missing adaption in the\n{**ggmosaic**} package as the warning message pointed out. I could get\nrid of this warning message by installing the GitHub version 0.34 as recommended in this [GitHub post](https://github.com/haleyjeppson/ggmosaic/issues/68#issuecomment-1812411397).\n:::\n:::\n\n\n###### Rounds fired & sex\n\n::: my-r-code\n::: my-r-code-header\n::: {#cnj-chap03-mosaic-rounds-fired-sex}\n: Rounds fired by sex in the United States among 2011–2012 NHANES\nparticipants\n:::\n:::\n\n::: my-r-code-container\n\n::: {.cell}\n\n```{.r .cell-code}\nnhanes_2012_clean |> \n    dplyr::mutate(rounds_fired =\n          dplyr::na_if(rounds_fired, \"Don't know\")) |> \n    tidyr::drop_na(c(rounds_fired, sex)) |> \n    dplyr::mutate(rounds_fired =\n          forcats::fct_drop(rounds_fired)) |> \n    ggplot2::ggplot() + \n    ggmosaic::geom_mosaic(ggplot2::aes(\n        x = ggmosaic::product(rounds_fired, sex), \n        fill = rounds_fired)\n        ) +\n    ggplot2::theme_classic() +\n    ggplot2::labs(x = \"Sex\",\n                  y = \"Total number of rounds fired\",\n                  fill = \"Rounds fired\") +\n    ggplot2::guides(fill = ggplot2::guide_legend(reverse = TRUE)) +\n    ggplot2::scale_fill_viridis_d(\n        alpha = 1,  # alpha does not work!\n        begin = .25,\n         end = .75,\n        direction = -1,\n        option = \"cividis\"\n    )\n```\n\n::: {.cell-output-display}\n![Rounds fired by sex in the United States among 2011–2012 NHANES participants](03-data-visualization_files/figure-html/fig-mosaic-rounds-fired-sex-1.png){#fig-mosaic-rounds-fired-sex width=672}\n:::\n:::\n\n***\n\nThis is already a more informative chart as @fig-mosaic-gun-use-sex. It shows that women are not only less using a gun, those they do, they fire less round than men. \n\nBut mosaic charts really shine when both variables have several levels as shown in @fig-mosaic-rounds-fired-ear-plugs.\n\n:::\n:::\n\nI have experimented with several approaches to provide a specific scale. In this case the color friendly `cividis` scale from the {**viridis**} package. From the 5 different scaling option I have 4 commented out. See the code for the details.\n\n###### Rounds fireds & ear plugs\n\n::: my-r-code\n::: my-r-code-header\n::: {#cnj-chap03-mosaic-rounds-fired-ear-plugs}\n: Number of rounds fired by wearing ear plugs among the 2011–2012 NHANES\nparticipants\n:::\n:::\n\n::: my-r-code-container\n\n::: {.cell}\n\n```{.r .cell-code}\nnhanes_2012_clean |> \n    dplyr::mutate(rounds_fired =\n        dplyr::na_if(rounds_fired, \"Don't know\")) |> \n    dplyr::mutate(ear_plugs =\n        dplyr::na_if(ear_plugs, \"Don't know\")) |> \n    tidyr::drop_na(c(rounds_fired, ear_plugs)) |> \n    dplyr::mutate(rounds_fired =\n        forcats::fct_drop(rounds_fired)) |>\n    dplyr::mutate(ear_plugs =\n        forcats::fct_drop(ear_plugs)) |>\n    ggplot2::ggplot() + \n    ggmosaic::geom_mosaic(ggplot2::aes(\n        x = ggmosaic::product(rounds_fired, ear_plugs), \n        fill = rounds_fired)\n        ) +\n    ggplot2::theme_bw() +\n    ggplot2::theme(axis.text.x = \n           ggplot2::element_text(angle = 45, \n                                 vjust = 1, \n                                 hjust = 1)) +\n    ggplot2::labs(x = \"Wearing ear plugs\",\n                  y = \"Total number of rounds fired\",\n                  fill = \"Rounds fired\") +\n    ggplot2::guides(fill = ggplot2::guide_legend(reverse = TRUE)) +\n        viridis::scale_fill_viridis(\n        discrete = TRUE,\n        option = \"turbo\",\n        direction = -1)\n```\n\n::: {.cell-output-display}\n![Rounds fired with ear plugs among the 2011–2012 NHANES participants](03-data-visualization_files/figure-html/fig-mosaic-rounds-fired-ear-plugs-1.png){#fig-mosaic-rounds-fired-ear-plugs width=672}\n:::\n:::\n\n***\n\nThe chart clearly shows that a part (more than 1/3 of the respondent) never use ear plugs, even if they fire many rounds.\n\n\n\n:::\n:::\n\n###### Gun use & sex {vcd}\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-ID-text}\n: Firearm use by sex in the US among 2011–2012 NHANES\nparticipants using {vcd}\n::::::\n:::\n::::{.my-r-code-container}\n\n::: {.cell}\n\n```{.r .cell-code}\nnhanes_2012_clean <-  base::readRDS(\"data/chap03/nhanes_2012_clean.rds\")\n\ntest <- nhanes_2012_clean |> \n    dplyr::select(gun_use, sex) |> \n    tidyr::drop_na()\n\n\nvcd::mosaic(~ gun_use + sex,\n            data = test,\n            highlighting = \"gun_use\", \n            highlighting_fill = c(\"#5fefbd\", \"#7298f6\"),\n            highlighting_direction = \"top\",\n            direction = c(\"h\", \"v\"),\n            main = \"Firearm use by sex using {vcd}\")\n```\n\n::: {.cell-output-display}\n![Firearm use by sex in the US among 2011–2012 NHANES participants](03-data-visualization_files/figure-html/fig-mosaic-vcd-1.png){#fig-mosaic-vcd width=672}\n:::\n:::\n\n\n::::\n:::::\n\nI have tried to replicate @fig-mosaic-gun-use-sex with the `vcd::mosaic()` function. But I noticed that there are several facilities of {**ggplot2**} not available (for instance \n\n- to rename x- and y-axis; \n- to rotate the text for the axis so that I can read longer variable name;\n- to present a legend with just the variable names,  \n(For the first issue I would have to rename the column names in the data frame, for the second issue I couldn't find a solution.) \n\nBecause the `vcd::mosaic()` function is too complex (for my) and requires a new package to learn I will stick with {**ggplot2**} approaches, even if I have the impression that there are some programming glitches with {**ggmosaic**}. (See for instance the [discussion in the post forum](https://community.rstudio.com/t/visualise-2x2-table-in-ggplot-with-mosaic-plot/55715/10)).\n\nEven in all the examples I found on the Internet (see for instance [Creating a Mosaic Plot](https://r-graphics.org/recipe-miscgraph-mosaic) in R Graphics Cookbook [@chang2024] I could not find a solution for my problems mentioned above.\n:::\n\n:::\n:::\n\n##### Adaptions and other resources\n\n:::::{.my-note}\n:::{.my-note-header}\nMy own adaptions to the mosaic figures\n:::\n::::{.my-note-container}\n\n\nIn contrast to the book I have used three additional adaptions for the figures produced with the {**ggmosaic**} package:\n\n1. I have used with the {**viridis**} package color-blind friendly palettes (see: @pak-viridis). There are several features to comment:\n    - I have the direction of the palettes reversed so that the light color are at the bottom and the dark colors at the top. \n    - In @fig-mosaic-gun-use-sex I had start and end color of the palette \"turbo\" manually changed to get a better color separation with lighter colors. Otherwise I would have gotten <span style=\"background-color: #30123BFF; color: white;\">dark blue</span> and <span style=\"background-color: #7A0403FF; color: white;\">dark red</span>. (Unfortunately the argument `alpha` for setting the transparency value does not work with {**viridis**}.)\n    - With {**ggplot2**} version 3.0.0 the {**viridisLite**} package was integrated integrated into {**ggplot2**}. I have used this new possibility in @fig-mosaic-gun-use-sex.\n2. I have removed the small amount of \"Don't know\" answers in @fig-mosaic-rounds-fired-sex and @fig-mosaic-rounds-fired-ear-plugs to get a graph that is easier to interpret. \n3. I have reversed the display of the legend so that the colors match the graphic e.g. from bottom to top are colors in the figure and in the legend identical.\n4. For @fig-mosaic-rounds-fired-ear-plugs I have the angle for the text of the axis set to 45° to prevent overlapping text under small columns.\n\nConcerning color friendly palettes I have added several experiments with different packages in @sec-chap03-color-palettes.\n    \n\n\n::::\n:::::\n\n\n\n\n:::::{.my-resource}\n:::{.my-resource-header}\n{vcd} / {vcdExtra} are other packages for mosaic graphs (and more)\n:::\n::::{.my-resource-container}\n\nThe packages {**vcd**} and {**vcdExtra**} are specialized package for the **v**isualization of **c**ategorical **d**ata. I have tried it out, but its usage for the mosaic function is more complex and need time to learn.\n\n{**vcd**} and {**vcdExtra**} are support packages for the book, \"Discrete Data Analysis with R\" [@friendly2015] (see @pak-vcdExtra). There is also a website [DDAR](http://ddar.datavis.ca/) (abbreviation of the book title) and a [course description](https://friendly.github.io/psy6136/) with additional material. There are several introductory vignettes to learn different aspects of the two packages.\n\nSo if you are interested to learn more about visualization of categorical data besides the mosaic graph then DDAR would be the right place.\n\n::::\n:::::\n\n\n\n\n#### Bar Chart {#sec-chap03-bar-chart-2}\n\nThere are two different kinds of bar chars: <a class='glossary' title='A stacked bar chart is a data visualization that shows parts of a whole in a bar chart format; this type of chart can be used to examine two categorical variables together by showing the categories of one variable as the bars and the categories of the other variable as different colors within each bar. (SwR, Glossary)'>stacked bar charts</a> and <a class='glossary' title='A grouped bar chart is a data visualization that shows two categorical variables in a bar chart where one group is shown along the x-axis for vertical bars or y-axis for horizontal bars and the other grouping is shown as separate bars within each of the first grouping variable categories; the bars are often different colors to distinguish the groups. (SwR, Glossary)'>grouped bar charts</a>:\n\n- `ggplot2::geom_bar()` if you are providing the records (rows) and `geom_bar()` has to calculate the number of cases in each group (as we have already done in @#sec-chap03-bar-chart-1) or\n- `ggplot2::geom_col()` if you have already counted the number of cases in each groups and provide these summarized numbers to `geom_col()`.\n\nDuring working on @sec-chap03-two-categorical-variables I have added several experiments for color friendly palettes (see @sec-chap03-color-palettes). Here I will use these lesson learned and changed the default {**ggplot2**} color palette to the base R `Okabe-Ito` palette, one of the available safe colorblind palettes. (Another recommended choice are the eight {**viridis**} palettes, especially the `viridis::cividis()` palette)\n\n:::::{.my-experiment}\n:::{.my-experiment-header}\n:::::: {#def-chap03-cvd-friendly-palettes}\n: Working with colorblind friendly color palettes\n::::::\n:::\n::::{.my-experiment-container}\n\n::: {.panel-tabset}\n\n###### Choose colors\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-chap03-choose-cvd-friendly-colors}\n: Choose two colors from a color friendly palette\n::::::\n:::\n::::{.my-r-code-container}\n\n::: {#tbl-choose-cvd-friendly-colors .cell tbl-cap='Show color distances of the \\'Okabe-Ito\\' palette for two colors for normal sighted people and people with CVD'}\n\n```{.r .cell-code}\nmy_2_colors <- grDevices::palette.colors(2, palette = \"Okabe-Ito\", alpha = .8, recycle = FALSE)\n# my_2_colors <- paletteer::paletteer_c(\"viridis::cividis\", n = 10)\n# my_2_colors <- viridis::cividis(2, direction = -1, alpha = .8)\n\ncolorblindcheck::palette_check(my_2_colors, plot = TRUE)\n```\n\n::: {.cell-output-display}\n![](03-data-visualization_files/figure-html/tbl-choose-cvd-friendly-colors-1.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#>           name n tolerance ncp ndcp min_dist mean_dist max_dist\n#> 1       normal 2  64.73729   1    1 64.73729  64.73729 64.73729\n#> 2 deuteranopia 2  64.73729   1    1 67.24857  67.24857 67.24857\n#> 3   protanopia 2  64.73729   1    0 60.15494  60.15494 60.15494\n#> 4   tritanopia 2  64.73729   1    0 62.72480  62.72480 62.72480\n```\n\n\n:::\n:::\n\n***\n\nChecking the color distances with {**colorblindcheck**} we see a very great distance (more than 60) not only in the normal vision palette but also with all <a class='glossary' title='Color vision deficiency (CVD) or color blindness (also spelled colour blindness) includes a wide range of causes and conditions and is actually quite complex. It’s a condition characterized by an inability or difficulty in perceiving and differentiating certain colors due to abnormalities in the three color-sensing pigments of the cones in the retina. (EnChroma)'>CVD</a> palettes. (See for additional details of how to use and interpret results of the {**colorblindcheck**} in @sec-chap03-test-with-colorblindcheck).\n\nThere are several options to define a new color palette. I have here chosen three approaches, but used only one (e.g., the other two options I have commented out). I have applied the base R [color vision deficiency friendly palette `Okabe-Ito`](https://stackoverflow.com/a/68492359/7322615).\n\nFor the next few graphs I need only two colors. Normally it would not change the appearance if I define a color palette with more color. The first two would always the same. But there is one exception: When I need to reverse the two color used --- as I have done in @lst-stacked-bar-geom-col --- then the reverse function is applied to the complete color palette and results in a different color composition.\n\nThis problem could be overcome with the {**ggokabeito**} package, where you could manually define the order of the colors (see @pak-ggokabeito). Additionally it provide the `Okabe Ito` scale for direct use in {**ggplot**}. \n\nNevertheless I haven't use more than two colors. The categorical variable in @fig-grouped-bar-chart-several-levels is an ordered variable (0 to 50k rounds fired) but the `Okabe Ito` palette is with its distinct discrete colors not well suited to display ordered variables.\n\n::::\n:::::\n\n\n###### ggplot2 default\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-chap03-change-ggplot2-default-palette}\n: Change the {ggplot2} default color palette\n::::::\n:::\n::::{.my-r-code-container}\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## change 2 ggplot2 colors #############\noptions(\n  ggplot2.discrete.colour = my_2_colors,\n  ggplot2.discrete.fill = my_2_colors\n)\n\nnhanes_2012_clean <- base::readRDS(\"data/chap03/nhanes_2012_clean.rds\")\n\np1 <- nhanes_2012_clean |> \n    dplyr::select(gun_use, sex) |> \n    tidyr::drop_na() |> \n    ggplot2::ggplot(ggplot2::aes(x = sex, fill = gun_use)) +\n    ggplot2::geom_bar() +\n    ggplot2::theme_minimal() +\n    ggplot2::theme(legend.position = \"none\") +\n    ggplot2::theme(aspect.ratio = 4/1) +\n    ggplot2::labs(x = \"Gun use\", \n                  y = \"Number of respondents\")\n\np2 <- nhanes_2012_clean |> \n    dplyr::select(gun_use, sex) |> \n    tidyr::drop_na() |> \n    ggplot2::ggplot(ggplot2::aes(x = sex, fill = gun_use)) +\n    ggplot2::geom_bar(position = \"dodge\") +\n    ggplot2::theme_minimal() +\n    ggplot2::theme(legend.position = \"none\") +\n    ggplot2::theme(aspect.ratio = 2/1) +\n    ggplot2::labs(x = \"Gun use\", \n                  y = \"Number of respondents\")\n\n\npatchwork:::\"-.ggplot\"(p1, p2)\n\n## restore 2 ggplot2 colors #############\n# options(\n#   ggplot2.discrete.color = NULL,\n#   ggplot2.discrete.fill = NULL\n# )\n```\n\n::: {.cell-output-display}\n![Change the {ggplot2} default color palette to my two CVD save colors](03-data-visualization_files/figure-html/fig-change-ggplot2-default-palette-1.png){#fig-change-ggplot2-default-palette width=672}\n:::\n:::\n\n\nI have changed the default colors of the {**ggplot2**} palette with two discrete colors using `options(ggplot2.discrete.fill = my_2_colors)`. To restore the default {**ggplot2**} color palette use `options(ggplot2.discrete.fill = NULL)`.\n\n::::\n:::::\n\n\n:::\n\n::::\n:::::\n\n\n\n##### Stacked Bar Chart\n\nStacked bar charts (like pie & waffle charts) show parts of a whole and have similar problems as pie charts and mosaic plots. If there are many groups or groups of similar size, stacked bar charts are difficult to interpret and *not* recommended.\n\n:::::{.my-example}\n:::{.my-example-header}\n:::::: {#exm-chap03-bar-charts-2-cat-variables}\n: Stacked bar charts for two categorical variables\n::::::\n:::\n::::{.my-example-container}\n\n::: {.panel-tabset}\n\n###### `geom_bar()`\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-chap03-stacked-bar-geom-bar}\n: Gun use by sex (using raw data = `geom_bar()`)\n::::::\n:::\n::::{.my-r-code-container}\n\n::: {.cell}\n\n```{.r .cell-code}\nnhanes_2012_clean <- base::readRDS(\"data/chap03/nhanes_2012_clean.rds\")\n\nnhanes_2012_clean |> \n    dplyr::select(gun_use, sex) |> \n    tidyr::drop_na() |> \n    ggplot2::ggplot(\n        ggplot2::aes(x = gun_use, fill = sex)\n        ) + \n    ggplot2::geom_bar() +\n    ggplot2::theme_bw() +\n    ggplot2::labs(\n        x = \"Gun use\",\n        y = \"Number of respondents\"\n    ) +\n    ggplot2::guides(\n        fill = ggplot2::guide_legend(\n            title = \"Gun use\"\n        ))\n```\n\n::: {.cell-output-display}\n![Stacked bar chart: Gun use by sex (using raw data = `geom_bar()`](03-data-visualization_files/figure-html/fig-stacked-bar-geom-bar-1.png){#fig-stacked-bar-geom-bar width=672}\n:::\n:::\n\n\n::::\n:::::\n\n\n###### `geom_col()`\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-chap03-stacked-bar-geom-col}\n: Gun use by sex (using summarized data = `geom_col()`)\n::::::\n:::\n::::{.my-r-code-container}\n\n\n::: {#lst-stacked-bar-geom-col}\n\n::: {.cell}\n\n```{.r .cell-code}\nnhanes_2012_clean <- base::readRDS(\"data/chap03/nhanes_2012_clean.rds\")\n\nnhanes_2012_clean |> \n    dplyr::select(gun_use, sex) |> \n    tidyr::drop_na() |> \n    janitor::tabyl(gun_use, sex) |> \n    tidyr::pivot_longer(\n        cols = !gun_use,\n        names_to = \"sex\",\n        values_to = \"count\"\n    ) |> \n\n    ggplot2::ggplot(\n        ggplot2::aes(x = gun_use,\n                     y = count,\n                     fill = sex)\n        ) + \n    ggplot2::geom_col(position = \n        ggplot2::position_stack(reverse = TRUE)) +\n    ggplot2::theme_bw() +\n    ggplot2::labs(\n        x = \"Gun use\",\n        y = \"Number of respondents\"\n    ) +\n    ggplot2::guides(\n        fill = ggplot2::guide_legend(\n            title = \"Gun use\",\n            reverse = TRUE\n        )) +\n    ggplot2::scale_fill_discrete(\n        type = base::rev(getOption(\"ggplot2.discrete.fill\")))\n```\n\n::: {.cell-output-display}\n![Stacked bar chart: Gun use by sex (using summarized data = `geom_col()`)](03-data-visualization_files/figure-html/fig-stacked-bar-geom-col-1.png){#fig-stacked-bar-geom-col width=672}\n:::\n:::\n\n\nStacked bar chart: Gun use by sex (using summarized data = `geom_col()`)\n:::\n\n***\n\nTo get exactly the same appearance with `geom_col()` as with `geom_bar()` in @fig-stacked-bar-geom-bar I had to add three important adaptions:\n\n1. To get the correct structure of the data I had --- after the summation with `janitor::tabyl()` --- to apply `tidyr::pivot_longer()`.\n\n2. To get the same order of stacked bars (starting with female) I had to add inside `ggplot2::geom_col()` the argument `position = ggplot2::position_stack(reverse = TRUE)`.\n\n3. To get the same order of colors I had to reverse the color order in `ggplot2::scale_fill_discrete()` with `type = base::rev(getOption(\"ggplot2.discrete.fill\"))`.\n\n::::\n:::::\n\n\n###### % of total\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-chap03-stacked-bar-geom-bar-toatal-percent}\n: Stacked bar chart: Gun use by sex in percent of total respondents\n::::::\n:::\n::::{.my-r-code-container}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnhanes_2012_clean <- base::readRDS(\"data/chap03/nhanes_2012_clean.rds\")\n\nnhanes_2012_clean |> \n    dplyr::select(gun_use, sex) |> \n    tidyr::drop_na() |> \n    \n    ggplot2::ggplot(\n        ggplot2::aes(x = gun_use, fill = sex,\n                     y = 100 * ggplot2::after_stat(count)\n                     / sum(ggplot2::after_stat(count)))\n        ) + \n    \n    ## adornments\n    ggplot2::geom_bar() +\n    ggplot2::theme_bw() +\n    ggplot2::labs(\n        x = \"Gun use\",\n        y = \"Number of respondents\"\n    ) +\n    ggplot2::guides(\n        fill = ggplot2::guide_legend(\n            title = \"Gun use\"\n        ))\n```\n\n::: {.cell-output-display}\n![Stacked bar chart: Gun use by sex in percent of total respondents](03-data-visualization_files/figure-html/fig-stacked-bar-geom-bar-total-percent-1.png){#fig-stacked-bar-geom-bar-total-percent width=672}\n:::\n:::\n\n\n:::::{.my-watch-out}\n:::{.my-watch-out-header}\nWATCH OUT! This bar chart is not correct.\n:::\n::::{.my-watch-out-container}\nInstead of displaying parts of whole (100% in each group) it relates its grouped value to the total amount of observations. This lead to a misleading perception of the relationships if the groups have different sizes. For instance in this graph male using and not using guns have approximately the same percentage (about 25%). But this is not correct: Almost 75% of the men are using fire arms.\n::::\n:::::\n\n\n\n\n::::\n:::::\n\n###### % per group\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-chap03-stacked-bar-geom-col-group-percent}\n: Proportional stacked bar chart: Gun use by sex in percent of grouped respondents\n::::::\n:::\n::::{.my-r-code-container}\n\n::: {#lst-chap03-stacked-bar-geom-col-group-percent}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnhanes_2012_clean <- base::readRDS(\"data/chap03/nhanes_2012_clean.rds\")\n\nnhanes_2012_clean |> \n    dplyr::select(gun_use, sex) |>\n    tidyr::drop_na() |> \n\n    # prepare for proportional stacked bar\n    dplyr::group_by(gun_use, sex) |>\n    dplyr::count() |>\n    ## pick the variable that will add # to 100%\n    dplyr::group_by(gun_use) |>\n    ## compute percents within chosen variable\n    dplyr::mutate(percent = 100 * (n / sum(n))) |>\n    \n    \n    ggplot2::ggplot(\n        ggplot2::aes(x = gun_use, \n                     y = percent,\n                     fill = sex)) + \n    ggplot2::geom_col() +\n    \n    \n    ggplot2::theme_bw() +\n    ggplot2::labs(\n        x = \"Gun use\",\n        y = \"Number of respondents\"\n    ) +\n    ggplot2::guides(\n        fill = ggplot2::guide_legend(\n            title = \"Gun use\"\n        )) \n```\n\n::: {.cell-output-display}\n![Proportional stacked bar chart: Gun use by sex in percent of grouped respondents](03-data-visualization_files/figure-html/fig-stacked-bar-geom-col-group-percent-1.png){#fig-stacked-bar-geom-col-group-percent width=672}\n:::\n:::\n\nThis code snippet from the book is more complex as necessary\n:::\n\n***\n\nThis is the same code as in the book. It is more complex as necessary because:\n\n1. For proportional bars it is sufficient to use `position = \"fill\"` in `geom_bar()` / `geom_col()`. Then the complex preparation for proportional bars is not necessary anymore.\n2. Instead of multiplying the `n / sum(n)` with 100 one could use `ggplot2::scale_y_continuous(labels = scales::percent)`. This has the additional advantage that `%` sign is appended at the y-values.\n\nI will show the more concise code in @lst-chap03-stacked-bar-geom-bar-proportional.\n\n\n::::\n:::::\n\n###### proportional\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-chap03-stacked-bar-geom-bar-proportional}\n: Proportional stacked bar chart: Gun use by sex\n::::::\n:::\n::::{.my-r-code-container}\n\n\n::: {#lst-chap03-stacked-bar-geom-bar-proportional}\n\n::: {.cell}\n\n```{.r .cell-code}\nnhanes_2012_clean <- base::readRDS(\"data/chap03/nhanes_2012_clean.rds\")\n\nnhanes_2012_clean |> \n    dplyr::select(gun_use, sex) |> \n    tidyr::drop_na() |> \n    \n    ggplot2::ggplot(\n        ggplot2::aes(x = gun_use, fill = sex)) + \n    ggplot2::geom_bar(position = \"fill\") +\n    \n    ## adornments\n    ggplot2::theme_bw() +\n    ggplot2::labs(\n        x = \"Gun use\",\n        y = \"Number of respondents\"\n    ) +\n    ggplot2::guides(\n        fill = ggplot2::guide_legend(\n            title = \"Gun use\"\n        )) +\n    ggplot2::scale_y_continuous(labels = scales::percent)\n```\n\n::: {.cell-output-display}\n![Proportional stacked bar chart: Gun use by sex](03-data-visualization_files/figure-html/fig-stacked-bar-geom-bar-proportional-1.png){#fig-stacked-bar-geom-bar-proportional width=672}\n:::\n:::\n\n\nMore concise code for the proportional stacked bar chart: Gun use by sex\n:::\n\nThis is the reduced code of the book snippet from @lst-chap03-stacked-bar-geom-col-group-percent. It does not need a special preparation for proportional bar parts. Instead just add `position = \"fill` into the `ggplot2::geom_bar()` or `ggplot2::geom_col()` function.\n\n\n::::\n:::::\n\n\n\n:::\n\n::::\n:::::\n\n***\n\n\n\n\n##### Grouped Bar Chart\n\n<a class='glossary' title='A grouped bar chart is a data visualization that shows two categorical variables in a bar chart where one group is shown along the x-axis for vertical bars or y-axis for horizontal bars and the other grouping is shown as separate bars within each of the first grouping variable categories; the bars are often different colors to distinguish the groups. (SwR, Glossary)'>Grouped bar charts</a> are the preferred option for bar charts. If there are more than two levels of categorical variables <a class='glossary' title='A stacked bar chart is a data visualization that shows parts of a whole in a bar chart format; this type of chart can be used to examine two categorical variables together by showing the categories of one variable as the bars and the categories of the other variable as different colors within each bar. (SwR, Glossary)'>stacked bar charts</a> are difficult to interpret. They lack a common reference point as the different observations or percentage in each levels starts and ends at different absolute position. A comparison of the relative size is for the human eye therefore awkward.\n\nFrom the conceptual point of view there is no difference in the creation between stacked and grouped bar charts. The only difference is that grouped bar charts have the argument `position = \"dodge\"` inside the `geom_bar()` or `geom_col()` argument.\n\n:::::{.my-example}\n:::{.my-example-header}\n:::::: {#exm-grouped-bar-charts}\n: Grouped bar charts for two categorical variables\n::::::\n:::\n::::{.my-example-container}\n\n::: {.panel-tabset}\n\n###### Guns by sex\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-chap03-grouped-bar-chart-two-levels}\n: Grouped bar chart with two variables with only two levels: Gun use by sex\n::::::\n:::\n::::{.my-r-code-container}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnhanes_2012_clean <- base::readRDS(\"data/chap03/nhanes_2012_clean.rds\")\n\nnhanes_2012_clean |> \n    dplyr::select(gun_use, sex) |> \n    tidyr::drop_na() |> \n    ggplot2::ggplot(\n        ggplot2::aes(x = gun_use, fill = sex)\n        ) + \n    ggplot2::geom_bar(position = \"dodge\") +\n    ggplot2::theme_bw() +\n    ggplot2::labs(\n        x = \"Gun use\",\n        y = \"Number of respondents\"\n    ) +\n    ggplot2::guides(\n        fill = ggplot2::guide_legend(\n            title = \"Gun use\"\n        ))\n```\n\n::: {.cell-output-display}\n![Grouped bar chart with two variables with only two levels: Gun use by sex](03-data-visualization_files/figure-html/fig-grouped-bar-chart-two-levels-1.png){#fig-grouped-bar-chart-two-levels width=672}\n:::\n:::\n\n\n::::\n:::::\n\n###### Set 6 colors\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-chap03-choose-six-cvd-friendly-colors}\n: Choose six colors from a color friendly palette\n::::::\n:::\n::::{.my-r-code-container}\n\n::: {#tbl-choose-six-cvd-friendly-colors .cell tbl-cap='Show color distances of the \\'cividis\\' palette for six colors for normal sighted people and people with CVD'}\n\n```{.r .cell-code}\nmy_6_colors <- viridis::cividis(6, direction = -1, alpha = .8)\ncolorblindcheck::palette_check(my_6_colors, plot = TRUE)\n```\n\n::: {.cell-output-display}\n![](03-data-visualization_files/figure-html/tbl-choose-six-cvd-friendly-colors-1.png){width=672}\n:::\n\n```{.r .cell-code}\n## change 6 ggplot2 colors #############\noptions(\n  ggplot2.discrete.colour = my_6_colors,\n  ggplot2.discrete.fill = my_6_colors\n)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#>           name n tolerance ncp ndcp min_dist mean_dist max_dist\n#> 1       normal 6  11.43205  15   15 11.43205  41.93861 94.45609\n#> 2 deuteranopia 6  11.43205  15   14 11.32162  42.45045 95.77164\n#> 3   protanopia 6  11.43205  15   14 11.15705  40.71083 90.60717\n#> 4   tritanopia 6  11.43205  15   13 10.49463  35.80623 78.10328\n```\n\n\n:::\n:::\n\n***\n\nFor the bar charts rounds fired by sex we need a different scale with\n\n- more colors (six colors in total) and\n- a gradual progression to show the order of the categorical variable\n\nChecking the color distances of the `cividis` palette from the {**viridis**} packages with {**colorblindcheck**} we can see that the minimum distance is 10.5. This is relatively low but still acceptable. I have therefore set the default {**ggplot2**} color palette to these six colors of the `cividis` palette.\n\n::::\n:::::\n\n\n\n\n###### Rounds by sex\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-chap03-bar-chart-several-levels}\n: Grouped bar chart of two variables with several levels: Rounds fired by sex\n::::::\n:::\n::::{.my-r-code-container}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnhanes_2012_clean <- base::readRDS(\"data/chap03/nhanes_2012_clean.rds\")\n\nnhanes_2012_clean |> \n    dplyr::select(rounds_fired, sex) |> \n    dplyr::mutate(rounds_fired =\n          dplyr::na_if(rounds_fired, \"Don't know\")) |> \n    tidyr::drop_na() |> \n    base::droplevels() |> \n    ggplot2::ggplot(\n        ggplot2::aes(x = sex, fill = rounds_fired)\n        ) + \n    ggplot2::geom_bar(position = \n        ggplot2::position_dodge()\n        ) +\n    ggplot2::theme_bw() +\n    ggplot2::labs(\n        x = \"Rounds fired\",\n        y = \"Number of respondents\"\n    ) +\n    ggplot2::guides(\n        fill = ggplot2::guide_legend(\n            title = \"Rounds fired\")\n        ) \n```\n\n::: {.cell-output-display}\n![Grouped bar chart of two variables with several levels: Rounds fired by sex](03-data-visualization_files/figure-html/fig-grouped-bar-chart-several-levels-1.png){#fig-grouped-bar-chart-several-levels width=672}\n:::\n:::\n\n***\n\nFrom this graph it is obvious that men fire generally more rounds than women. But the absolute value is not conclusive because we cannot see how many people in each group was excluded because they didn't even fire one round. It could be that there are much more men than women that did not even fire one round. We already know that this is not the case but from this graph alone you wouldn't know.\n\nTo get a more complete picture:\n\n1. We add also people without any use of fire arms into the graph.\n2. We calculate the percentage of rounds fired per group (= by sex).\n\n\n::::\n:::::\n\n\n###### Rounds all by sex\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-chap03-bar-chart-several-levels-all}\n: Grouped bar chart of two variables with several levels: Rounds fired by sex of all respondents\n::::::\n:::\n::::{.my-r-code-container}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnhanes_2012_clean <- base::readRDS(\"data/chap03/nhanes_2012_clean.rds\")\n\nnhanes_2012_clean |> \n    dplyr::select(gun_use, rounds_fired, sex) |> \n    dplyr::mutate(rounds_fired = \n          dplyr::if_else(gun_use == \"No\", \"0 rounds fired\", rounds_fired)\n    ) |> \n    dplyr::mutate(rounds_fired =\n          dplyr::na_if(rounds_fired, \"Don't know\")) |>\n    tidyr::drop_na() |>\n    base::droplevels() |>\n    \n    ## prepare for percentage calculation\n    dplyr::group_by(rounds_fired, sex) |>\n    dplyr::count() |>\n    ## pick the variable that will add to 100%\n    dplyr::group_by(sex) |>\n    ## compute percents within chosen variable\n    dplyr::mutate(percent = n / sum(n)) |>\n\n    ggplot2::ggplot(\n        ggplot2::aes(x = sex, \n                     y = percent,\n                     fill = rounds_fired)\n        ) + \n    ggplot2::geom_col(position = \n        ggplot2::position_dodge()\n        ) +\n    ggplot2::theme_bw() +\n    ggplot2::labs(\n        x = \"Rounds fired\",\n        y = \"Percentage\"\n    ) +\n    ggplot2::guides(\n        fill = ggplot2::guide_legend(\n            title = \"Rounds fired\")\n        ) +\n    ggplot2::scale_y_continuous(\n        labels = scales::label_percent()\n        ) +\n    ggplot2::scale_fill_brewer(palette = \"BuGn\")\n```\n\n::: {.cell-output-display}\n![Grouped bar chart of two variables with several levels: Rounds fired by sex of all respondents](03-data-visualization_files/figure-html/fig-grouped-bar-chart-several-levels-all-1.png){#fig-grouped-bar-chart-several-levels-all width=672}\n:::\n:::\n\n***\n\nNow we can say generally that more man use firearms than women. From those respondents (men and women) that are using guns, men fire generally more rounds than women.\n\n\n::::\n:::::\n\n\n\n:::\n\n::::\n:::::\n\n\n### One categorical and one continuous variable\n\n#### Bar Chart {#sec-chap03-bar-chart-3}\n\nThe is just one difference for bar charts with one categorical and one continuous variable in comparison to the bar charts used previously in this chapter: We need a summary statistics for the continuous variable so that we can present accordingly the height of the bar. These summary statistics has to be inserted into the `geom_bar()` function.\n\n:::::{.my-example}\n:::{.my-example-header}\n:::::: {#exm-chap03-bar-chart-cat-cont}\n: Bar charts with one categorical and one continuous variable\n::::::\n:::\n::::{.my-example-container}\n\n::: {.panel-tabset}\n\n###### book-error\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-chap03-book-error}\n: The R code from the book does not work\n::::::\n:::\n::::{.my-r-code-container}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfbi_deaths_clean <- base::readRDS(\"data/chap03/fbi_deaths_clean.rds\")\n\nfbi_deaths_clean |>  \n    ggplot2::ggplot(\n        ggplot2::aes(x = weapons, y = deaths)\n        ) + \n    ggplot2::geom_bar(stat = \"summary\", fun.y = mean) + \n    ggplot2::theme_minimal() + \n    ggplot2::labs(x = \"Firearm type\", \n                  y = \"Number of homicides committed\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n#> Warning in ggplot2::geom_bar(stat = \"summary\", fun.y = mean): Ignoring unknown\n#> parameters: `fun.y`\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n#> No summary function supplied, defaulting to `mean_se()`\n```\n\n\n:::\n\n::: {.cell-output-display}\n![Using the R code from the book does not work](03-data-visualization_files/figure-html/fig-book-error-1.png){#fig-book-error width=672}\n:::\n:::\n\n***\n\nHere I was using exactly the same code as in the book for Figure 3.45. Because of changes in {**ggplot2**) this code does not work anymore. I got two messages:\n\n> - No summary function supplied, defaulting to `mean_se()`\n> - Warning: Ignoring unknown parameters: `fun.y`\n\nThe problem is that the arguments inside `ggplot2::geom_bar()` didn't work.\n\n::::\n:::::\n\n\n###### book revised\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-chap03-book-revised}\n: Revised book code using `ggplot2::stat_summary()`\n::::::\n:::\n::::{.my-r-code-container}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfbi_deaths_clean <- base::readRDS(\"data/chap03/fbi_deaths_clean.rds\")\n\nfbi_deaths_clean |> \n    ggplot2::ggplot(\n        ggplot2::aes(x = weapons)\n    ) +\n    ggplot2::geom_bar() +\n    ggplot2::stat_summary(\n        ggplot2::aes(y = deaths),\n        fun = \"mean\",\n        geom = \"bar\"\n        ) +\n    ggplot2::theme_bw() +\n    ggplot2::labs(x = \"Firearm type\", \n                  y = \"Number of homicides committed\") \n```\n\n::: {.cell-output-display}\n![Bar chart with calculating the mean for the 2012-2016](03-data-visualization_files/figure-html/fig-book-revised-1.png){#fig-book-revised width=672}\n:::\n:::\n\n***\n\nThis code chunk works without any message and warning. There are three differences to the code from the book:\n\n1. Only the x variable is the aesthetics for the `ggplot()` call.\n2. `geom_bar()` is empty in contrast to the book where arguments for summarizing statistics are added inside the `geom_bar()` parenthesis.\n3. A new function `stat_summary()` is added with supplies all the necessary arguments to generate the summarizing statistics. It needs an extra aesthetics for the y-axis where the calculation takes place.\n\n::::\n:::::\n\n###### mean & flipped\n\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-chap03-bar-chart-mean-and-flipped}\n: Bar chart: Calculating mean values with `stat_summary()` and flipped coordinates\n::::::\n:::\n::::{.my-r-code-container}\n\n::: {#lst-chap03-bar-chart-mean}\n\n::: {.cell}\n\n```{.r .cell-code}\nfbi_deaths_clean <- base::readRDS(\"data/chap03/fbi_deaths_clean.rds\")\n\nfbi_deaths_clean |> \n    ggplot2::ggplot(\n        ggplot2::aes(\n            x = stats::reorder(x = weapons, X = -deaths))\n        ) +\n    ggplot2::geom_bar() +\n    ggplot2::stat_summary(\n        ggplot2::aes(\n            y = deaths,\n            fill = weapons,\n            group = weapons),\n        fun = \"mean\",\n        geom = \"bar\"\n        ) +\n    ggplot2::coord_flip() +\n    ggplot2::theme_bw() +\n    ggplot2::labs(x = \"Firearm type\", \n                  y = \"Number of homicides committed\") +\n    ggplot2::scale_fill_manual(values =\n           c(\"Handguns\" = \"#7463AC\",\n             \"Firearms, type not stated\" = \"gray\",\n             \"Rifles\" = \"gray\",\n             \"Shotguns\" = \"gray\",\n             \"Other guns\" = \"gray\"), guide = \"none\")\n```\n\n::: {.cell-output-display}\n![Calculating mean values using `geom_bar()` with `stat_summary()` and flipped coordinates](03-data-visualization_files/figure-html/fig-bar-chart-mean-and-flipped-1.png){#fig-bar-chart-mean-and-flipped width=672}\n:::\n:::\n\nCalculating mean values using `geom_bar()` with `stat_summary()` and flipped coordinates\n:::\n\n***\n\nHere I have used the same code as before but have added several scale improvements like flipped axis, reordered the bars and changed to a sparse theme.\n\nI had considerable problems with the fill color for this chart, because I did not know where and how to add the `fill` aesthetics. As I added during my experimentation a new `ggplot2::eas()` layer with the argument `fill = weapons`, I got the following warning message: \n\n> The following aesthetics were dropped during statistical transformation. This can happen when ggplot fails to infer the correct grouping structure in the data. Did you forget to specify a `group` aesthetic or to convert a numerical variable into a factor?\n\nI didn't know how to add the `group` aesthetic and all the examples I found on the web are referring to `geom_line()`. (See for instance the page of the online manual for ggplot2 [Aesthetics: grouping](https://ggplot2.tidyverse.org/reference/aes_group_order.html) or Mapping variable values to colors in the first edition of [R Graphics Cookbook](http://www.cookbook-r.com/Graphs/Colors_(ggplot2)/#mapping-variable-values-to-colors)). I finally found the solution. The following text snippet is now more understandable for me:\n\n> The group aesthetic is by default set to the interaction of all discrete variables in the plot. This choice often partitions the data correctly, but when it does not, or when no discrete variable is used in the plot, you will need to explicitly define the grouping structure by mapping group to a variable that has a different value for each group. [Aesthetics: grouping](https://ggplot2.tidyverse.org/reference/aes_group_order.html)\n\nAn easier solution (for me) is to compute the mean values of the different firearms and then to apply a bar chart using `geom_col()` as I have done in the next tab with @lst-chap03-col-chart-mean.\n\n::::\n:::::\n\n###### `geom_col()`\n\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-chap03-col-chart-mean-and-flipped}\n: Bar chart: Using mean values with `geom_col()` and flipped coordinates\n::::::\n:::\n::::{.my-r-code-container}\n\n\n::: {#lst-chap03-col-chart-mean}\n\n::: {.cell}\n\n```{.r .cell-code}\nfbi_deaths_clean <- base::readRDS(\"data/chap03/fbi_deaths_clean.rds\")\n\nfbi_deaths_clean |>\n    dplyr::group_by(weapons) |>\n    dplyr::summarize(mean_deaths_2012_2016 = mean(deaths)) |>\n    ggplot2::ggplot(\n        ggplot2::aes(fill = weapons,\n            x = stats::reorder(\n            x = weapons, \n            X = -mean_deaths_2012_2016),\n            y = mean_deaths_2012_2016)\n        ) +\n    ggplot2::geom_col() +\n    ggplot2::coord_flip() +\n    ggplot2::theme_bw() +\n    ggplot2::labs(x = \"Firearm type\",\n                  y = \"Number of homicides committed\") +\n    ggplot2::scale_fill_manual(values = \n           c(\"Handguns\" = \"#7463AC\", \n             \"Firearms, type not stated\" = \"gray\", \n             \"Rifles\" = \"gray\", \n             \"Shotguns\" = \"gray\", \n             \"Other guns\" = \"gray\"), guide = \"none\")\n```\n\n::: {.cell-output-display}\n![Bar chart: Using already computed mean values with `geom_col()` and flipped coordinates](03-data-visualization_files/figure-html/fig-col-chart-mean-and-flipped2-1.png){#fig-col-chart-mean-and-flipped2 width=672}\n:::\n:::\n\nBar chart: Using already computed mean values with `geom_col()` and flipped coordinates\n:::\n\n***\n\nIn this version I have calculated the mean beforehand I have passed the data to {**ggplot2**}. This was easier for me to understand and I had this solution long before I solved the `group` problem in @lst-chap03-bar-chart-mean.\n::::\n:::::\n\n###### guns/year\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-chap03-homicide-guns-year}\n: Number of Homicides by type of firearms (2012-2016)\n::::::\n:::\n::::{.my-r-code-container}\n\n::: {.cell}\n\n```{.r .cell-code}\np <- fbi_deaths_clean |>\n    ggplot2::ggplot(\n        ggplot2::aes(fill = year,\n                     y = deaths,\n                     x = stats::reorder(\n                            x = weapons, \n                            X = -deaths)\n                    )\n        ) +\n    ggplot2::geom_bar(position = 'dodge', stat = 'identity') +\n    ggplot2::coord_flip() +\n    ggplot2::theme_bw() +\n    ggplot2::labs(x = \"Firearm type\",\n                  y = \"Number of homicides committed\",\n                  fill = \"Year\")\n\nmy_5_colors <- viridis::cividis(5, direction = -1, alpha = .8)\nwithr::with_options(\n    list(ggplot2.discrete.fill = my_5_colors),\n    print(p)\n)\n```\n\n::: {.cell-output-display}\n![Number of Homicides by type of firearms (2012-2016)](03-data-visualization_files/figure-html/fig-homicide-guns-year-1.png){#fig-homicide-guns-year width=672}\n:::\n:::\n\n***\n\nHere I have the first time used the {**withr**} package (see: @pak-withr) for a just temporary change of the {**ggplot2**) standard color palette. This has the advantage that one doesn't restore the original value. \n\n::::\n:::::\n\n::: {.callout-tip}\n1. Handguns are in all years constant the type of firearms where the most homicides were committed.\n2. Starting with 2013 the homicides with handguns are rising constantly.\n3. The type of firearms not stated is also rising over the years. What is the reason that this category is on the rise? As the second most cause of homicides it could disturb the previous conclusion. Imagine that most of this category belong to handguns category than we would see a still stepper rise of homicides with handguns. Or the diametrically opposite assumption: If most of the this category belongs to one of the other smaller categories than this would change the ranking of the homicides by firearm types.  \n:::\n\n###### year/gun\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-chap03-homicide-year-gun}\n: Number of homicides in the years 2012-2016 per type of firearms\n::::::\n:::\n::::{.my-r-code-container}\n\n::: {.cell}\n\n```{.r .cell-code}\np <- fbi_deaths_clean |>\n    ggplot2::ggplot(\n        ggplot2::aes(fill = weapons,\n                     x = year,\n                     y = deaths)\n        ) +\n    ggplot2::geom_bar(position = 'dodge', stat = 'identity') +\n    ggplot2::coord_flip() +\n    ggplot2::theme_bw() +\n    ggplot2::labs(x = \"Year\",\n                  y = \"Number of homicides committed\",\n                  fill = \"Weapons\") \n    \nmy_5_colors <- viridis::cividis(5, direction = -1, alpha = .8)\nwithr::with_options(\n    list(ggplot2.discrete.fill = my_5_colors),\n    print(p)\n)\n```\n\n::: {.cell-output-display}\n![Number of homicides in the years 2012-2016 per type of firearms](03-data-visualization_files/figure-html/fig-homicide-year-gun-1.png){#fig-homicide-year-gun width=672}\n:::\n:::\n\n\n::::\n:::::\n\n::: {.callout-tip}\nThis graph is not very informative because it is difficult to compare the type of firearms for different years. To get this information a line chart would be much better (see @sec-chap03-line-graph).\n:::\n:::\n\n::::\n:::::\n\n***\n\n\n#### Point Chart {#sec-chap03-point-chart}\n\nPoint charts are an alternative for simple bar graphs. The use less ink and are generated with the same code as bar charts with two exceptions:\n\n- Instead of the `geom_bar()` / `geom_col()` this type of graph uses `geom_point()`.\n- To colorize the graph one need the `color` scale instead of the `fill` scale..\n\n:::::{.my-example}\n:::{.my-example-header}\n:::::: {#exm-ID-text}\n: Numbered Example Title\n::::::\n:::\n::::{.my-example-container}\n\n::: {.panel-tabset}\n\n###### header1\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-code-name-a}\n: Numbered R Code Title (Original)\n::::::\n:::\n::::{.my-r-code-container}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfbi_deaths_clean <- base::readRDS(\"data/chap03/fbi_deaths_clean.rds\")\n\nfbi_deaths_clean |>\n    dplyr::group_by(weapons) |>\n    dplyr::summarize(mean_deaths_2012_2016 = mean(deaths)) |>\n    ggplot2::ggplot(\n        ggplot2::aes(color = weapons,\n                     x = stats::reorder(\n                         x = weapons, \n                         X = -mean_deaths_2012_2016),\n                     y = mean_deaths_2012_2016)\n        ) +\n    ggplot2::geom_point(size = 4) +\n    ggplot2::coord_flip() +\n    ggplot2::theme_bw() +\n    ggplot2::labs(x = \"Firearm type\",\n                  y = \"Number of homicides committed\") +\n    ggplot2::scale_color_manual(values = \n           c(\"Handguns\" = \"#7463AC\", \n             \"Firearms, type not stated\" = \"gray\", \n             \"Rifles\" = \"gray\", \n             \"Shotguns\" = \"gray\", \n             \"Other guns\" = \"gray\"), guide = \"none\") \n```\n\n::: {.cell-output-display}\n![Point chart: Mean annual homicides by firearm type in the United States, 2012–2016](03-data-visualization_files/figure-html/fig-point-chart-mean-and-flipped-1.png){#fig-point-chart-mean-and-flipped width=672}\n:::\n:::\n\n\n\n::::\n:::::\n\n\n###### header2\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-code-name-b}\n: Numbered R Code Title (Tidyverse)\n::::::\n:::\n::::{.my-r-code-container}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfbi_deaths_clean <- base::readRDS(\"data/chap03/fbi_deaths_clean.rds\")\n\nfbi_deaths_clean |>\n    dplyr::group_by(weapons) |>\n    dplyr::summarize(\n        central = mean(x = deaths), \n        spread = sd(x = deaths)\n        ) |> \n    ggplot2::ggplot(\n        ggplot2::aes(x = stats::reorder(\n                         x = weapons, \n                         X = -central),\n                     y = central)\n    ) +\n    ggplot2::geom_errorbar(\n        ggplot2::aes(ymin = central - spread, \n                     ymax = central + spread, \n                     linetype = \"Mean\\n+/- sd\"), \n        width = .2) +\n    ggplot2::geom_point(\n        ggplot2::aes(color = weapons,\n                     size = \"Mean (2012-2016)\"),\n        alpha = 0.5\n    ) +\n    ggplot2::coord_flip() +\n    ggplot2::theme_bw() +\n    ggplot2::labs(x = \"Firearm type\",\n                  y = \"Number of homicides committed\") +\n    ggplot2::scale_color_manual(values = \n           c(\"Handguns\" = \"#7463AC\", \n             \"Firearms, type not stated\" = \"gray\", \n             \"Rifles\" = \"gray\", \n             \"Shotguns\" = \"gray\", \n             \"Other guns\" = \"gray\"), \n           guide = \"none\"\n           ) +\n    ggplot2::scale_linetype_manual(values = 1, name = \"Error bars\") + \n    ggplot2::scale_size_manual(values = 4, name = \"\") + \n    ggplot2::theme(legend.position = \"top\")\n```\n\n::: {.cell-output-display}\n![Point chart with error bars: Mean annual homicides by firearm type in the United States, 2012–2016](03-data-visualization_files/figure-html/fig-point-chart-mean-error-bars-1.png){#fig-point-chart-mean-error-bars width=672}\n:::\n:::\n\n***\n\nI added `alpha = 0.5` so that the small error bars are still visible \"behind\" the big dots.\n\n::::\n:::::\n\nThis is a more complex graph: It has two layers (`geom_errorbar()` and `geom_point()`) and three different scales (weapons, line type and size). The difficulty for me is to know where to put the different aesthetics. For instance: I could put `size = 4` after the `alpha = 0.5` argument, but then the argument `scale_size_manual(values = 4)` would not work anymore. Otherwise it is not possible to add the alpha argument into the `scale_size_manual()` function.\n\n\n::: {.callout-tip}\nOnly for \"firearms, type not stated\" and \"Handguns\" had a remarkable size of standard deviation from the mean. For the other types (\"Riffles\", \"shotguns\" and \"other guns\") the spread is so small that they did not even extend outside of the dots. (To see them, I had to apply an `alpha` argument.)\n\nIn the book Harris supposes that the the small number of years is the reason for this tendency. I do not believe that this may be the main reason. I think it has more to do with the absolute small numbers of observation in these type of firearms.\n:::\n\n:::\n\n::::\n:::::\n\n\n#### Box Plot {#sec-chap03-box-plot-2}\n\nWhile the bar chart and point chart were great for comparing the means of the groups, the boxplot will provide more information about the distribution in each group.\n\n:::::{.my-example}\n:::{.my-example-header}\n:::::: {#exm-ID-text}\n: Numbered Example Title\n::::::\n:::\n::::{.my-example-container}\n\n::: {.panel-tabset}\n\n###### header1\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-code-name-a}\n: Numbered R Code Title (Original)\n::::::\n:::\n::::{.my-r-code-container}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfbi_deaths_clean <- base::readRDS(\"data/chap03/fbi_deaths_clean.rds\")\n\nfbi_deaths_clean |>\n    ggplot2::ggplot(\n        ggplot2::aes(x = stats::reorder(\n                         x = weapons, \n                         X = -deaths),\n                     y = deaths)\n        ) +\n    ggplot2::geom_boxplot() +\n    ggplot2::coord_flip() +\n    ggplot2::theme_bw() +\n    ggplot2::labs(x = \"Firearm type\",\n                  y = \"Number of homicides committed\") \n```\n\n::: {.cell-output-display}\n![Boxplot: Annual homicides by firearm type in the United States, 2012–2016](03-data-visualization_files/figure-html/fig-boxplots-guns-1.png){#fig-boxplots-guns width=672}\n:::\n:::\n\nIn contrast to the book I have not colored / filled the boxes.\n\nIn this type of graph we do not only see the bigger spread of handguns and firearms not stated, but we also see the skew of these two distributions.\n\nIn the next tab we can see the distribution of the mean values in relation to the boxplots.\n\n::::\n:::::\n\n::: {.callout-tip}\n1. The number of homicides by handguns and firearms, where the type is not stated, varies in the years 2012-2016 a lot.\n2. Both distributions are skewed as the median is not in the middle of the box. Firearms, whose types are not stated, has the median on the far left of the box. The distribution is right skewed because is has some large values to the right.\n3. The situation for handguns is reversed: It is a left skewed distribution because there are some small values to the left of the median resulting in a smaller mean.\n\n\n:::\n###### header2\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-code-name-b}\n: Numbered R Code Title (Tidyverse)\n::::::\n:::\n::::{.my-r-code-container}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfbi_deaths_clean <- base::readRDS(\"data/chap03/fbi_deaths_clean.rds\")\n\n## if jitter should always result \n## in the same horizontal position\n# set.seed(500) \n\nfbi_deaths_clean |>\n    ggplot2::ggplot(\n        ggplot2::aes(x = stats::reorder(\n                         x = weapons, \n                         X = -deaths),\n                     y = deaths)\n        ) +\n    ggplot2::geom_boxplot() +\n    ggplot2::geom_jitter() +\n    ggplot2::coord_flip() +\n    ggplot2::theme_bw() +\n    ggplot2::labs(x = \"Firearm type\",\n                  y = \"Number of homicides committed\") \n```\n\n::: {.cell-output-display}\n![Boxplot with data points: Annual homicides by firearm type in the United States, 2012–2016](03-data-visualization_files/figure-html/fig-boxplots-guns-data-points-1.png){#fig-boxplots-guns-data-points width=672}\n:::\n:::\n\n***\n\nI didn't need `alpha = .8` as in the book, because I didn't fill the boxes with color.\n\nI noticed that whenever I run the code chunk the horizontal position of the data points changes. This is the effect of the `jitter` command. I you want to have always exactly the same position than you would have to add a `set.seed()` in front of the computation.\n\nIt is interesting to see that just one data point far from the median cannot change its position. Compare the far right dot of firearms not reported. It has the same relative position to the box as the far right dot of the handguns category. But it didn't pull the median to its position. In contrast to the handguns where several other points on the right side support the one far right dot and drag the median to the right.\n\n::::\n:::::\n\n:::\n\n::::\n:::::\n\n\n#### Violin Plot {#sec-chap03-violin-plot}\n\n<a class='glossary' title='Violing plots are visual displays of data that combine features of density plots and boxplots to show the distribution of numeric variables, often across groups. (SwR, Glossary)'>Violin plots</a> can be seen as a graph type between <a class='glossary' title='Boxplots are a visual representation of data that shows central tendency (usually the median) and spread (usually the interquartile range) of a numeric variable for one or more groups; boxplots are often used to compare the distribution of a continuous variable across several groups. (SwR, Glossary)'>boxplots</a> and <a class='glossary' title='Density plots are used for examining the distribution of a variable measured along a continuum; density plots are similar to histograms but are smoothed and may not show existing gaps in data (SwR, Glossary)'>density plots</a>. They are typically used to look at the distribution of continuous data within categories.\n\nFor the homicide data they do not work because there are not enough data. There were too few cases in some categories. So the book applied the violin plot to the age by sex data from the <a class='glossary' title='The National Health and Nutrition Examination Survey (NHANES) is a program of studies designed to assess the health and nutritional status of adults and children in the United States. The survey is unique in that it combines interviews and physical examinations. (NHANES)'>NHANES</a> survey.\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-chap03-violin-plot-sex-nhanes-2012}\n: Using a violin plot to compare respondent sex of the NHANES 2012 survey\n::::::\n:::\n::::{.my-r-code-container}\n\n::: {.cell}\n\n```{.r .cell-code}\nnhanes_2012_clean <-  base::readRDS(\"data/chap03/nhanes_2012_clean.rds\")\n\nnhanes_2012_clean |> \n    ggplot2::ggplot(\n        ggplot2::aes(x = sex, y = RIDAGEYR)\n    ) +\n    ggplot2::geom_violin(\n        ggplot2::aes(fill = sex)\n    ) +\n    ggplot2::theme_bw() +\n    ggplot2::labs(\n        x = \"Sex\",\n        y = \"Age in years\"\n    ) + \n    ggokabeito::scale_fill_okabe_ito(\n        guide = \"none\"\n    )\n```\n\n::: {.cell-output-display}\n![](03-data-visualization_files/figure-html/violin-plot-sex-nhanes-2012-1.png){width=672}\n:::\n:::\n\n\n::::\n:::::\n\n\n\n\n### Two continuous variables\n\n#### Line Graph {#sec-chap03-line-graph}\n\n:::::{.my-example}\n:::{.my-example-header}\n:::::: {#exm-ID-text}\n: Firearms per type manufactured in the United States\n::::::\n:::\n::::{.my-example-container}\n\n::: {.panel-tabset}\n\n###### Circulating guns\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-chap03-manufactured-2017-line-graph}\n: Firearms circulating in the United States 1986-2017\n::::::\n:::\n::::{.my-r-code-container}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nguns_total <-  \n    base::readRDS(\"data/chap03/guns_total.rds\")\n\nguns_total |>\n    tidyr::pivot_longer(\n        cols = 2:6,\n        names_to = \"gun_type\",\n        values_to = \"gun_count\"\n    ) |> \n    dplyr::mutate(Year = base::as.numeric(Year),\n                  gun_type = forcats::as_factor(gun_type)\n    ) |> \n    \n    ggplot2::ggplot(\n        ggplot2::aes(\n            x = Year, \n            y = gun_count / 1e5)\n        ) +\n    ggplot2::geom_line(\n        ggplot2::aes(color = gun_type)\n    ) +\n    ggplot2::theme_bw() +\n    ggplot2::labs(\n        y = \"Number of firearms (in 100,000s)\",\n    ) + \n    ggplot2::scale_x_continuous(\n        limits = c(1986, 2017), \n        breaks = c(1986, 1990, 1995, 2000,\n                   2005, 2010, 2015, 2017)) +\n    ggokabeito::scale_color_okabe_ito(\n        order = c(1:3, 7, 9),\n        name = \"Type of\nFirearm\",\n        breaks = c('Total', 'Handguns', 'Rifles',\n                   'Shotguns',  'Misc'))\n\n# # # palette_okabe_ito(order = 1:9, alpha = NULL, recycle = FALSE)\n# \"#E69F00\" \"#56B4E9\" \"#009E73\" \"#F0E442\" \"#0072B2\" \"#D55E00\" \"#CC79A7\" \"#999999\" \"#000000\"\n```\n\n::: {.cell-output-display}\n![Firearms circulating in the United States 1986-2017](03-data-visualization_files/figure-html/fig-manufactured-2017-line-graph-1.png){#fig-manufactured-2017-line-graph width=672}\n:::\n:::\n\n\n***\n\nThere are four remarkable code lines:\n\n1. To prevent scientific notation on the y-axis I had changed the measure unit to 100000 guns (1e5).\n2. I added several breaks for the x-axis.\n3. I reordered the legend to match the position with the lines of the gun types.\n4. I used with the Okabe Ito color scale a colorblind friendly color palette and chose those colors that can be distinguished best. The function `palette_okabe_ito(order = 1:9, alpha = NULL, recycle = FALSE)` generates Hex color code for all nine colors of palette. If you copy the (not runable) resulted hex code into the R code chunk, you can examine the appropirate colors visually. --- I commented these two code line out.\n\n::::\n:::::\n\nI took the [ATF data form the PDF file](https://www.atf.gov/firearms/docs/report/2019-firearms-commerce-report/download) and had calculated guns manufactured (from the USAFact.org website) and subtracted exported guns (page 4 of the ATF PDF) and added imported guns (page 6 of the ATF PDF). For details of the sources see @sec-gun-production.\n\n\n\n###### Guns manufactured\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-chap03-manufactured-2019-line-graph}\n: Firearms manufactured in the United States 1986-2019\n::::::\n:::\n::::{.my-r-code-container}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nguns_manufactured_2019_clean <-  \n    base::readRDS(\"data/chap03/guns_manufactured_2019_clean.rds\")\n\nlookup_manufactured <- c(\n    Total = \"Firearms manufactured (Items)\",\n    Pistols = \"Pistols (Items)\",\n    Rifles = \"Rifles (Items)\",\n    Shotguns = \"Shotguns (Items)\",\n    Revolvers = \"Revolvers (Items)\",\n    Misc = \"Misc. Firearms (Items)\"\n    )\n\n\nguns_manufactured_2019_clean |>\n    tidyr::pivot_longer(\n        cols = -Years,\n        names_to = \"year\",\n        values_to = \"gun_count\"\n    ) |> \n    dplyr::rename(gun_type = \"Years\") |> \n    dplyr::mutate(year = base::as.numeric(year),\n                  gun_type = forcats::as_factor(gun_type)\n    ) |>\n    tidyr::pivot_wider(\n        names_from = gun_type,\n        values_from = gun_count\n    ) |> \n    dplyr::rename(\n        dplyr::all_of(lookup_manufactured)\n    ) |> \n    tidyr::pivot_longer(\n        cols = -year,\n        names_to = \"gun_type\",\n        values_to = \"gun_count\"\n    ) |> \n    \n    ggplot2::ggplot(\n        ggplot2::aes(\n            x = year, \n            y = gun_count / 1e5)\n        ) +\n    ggplot2::geom_line(\n        ggplot2::aes(color = gun_type)\n    ) +\n    ggplot2::theme_bw() +\n    ggplot2::labs(\n        y = \"Number of firearms (in 100,000s)\",\n        x = \"Year manufactured\"\n    ) +\n    ggplot2::scale_x_continuous(\n        limits = c(1986, 2019),\n        breaks = c(1986, 1990, 1995, 2000,\n                   2005, 2010, 2015, 2019)) +\n    ggokabeito::scale_color_okabe_ito(\n        order = c(1:3, 6, 7, 9),\n        name = \"Type of\nFirearm\",\n        breaks = c('Total', 'Pistols', 'Rifles',\n                   'Misc', 'Revolvers', 'Shotguns'))\n```\n\n::: {.cell-output-display}\n![](03-data-visualization_files/figure-html/manufactured-2019-line-graph-1.png){width=672}\n:::\n\n```{.r .cell-code}\n## palette_okabe_ito(order = 1:9, alpha = NULL, recycle = FALSE)\n# \"#E69F00\" \"#56B4E9\" \"#009E73\" \"#F0E442\" \"#0072B2\" \"#D55E00\" \"#CC79A7\" \"#999999\" \"#000000\"\n```\n:::\n\n\nHere applies the same comment from the previous tab \"Circulating guns\". \n::::\n:::::\n\n:::\n\n::::\n:::::\n\n***\n\n#### Scattterplot {#sec-chap03-scatterplot}\n\n------------------------------------------------------------------------\n\n## Exercises\n\n------------------------------------------------------------------------\n\n## Additional resources for this chapter\n\n### Color Palettes {#sec-chap03-color-palettes}\n\n#### Introduction\n\nAt least since creating graphs for two variable at once (@sec-chap03-achievement-3) the question arises: What color palette should be chosen?  \n\nTo dive into the topic of color palettes for R is a very deep water and I can here only scratch the surface. My main purpose in this section is to provide practical orientation on tools to choose appropriate color palettes. I am following here mainly the [compiled material by Emil Hvitfeldt](https://github.com/EmilHvitfeldt/r-color-palettes) [-@hvitfeldt2024], who is also the developer of {**paleteer**} (see @pak-paletteer) [@paletteer].\n\nIt is not enough that the colors do not offend the eye, e.g. that they are aesthetically pleasant. There are two other important consideration as well:\n\n1. Palettes have to retain its integrity when printed in black and white\n2. People with colorblindness are able to understand it ([Perception of color palettes](https://github.com/EmilHvitfeldt/r-color-palettes))\n\n#### Printing black & white\n\nOften you have a beauty colorful graphic which looks very nice in RStudio and on your web site. But how does it look when the graphics is printed out or appear in book published only in black and white?\n\nYou can check the black/white appearance of the colors your plot is using with the function `colorspace::desaturate()`.\n\n:::::{.my-important}\n:::{.my-important-header}\nTo test if the palette you want to use will be distorted when in black and white, use the `colorspace::desaturate()` function.\n:::\n:::::\n\n\n:::::{.my-experiment}\n:::{.my-experiment-header}\n:::::: {#def-colorspace-desaturate}\n: Using `colorspace::desaturate()` to test how color palettes perform in black & white \n::::::\n:::\n::::{.my-experiment-container}\n\n::: {.panel-tabset}\n\n###### ggplot2\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-ggplot2-palette-bw}\n: Standard color palette for {ggplot2} in color and desaturated\n::::::\n:::\n::::{.my-r-code-container}\n\n\n::: {.cell}\n\n```{.r .cell-code}\npal_data <- list(\n    names = c(\"Normal\", \"desaturated\"),\n    color = list(scales::hue_pal()(256),\n          colorspace::desaturate(scales::hue_pal()(256))))\n\nlist_plotter(pal_data$color, pal_data$names, \n             \"Standard color palette for ggplot2\")\n```\n\n::: {.cell-output-display}\n![Standard color palette for ggplot2](03-data-visualization_files/figure-html/fig-ggplot2-palette-bw-1.png){#fig-ggplot2-palette-bw width=672}\n:::\n:::\n\n***\n\nThe standard color palette of {**ggplot2**} is completely useless when you print it out in black & white! The problem is that the colors are picked to have constant chroma and luminance thus yielding the same shade of grey when desaturated.\n\n::::\n:::::\n\n\n\n\n###### A\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-viridis-magma-palette-bw}\n: {viridis} color palette \"magma\" (option 'A') in color and desaturated\n::::::\n:::\n::::{.my-r-code-container}\n\n\n::: {.cell}\n\n```{.r .cell-code}\npal_data <- list(names = c(\"Normal\", \"desaturated\"),\n     color = list(viridis::magma(256),\n     colorspace::desaturate(viridis::magma(256))))\n\nlist_plotter(pal_data$color, pal_data$names, \"viridis::magma\")\n```\n\n::: {.cell-output-display}\n![Viridis palette 'magma' (option 'A') in color and desaturated](03-data-visualization_files/figure-html/fig-viridis-magma-palette-bw-1.png){#fig-viridis-magma-palette-bw width=672}\n:::\n:::\n\n\n***\n\nOne of the continuous palettes that satisfy the criteria of readable gray shades are the palettes collected in the {**viridis**} resp. {**viridisLite**} packages. Here I have used the option \"A\" (\"magma\")\n::::\n:::::\n\n###### B\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-viridis-inferno-palette-bw}\n: {viridis} color palette \"inferno\" (option 'B') in color and desaturated\n::::::\n:::\n::::{.my-r-code-container}\n\n\n::: {.cell}\n\n```{.r .cell-code}\npal_data <- list(names = c(\"Normal\", \"desaturated\"),\n     color = list(viridis::inferno(256),\n     colorspace::desaturate(viridis::inferno(256))))\n\nlist_plotter(pal_data$color, pal_data$names, \"viridis::inferno\")\n```\n\n::: {.cell-output-display}\n![Viridis palette 'inferno' (option 'B') in color and desaturated](03-data-visualization_files/figure-html/fig-viridis-inferno-palette-bw-1.png){#fig-viridis-inferno-palette-bw width=672}\n:::\n:::\n\n\n***\n\nOne of the continuous palettes that satisfy the criteria of readable gray shades are the palettes collected in the {**viridis**} resp. {**viridisLite**} packages. Here I have used the option \"B\" (\"inferno\")\n::::\n:::::\n\n###### C\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-viridis-plasma-palette-bw}\n: {viridis} color palette \"plasma\" (option 'C') in color and desaturated\n::::::\n:::\n::::{.my-r-code-container}\n\n\n::: {.cell}\n\n```{.r .cell-code}\npal_data <- list(names = c(\"Normal\", \"desaturated\"),\n     color = list(viridis::plasma(256),\n     colorspace::desaturate(viridis::plasma(256))))\n\nlist_plotter(pal_data$color, pal_data$names, \"viridis::plasma\")\n```\n\n::: {.cell-output-display}\n![Viridis palette 'plasma' (option 'C') in color and desaturated](03-data-visualization_files/figure-html/fig-viridis-plasma-palette-bw-1.png){#fig-viridis-plasma-palette-bw width=672}\n:::\n:::\n\n\n***\n\nOne of the continuous palettes that satisfy the criteria of readable gray shades are the palettes collected in the {**viridis**} resp. {**viridisLite**} packages. Here I have used the option \"C\" (\"plasma\")\n::::\n:::::\n\n###### D\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-viridis-viridis-palette-bw}\n: {viridis} color palette \"viridis\" (option 'D') in color and desaturated\n::::::\n:::\n::::{.my-r-code-container}\n\n\n::: {.cell}\n\n```{.r .cell-code}\npal_data <- list(names = c(\"Normal\", \"desaturated\"),\n     color = list(viridis::viridis(256),\n     colorspace::desaturate(viridis::viridis(256))))\n\nlist_plotter(pal_data$color, pal_data$names, \"viridis::viridis\")\n```\n\n::: {.cell-output-display}\n![Viridis palette 'viridis' (option 'D') in color and desaturated](03-data-visualization_files/figure-html/fig-viridis-viridis-palette-bw-1.png){#fig-viridis-viridis-palette-bw width=672}\n:::\n:::\n\n\n***\n\nOne of the continuous palettes that satisfy the criteria of readable gray shades are the palettes collected in the {**viridis**} resp. {**viridisLite**} packages. Here I have used the option \"D\" (\"viridis\")\n::::\n:::::\n\n###### E\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-viridis-cividis-palette-bw}\n: {viridis} color palette \"cividis\" (option 'E') in color and desaturated\n::::::\n:::\n::::{.my-r-code-container}\n\n\n::: {.cell}\n\n```{.r .cell-code}\npal_data <- list(names = c(\"Normal\", \"desaturated\"),\n     color = list(viridis::cividis(256),\n     colorspace::desaturate(viridis::cividis(256))))\n\nlist_plotter(pal_data$color, pal_data$names, \"viridis::cividis\")\n```\n\n::: {.cell-output-display}\n![Viridis palette 'cividis' (option 'E') in color and desaturated](03-data-visualization_files/figure-html/fig-viridis-cividis-palette-bw-1.png){#fig-viridis-cividis-palette-bw width=672}\n:::\n:::\n\n\n***\n\nOne of the continuous palettes that satisfy the criteria of readable gray shades are the palettes collected in the {**viridis**} resp. {**viridisLite**} packages. Here I have used the option \"D\" (\"cividis\")\n::::\n:::::\n\n###### F\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-viridis-rocket-palette-bw}\n: {viridis} color palette \"rocket\" (option 'F') in color and desaturated\n::::::\n:::\n::::{.my-r-code-container}\n\n\n::: {.cell}\n\n```{.r .cell-code}\npal_data <- list(names = c(\"Normal\", \"desaturated\"),\n     color = list(viridis::rocket(256),\n     colorspace::desaturate(viridis::rocket(256))))\n\nlist_plotter(pal_data$color, pal_data$names, \"viridis::rocket\")\n```\n\n::: {.cell-output-display}\n![Viridis palette 'rocket' (option 'F') in color and desaturated](03-data-visualization_files/figure-html/fig-viridis-rocket-palette-bw-1.png){#fig-viridis-rocket-palette-bw width=672}\n:::\n:::\n\n\n***\n\nOne of the continuous palettes that satisfy the criteria of readable gray shades are the palettes collected in the {**viridis**} resp. {**viridisLite**} packages. Here I have used the option \"F\" (\"rocket\")\n::::\n:::::\n\n###### G\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-viridis-mako-palette-bw}\n: {viridis} color palette \"mako\" (option 'G') in color and desaturated\n::::::\n:::\n::::{.my-r-code-container}\n\n\n::: {.cell}\n\n```{.r .cell-code}\npal_data <- list(names = c(\"Normal\", \"desaturated\"),\n     color = list(viridis::mako(256),\n     colorspace::desaturate(viridis::mako(256))))\n\nlist_plotter(pal_data$color, pal_data$names, \"viridis::mako\")\n```\n\n::: {.cell-output-display}\n![Viridis palette 'mako' (option 'G') in color and desaturated](03-data-visualization_files/figure-html/fig-viridis-mako-palette-bw-1.png){#fig-viridis-mako-palette-bw width=672}\n:::\n:::\n\n\n***\n\nOne of the continuous palettes that satisfy the criteria of readable gray shades are the palettes collected in the {**viridis**} resp. {**viridisLite**} packages. Here I have used the option \"G\" (\"mako\")\n::::\n:::::\n\n###### H\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-viridis-turbo-palette-bw}\n: {viridis} color palette \"turbo\" (option 'H') in color and desaturated\n::::::\n:::\n::::{.my-r-code-container}\n\n\n::: {.cell}\n\n```{.r .cell-code}\npal_data <- list(names = c(\"Normal\", \"desaturated\"),\n     color = list(viridis::turbo(256),\n     colorspace::desaturate(viridis::turbo(256))))\n\nlist_plotter(pal_data$color, pal_data$names, \"viridis::turbo\")\n```\n\n::: {.cell-output-display}\n![Viridis palette 'turbo' (option 'H') in color and desaturated](03-data-visualization_files/figure-html/fig-viridis-turbo-palette-bw-1.png){#fig-viridis-turbo-palette-bw width=672}\n:::\n:::\n\n\n***\n\nOne of the continuous palettes that satisfy the criteria of readable gray shades are the palettes collected in the {**viridis**} resp. {**viridisLite**} packages. Here I have used the option \"H\" (\"turbo\")\n\n::::\n:::::\n\n:::::{.my-watch-out}\n:::{.my-watch-out-header}\nWATCH OUT! Begin and end of the \"viridis::turbo\" color scale are very similar in black & white\n:::\n::::{.my-watch-out-container}\n\nIn this chapter I preferred \"viridis::turbo\" because it is the most colorful palette of {**viridis**}. But it turned out that the begin and end of the color scale are not distinguishable in black & white. I had therefore to determine a different begin and/or end of the palette to prevent this similarity. \n::::\n:::::\n\n:::\n\n::::\n::::: \n\n\n\n\n###### Practice test\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-chap03-color-test-bw}\n: Test how the colors you used for your graph look for printing in black & write\n::::::\n:::\n::::{.my-r-code-container}\n\n\n::: {#lst-color-test-bw}\n\n\n::: {.cell}\n\n```{.r .cell-code}\npal_data <- list(names = c(\"Normal\", \"desaturated\"),\n    color = list(scales::viridis_pal(\n                                alpha = 1, \n                                begin = .15, \n                                 end = .35, \n                                direction = -1, \n                                option = \"turbo\")(2),\n    colorspace::desaturate(scales::viridis_pal(\n                                alpha = 1, \n                                begin = .15, \n                                end = .35, \n                                direction = -1, \n                                option = \"turbo\")(2)))\n    )\nlist_plotter(pal_data$color, pal_data$names, \n    \"Colors and black & white of graph gun-use by sex\")\n```\n\n::: {.cell-output-display}\n![Test if used colors of my graph gun-use by sex are also readable for black & white printing](03-data-visualization_files/figure-html/fig-color-test-bw-1.png){#fig-color-test-bw width=672}\n:::\n:::\n\n\nTest how the colors you used for your graph look for printing in black & write\n:::\n\n\n::::\n:::::\n\n**Summary and my personal preferences**\n\nRead more details about {**viridis**} scales in the vignette [Introduction to the {**viridis**} color maps](https://cran.r-project.org/web/packages/viridis/vignettes/intro-to-viridis.html). These palettes are not only colorful and pretty but also perceptually uniform and robust to color blindness (<a class='glossary' title='Color vision deficiency (CVD) or color blindness (also spelled colour blindness) includes a wide range of causes and conditions and is actually quite complex. It’s a condition characterized by an inability or difficulty in perceiving and differentiating certain colors due to abnormalities in the three color-sensing pigments of the cones in the retina. (EnChroma)'>CVD</a>). \n\n- The default scale is \"D\" (`viridis`) which is easier to read for most of the CVDs. `cividis` is a corrected version providing easiness for all kinds of CVDs.\n- `turbo` stands out, because it is a rainbow scale developed to address the shortcomings of the Jet rainbow color map. It is not perceptually uniform.\n- I do not like yellow (mostly at the end of the color scale and therefore always used, even with binary factors). But one can prevent the appearance with a different choice of the end point of the scale.\n- If you do not use all colors you can exactly provide all parameters of your scale & color choice to `colorspace::desaturate()`. For instance: `colorspace::desaturate(viridis::turbo(5, 0.5, .25, .75, -1))` See for a practice test @lst-color-test-bw.\n\n:::::{.my-resource}\n:::{.my-resource-header}\nOther colorblind friendly palettes\n:::\n::::{.my-resource-container}\n\n- {**scico**} is another package that contains 39 colorblind friendly palettes (see: @pak-scico).\n- `scale_color_OkabeIto` and `scale_fill_OkabeIto` from {**blindnessr**} works also better for people with color-vision deficiency (<a class='glossary' title='Color vision deficiency (CVD) or color blindness (also spelled colour blindness) includes a wide range of causes and conditions and is actually quite complex. It’s a condition characterized by an inability or difficulty in perceiving and differentiating certain colors due to abnormalities in the three color-sensing pigments of the cones in the retina. (EnChroma)'>CVD</a>).\n::::\n:::::\n\n\n:::::{.my-resource}\n:::{.my-resource-header}\nOther colorblind friendly palettes\n\n:::\n:::::\n\n\n***\n\n#### Color blindness\n\n350 million people are color blind. Men are affected more than women: 28% (1 out of 12) men and 0.5% (1 out of 200) women. ([EnChroma](https://enchroma.com/pages/facts-about-color-blindness))\n\nUsually when people talk about <a class='glossary' title='Color blindness (also spelled colour blindness) or color vision deficiency (CVD) or  includes a wide range of causes and conditions and is actually quite complex. It’s a condition characterized by an inability or difficulty in perceiving and differentiating certain colors due to abnormalities in the three color-sensing pigments of the cones in the retina. (EnChroma)'>color blindness</a>, they are referring to the most common forms of red-green color blindness. But there are also other color vision deficiency (CVD):\n\n- **Deuteranomaly**: About 6% of men are red-blind, and so they have trouble distinguishing red from green.\n- **Protanomaly**: About 2% of men are green-blind, and they also have trouble distinguishing red from green.\n- **Tritanomaly** : Less than 1% of men are blue-blind, and they have trouble distinguishing blue from yellow. ([Polychrome: Color deficits](https://cran.r-project.org/web/packages/Polychrome/vignettes/color-deficits.html))\n\n\n***\n\n::: {#bul-types-of-cvd}\n- **Deutan = Red-Green Color Blind: Color Cone Sensitivity: Green**: Deuteranomaly is the most common type of color blindness, affecting about 6% of men. It is characterized by a reduced sensitivity to green light, making it difficult to differentiate between shades of red and green.\n- **Protan = Red-Green Color Blind: Color Cone Sensitivity: Red**: Protan (“pro-tan”) is the second most common and is characterized by a reduced sensitivity to red light. People with protanomaly have difficulty distinguishing between shades of red and green.\n- **Tritan = Blue-Yellow Color Blind: Color Cone Sensitivity: Blue**: Tritanomaly is a rare type of color blindness that affects both males and females equally. It is characterized by a reduced sensitivity to blue light, making it difficult to differentiate between shades of blue and green, as well as yellow and red.\n- **Monochromacy and Achromatopsia** describes a range of conditions that include rod-Monochromacy, S-cone Monochromacy and Achromatopsia Sometimes these are collectively referred to as types of achromatopsia, as the word “achromat” meaning “no color.” However, not all cases of achromatopsia have “no color” vision.\n\nTypes of color vision deficiency (CVD)\n\n:::\n\n***\n\nThere are different possibilities to determine the effect of color blindness on the used palettes or used graph colors.\n\n\n##### Test with {**dichromat**}\n\nThe {**dichromat**} package can simulate color blindness on individual colors or entire palettes.\n\n\n:::::{.my-experiment}\n:::{.my-experiment-header}\n:::::: {#def-ID-text}\n: Effects of color blindness on different palettes using {**dichromat**}\n::::::\n:::\n::::{.my-experiment-container}\n\n::: {.panel-tabset}\n\n###### ggplot2\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-code-name}\n: Standard color palette for {ggplot2} in color and desaturated\n::::::\n:::\n::::{.my-r-code-container}\n\n\n::: {.cell}\n\n```{.r .cell-code}\npal_data <- list(names = c(\"Normal\", \"deuteranopia\", \"protanopia\", \"tritanopia\"),\n                 color = list(scales::hue_pal()(256),\n                              dichromat::dichromat(scales::hue_pal()(256), type = \"deutan\"),\n                              dichromat::dichromat(scales::hue_pal()(256), type = \"protan\"),\n                              dichromat::dichromat(scales::hue_pal()(256), type = \"tritan\")))\n\nlist_plotter(pal_data$color, pal_data$names, \"The effect of color blindness on the ggplot2 standard palette\")\n```\n\n::: {.cell-output-display}\n![Effects of color blindness of standard color palette of ggplot2](03-data-visualization_files/figure-html/fig-ggplot2-palette-cvd-1.png){#fig-ggplot2-palette-cvd width=672}\n:::\n:::\n\n\n::::\n:::::\n\n\n\n\n###### A\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-code-name-b}\n: {viridis} color palette \"magma\" (option 'A') in color and desaturated\n::::::\n:::\n::::{.my-r-code-container}\n\n\n::: {.cell}\n\n```{.r .cell-code}\npal_data <- list(names = c(\"Normal\", \"deuteranopia\", \"protanopia\", \"tritanopia\"),\n         color = list(viridis::magma(256),\n              dichromat::dichromat(viridis::magma(256), type = \"deutan\"),\n              dichromat::dichromat(viridis::magma(256), type = \"protan\"),\n              dichromat::dichromat(viridis::magma(256), type = \"tritan\")))\n\nlist_plotter(pal_data$color, pal_data$names, \n             \"Color blindness effects on the viridis 'magma' palette\")\n```\n\n::: {.cell-output-display}\n![Effects of color blindness of {viridis} palette 'magma' (option 'A')](03-data-visualization_files/figure-html/fig-magma-palette-cvd-1.png){#fig-magma-palette-cvd width=672}\n:::\n:::\n\n\n\n::::\n:::::\n\n###### B\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-code-name-b}\n: {viridis} color palette \"inferno\" (option 'B') in color and desaturated\n::::::\n:::\n::::{.my-r-code-container}\n\n\n::: {.cell}\n\n```{.r .cell-code}\npal_data <- list(names = c(\"Normal\", \"deuteranopia\", \"protanopia\", \"tritanopia\"),\n         color = list(viridis::inferno(256),\n              dichromat::dichromat(viridis::inferno(256), type = \"deutan\"),\n              dichromat::dichromat(viridis::inferno(256), type = \"protan\"),\n              dichromat::dichromat(viridis::inferno(256), type = \"tritan\")))\n\nlist_plotter(pal_data$color, pal_data$names, \n             \"Color blindness effects on the viridis 'inferno' palette\")\n```\n\n::: {.cell-output-display}\n![Effects of color blindness of {viridis} palette 'inferno' (option 'B')](03-data-visualization_files/figure-html/fig-inferno-palette-cvd-1.png){#fig-inferno-palette-cvd width=672}\n:::\n:::\n\n\n\n::::\n:::::\n\n###### C\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-code-name-b}\n: {viridis} color palette \"plasma\" (option 'C') in color and desaturated\n::::::\n:::\n::::{.my-r-code-container}\n\n\n::: {.cell}\n\n```{.r .cell-code}\npal_data <- list(names = c(\"Normal\", \"deuteranopia\", \"protanopia\", \"tritanopia\"),\n         color = list(viridis::plasma(256),\n              dichromat::dichromat(viridis::plasma(256), type = \"deutan\"),\n              dichromat::dichromat(viridis::plasma(256), type = \"protan\"),\n              dichromat::dichromat(viridis::plasma(256), type = \"tritan\")))\n\nlist_plotter(pal_data$color, pal_data$names, \n             \"Color blindness effects on the viridis 'plasma' palette\")\n```\n\n::: {.cell-output-display}\n![Effects of color blindness of {viridis} palette 'plasma' (option 'C')](03-data-visualization_files/figure-html/fig-plasma-palette-cvd-1.png){#fig-plasma-palette-cvd width=672}\n:::\n:::\n\n\n***\n\nOne of the continuous palettes that satisfy the criteria of readable gray shades are the palettes collected in the {**viridis**} resp. {**viridisLite**} packages. Here I have used the option \"C\" (\"plasma\")\n::::\n:::::\n\n###### D\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-code-name-b}\n: {viridis} color palette \"viridis\" (option 'D') in color and desaturated\n::::::\n:::\n::::{.my-r-code-container}\n\n\n::: {.cell}\n\n```{.r .cell-code}\npal_data <- list(names = c(\"Normal\", \"deuteranopia\", \"protanopia\", \"tritanopia\"),\n         color = list(viridis::viridis(256),\n              dichromat::dichromat(viridis::viridis(256), type = \"deutan\"),\n              dichromat::dichromat(viridis::viridis(256), type = \"protan\"),\n              dichromat::dichromat(viridis::viridis(256), type = \"tritan\")))\n\nlist_plotter(pal_data$color, pal_data$names, \n             \"Color blindness effects on the viridis 'viridis' palette\")\n```\n\n::: {.cell-output-display}\n![Effects of color blindness of {viridis} palette 'viridis' (option 'D')](03-data-visualization_files/figure-html/fig-viridis-palette-cvd-1.png){#fig-viridis-palette-cvd width=672}\n:::\n:::\n\n\n***\n\nOne of the continuous palettes that satisfy the criteria of readable gray shades are the palettes collected in the {**viridis**} resp. {**viridisLite**} packages. Here I have used the option \"D\" (\"viridis\")\n::::\n:::::\n\n###### E\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-code-name-b}\n: {viridis} color palette \"cividis\" (option 'E') in color and desaturated\n::::::\n:::\n::::{.my-r-code-container}\n\n\n::: {.cell}\n\n```{.r .cell-code}\npal_data <- list(names = c(\"Normal\", \"deuteranopia\", \"protanopia\", \"tritanopia\"),\n         color = list(viridis::cividis(256),\n              dichromat::dichromat(viridis::cividis(256), type = \"deutan\"),\n              dichromat::dichromat(viridis::cividis(256), type = \"protan\"),\n              dichromat::dichromat(viridis::cividis(256), type = \"tritan\")))\n\nlist_plotter(pal_data$color, pal_data$names, \n             \"Color blindness effects on the viridis 'cividis' palette\")\n```\n\n::: {.cell-output-display}\n![Effects of color blindness of {cividis} palette 'cividis' (option 'E')](03-data-visualization_files/figure-html/fig-cividis-palette-cvd-1.png){#fig-cividis-palette-cvd width=672}\n:::\n:::\n\n\n\n::::\n:::::\n\n###### F\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-code-name-b}\n: {viridis} color palette \"rocket\" (option 'F') in color and desaturated\n::::::\n:::\n::::{.my-r-code-container}\n\n\n::: {.cell}\n\n```{.r .cell-code}\npal_data <- list(names = c(\"Normal\", \"deuteranopia\", \"protanopia\", \"tritanopia\"),\n         color = list(viridis::rocket(256),\n              dichromat::dichromat(viridis::rocket(256), type = \"deutan\"),\n              dichromat::dichromat(viridis::rocket(256), type = \"protan\"),\n              dichromat::dichromat(viridis::rocket(256), type = \"tritan\")))\n\nlist_plotter(pal_data$color, pal_data$names, \n             \"Color blindness effects on the viridis 'rocket' palette\")\n```\n\n::: {.cell-output-display}\n![Effects of color blindness of {viridis} palette 'rocket' (option 'F')](03-data-visualization_files/figure-html/fig-rocket-palette-cvd-1.png){#fig-rocket-palette-cvd width=672}\n:::\n:::\n\n\n\n::::\n:::::\n\n###### G\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-code-name-b}\n: {viridis} color palette \"mako\" (option 'G') in color and desaturated\n::::::\n:::\n::::{.my-r-code-container}\n\n\n::: {.cell}\n\n```{.r .cell-code}\npal_data <- list(names = c(\"Normal\", \"deuteranopia\", \"protanopia\", \"tritanopia\"),\n         color = list(viridis::mako(256),\n              dichromat::dichromat(viridis::mako(256), type = \"deutan\"),\n              dichromat::dichromat(viridis::mako(256), type = \"protan\"),\n              dichromat::dichromat(viridis::mako(256), type = \"tritan\")))\n\nlist_plotter(pal_data$color, pal_data$names, \n             \"Color blindness effects on the viridis 'mako' palette\")\n```\n\n::: {.cell-output-display}\n![Effects of color blindness of {viridis} palette 'mako' (option 'G')](03-data-visualization_files/figure-html/fig-mako-palette-cvd-1.png){#fig-mako-palette-cvd width=672}\n:::\n:::\n\n\n***\n\nOne of the continuous palettes that satisfy the criteria of readable gray shades are the palettes collected in the {**viridis**} resp. {**viridisLite**} packages. Here I have used the option \"G\" (\"mako\")\n::::\n:::::\n\n###### H\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-code-name-b}\n: {viridis} color palette \"turbo\" (option 'H') in color and desaturated\n::::::\n:::\n::::{.my-r-code-container}\n\n\n::: {.cell}\n\n```{.r .cell-code}\npal_data <- list(names = c(\"Normal\", \"deuteranopia\", \"protanopia\", \"tritanopia\"),\n         color = list(viridis::turbo(256),\n              dichromat::dichromat(viridis::turbo(256), type = \"deutan\"),\n              dichromat::dichromat(viridis::turbo(256), type = \"protan\"),\n              dichromat::dichromat(viridis::turbo(256), type = \"tritan\")))\n\nlist_plotter(pal_data$color, pal_data$names, \n             \"Color blindness effects on the viridis 'turbo' palette\")\n```\n\n::: {.cell-output-display}\n![Effects of color blindness of {viridis} palette 'turbo' (option 'H')](03-data-visualization_files/figure-html/fig-turbo-palette-cvd-1.png){#fig-turbo-palette-cvd width=672}\n:::\n:::\n\n\n\n\n\n::::\n:::::\n\n###### Test 1\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-chap03-gun-use-test-cvd}\n: Color blindness test of my chosen colors for the graph of gun-use by sex\n::::::\n:::\n::::{.my-r-code-container}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmy_colors = scales::viridis_pal(\n                                alpha = 1, \n                                begin = .15, \n                                 end = .35, \n                                direction = -1, \n                                option = \"turbo\")(2)\n\npal_data <- list(names = c(\"Normal\", \"deuteranopia\", \"protanopia\", \"tritanopia\"),\n          color = list(my_colors,\n          dichromat::dichromat(my_colors, type = \"deutan\"),\n          dichromat::dichromat(my_colors, type = \"protan\"),\n          dichromat::dichromat(my_colors, type = \"tritan\")))\n\nlist_plotter(pal_data$color, pal_data$names, \n             \"Color blindness effects on my chosen colors for gun use by sex\")\n```\n\n::: {.cell-output-display}\n![Color blindness (CVD) replication of gun-use by sex](03-data-visualization_files/figure-html/fig-gun-use-test-cvd-1.png){#fig-gun-use-test-cvd width=672}\n:::\n:::\n\n\n::::\n:::::\n\n###### Test 2\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-chap03-rounds-fired-sex-test-cvd}\n: Color blindness test of my chosen colors for the graph rounds fired by sex\n::::::\n:::\n::::{.my-r-code-container}\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmy_colors = scales::viridis_pal(\n                                alpha = 1, \n                                begin = .25, \n                                 end = .75, \n                                direction = -1, \n                                option = \"cividis\")(5)\n\npal_data <- list(names = c(\"Normal\", \"deuteranopia\", \"protanopia\", \"tritanopia\"),\n          color = list(my_colors,\n          dichromat::dichromat(my_colors, type = \"deutan\"),\n          dichromat::dichromat(my_colors, type = \"protan\"),\n          dichromat::dichromat(my_colors, type = \"tritan\")))\n\nlist_plotter(pal_data$color, pal_data$names, \n             \"Color blindness effects for my graph: rounds fired by sex\")\n```\n\n::: {.cell-output-display}\n![Color blindness (CVD) test of my graph: rounds fired by sex](03-data-visualization_files/figure-html/fig-rounds-fired-sex-test-cvd-1.png){#fig-rounds-fired-sex-test-cvd width=672}\n:::\n:::\n\n\n\n\n::::\n:::::\n\n###### Test 3\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-chap03-rounds-fired-sex-test-cvd}\n: Color blindness test of my chosen colors for the waffle graph: rounds fired \n::::::\n:::\n::::{.my-r-code-container}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmy_colors <- c(\"lightblue1\", \"lightsteelblue1\", \n                          \"deepskyblue1\", \"dodgerblue3\", \"black\",\n               \"gold1\", \"lemonchiffon1\")\n\n\npal_data <- list(names = c(\"Normal\", \"deuteranopia\", \"protanopia\", \"tritanopia\"),\n          color = list(my_colors,\n          dichromat::dichromat(my_colors, type = \"deutan\"),\n          dichromat::dichromat(my_colors, type = \"protan\"),\n          dichromat::dichromat(my_colors, type = \"tritan\")))\n\nlist_plotter(pal_data$color, pal_data$names, \n             \"Color blindness effects for my waffle graph: rounds fired 2018\")\n```\n\n::: {.cell-output-display}\n![Color blindness (CVD) test of my waffle graph: rounds fired 2018](03-data-visualization_files/figure-html/fig-wafffle-rounds-fired-test-cvd-1.png){#fig-wafffle-rounds-fired-test-cvd width=672}\n:::\n:::\n\n\n\n::::\n:::::\n\n###### Test 4\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-chap03-rounds-fired-sex-test-cvd}\n: Color blindness test of my chosen colors for the waffle graph: rounds fired 2018 with `cividis` color scale\n::::::\n:::\n::::{.my-r-code-container}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmy_colors <- scales::viridis_pal(\n                                alpha = 1,\n                                begin = .25,\n                                 end = .75,\n                                direction = -1,\n                                option = \"cividis\")(7)\n\n\npal_data <- list(names = c(\"Normal\", \"deuteranopia\", \"protanopia\", \"tritanopia\"),\n          color = list(my_colors,\n          dichromat::dichromat(my_colors, type = \"deutan\"),\n          dichromat::dichromat(my_colors, type = \"protan\"),\n          dichromat::dichromat(my_colors, type = \"tritan\")))\n\nlist_plotter(pal_data$color, pal_data$names, \n             \"Color blindness effects for my waffle graph: rounds fired with cividis color scale\")\n```\n\n::: {.cell-output-display}\n![Color blindness (CVD) test of my waffle graph: rounds fired with cividis color scale](03-data-visualization_files/figure-html/fig-wafffle-rounds-fired-cividis-cvd-1.png){#fig-wafffle-rounds-fired-cividis-cvd width=672}\n:::\n:::\n\n\n\n\n::::\n:::::\n\n:::\n\n::::\n:::::\n\nWith the exception of the turbo palette form the {**viridis**} package show all palettes a color blindness friendly performance. Again this experiments shows that one should not rely on the standard {**ggplot2**} palette if one would design for <a class='glossary' title='Color vision deficiency (CVD) or color blindness (also spelled colour blindness) includes a wide range of causes and conditions and is actually quite complex. It’s a condition characterized by an inability or difficulty in perceiving and differentiating certain colors due to abnormalities in the three color-sensing pigments of the cones in the retina. (EnChroma)'>CVD</a>.\n\nBut be aware that it worked for my test cases with only 2, 5 and 7 colors. I think one should always test if the used colors are also readable with black and white printing and for people with CVD.\n\n\n##### Test with {**colorblindr**}\n\nAnother helpful package to produce colorblind friendly plots is {**colorblindr**}. This package is only [available at GitHub](https://github.com/clauswilke/colorblindr). It depends on the development versions of {**cowplot**} and {**colorspace**}.\n\nIt simulates the plot colors for all kinds of CVD with three different methods:\n\n- `colorblindr::cvd_grid(<gg-object>)`: Displays the various color-vision-deficiency simulations as a plot in R.\n- `colorblindr::view_cvd(<gg-object>)`: Inspect the graph in the interactive app. Use this function only interactively (not programmatically!)\n- Go to the [interactive simulator](http://hclwizard.org:3000/cvdemulator/) and upload the image you want to test.\n\nYou get 5 different plots to compare:\n\n- Original\n- Desaturated\n- Deuteranope\n- Protanope\n- Tritanope\n\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-use-colorblindr}\n: Demo of the usage of {**colorblindr**}\n::::::\n:::\n::::{.my-r-code-container}\n\n::: {.cell}\n\n```{.r .cell-code}\ncolorblindr::cvd_grid(waffle_plot)\n```\n\n::: {.cell-output-display}\n![Demonstration of the `colorblindr::cvd_grid()` function](03-data-visualization_files/figure-html/fig-use-colorblindr-1.png){#fig-use-colorblindr width=672}\n:::\n:::\n\nI have used the plot for the proportion of total rounds fired (NHANES survey 2017-2018). Compare the  simulation with the original in @fig-waffle-chart-rounds-fired2,\n::::\n:::::\n\n##### Test with {**colorblindcheck**} {#sec-chap03-test-with-colorblindcheck}\n\nBoth methods to check for colorblind friendly plots discussed so far (@pak-dichromat and @pak-colorblindr) have the disadvantage that one has to determine the colors by the subjective impression of the personal visual inspection. {**colorblindcheck**} provides in addition to the visual inspection some objective data: It calculates the distances between the colors in the input palette and between the colors in simulations of the color vision deficiencies.\n\nIn the following experiment I am going to investigate my hand-picked colors for the waffle graph in @fig-waffle-chart-rounds-fired2.  I picked these colors because the appeared to me distant enough to make an understandable and pleasant graph.\n\n:::::{.my-experiment}\n:::{.my-experiment-header}\n:::::: {#def-chap03-apply-colorblindcheck}\n: Experiments with the {colorblindcheck} package\n::::::\n:::\n::::{.my-experiment-container}\n\n::: {.panel-tabset}\n\n###### col2hex\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-chap03-colornames-to-hexcode}\n: Convert colors by name into hexadecimal code\n::::::\n:::\n::::{.my-r-code-container}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwaffle_colors <-  gplots::col2hex(c(\"lightblue1\", \"lightsteelblue1\", \n                  \"deepskyblue1\", \"dodgerblue3\",  \n                  \"black\", \"gold1\", \"lemonchiffon1\"))\n\n\nwaffle_colors\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> [1] \"#BFEFFF\" \"#CAE1FF\" \"#00BFFF\" \"#1874CD\" \"#000000\" \"#FFD700\" \"#FFFACD\"\n```\n\n\n:::\n:::\n\n\n\nI had chosen my colors by name. So the first task to apply the function of the {**colorblindcheck**} package is to translate them into hex code. For this conversion I have used the `col2hex()` function of the {**gplots**} package (see @pak-gplots)\n::::\n:::::\n\n###### df\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-chap03-waffle-color-distance}\n: List different parameters for color distance values to check for colorblind friendliness\n::::::\n:::\n::::{.my-r-code-container}\n\n\n::: {#tbl-waffle-color-distances .cell tbl-cap='List different parameters for color distince values to check for colorblind friendliness'}\n\n```{.r .cell-code}\ncolorblindcheck::palette_check(waffle_colors)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#>           name n tolerance ncp ndcp  min_dist mean_dist max_dist\n#> 1       normal 7  10.54291  21   21 10.542912  47.97701 98.42826\n#> 2 deuteranopia 7  10.54291  21   20  2.795989  47.79041 98.41086\n#> 3   protanopia 7  10.54291  21   20  4.073523  46.14816 97.30477\n#> 4   tritanopia 7  10.54291  21   20  6.730892  41.78801 96.26958\n```\n\n\n:::\n:::\n\n***\n\nThe `colorblindcheck::palette_check()` function returns a data.frame with 4 observations and 8 variables:\n\n- **name**: original input color palette (normal), deuteranopia, protanopia, and tritanopia\n- **n**: number of colors\n- **tolerance**: minimal value of the acceptable difference between the colors to distinguish between them. Here I have used the the default,  e.g., the minimal distance between colors in the original input palette. But I think there should be another \"normed\" values as yard stick to check the color friendliness (maybe about 10-12, depending of the number of colors?)\n- **ncp**: number of color pairs\n- **ndcp**: number of differentiable color pairs (color pairs with distances above the tolerance value)\n- **min_dist**: minimal distance between colors\n- **mean_dist**: average distance between colors\n- **max_dist**: maximal distance between colors\n\nThe table shows in the normal color view that the minimal distance between colors is about 10.5. But in all three CVDs palettes only 20 from the 21 pairs are above this distance. So there is one color pair where people with <a class='glossary' title='Color vision deficiency (CVD) or color blindness (also spelled colour blindness) includes a wide range of causes and conditions and is actually quite complex. It’s a condition characterized by an inability or difficulty in perceiving and differentiating certain colors due to abnormalities in the three color-sensing pigments of the cones in the retina. (EnChroma)'>CVD</a> can't distinguish. \n\nLet's go into the details. At first we will inspect the color palettes visually and then we will investigate the distances between all pairs for all palettes of CVDs.\n\n\n::::\n:::::\n\n###### plot\n\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-chap03-waffle-colors-plot}\n: Plot waffle colors palette normal and for different CVDs\n::::::\n:::\n::::{.my-r-code-container}\n\n::: {.cell}\n\n```{.r .cell-code}\ncolorblindcheck::palette_plot(waffle_colors, severity = 1)\n```\n\n::: {.cell-output-display}\n![Waffle colors palette normal and for different CVDs with highest severities](03-data-visualization_files/figure-html/fig-waffle-colors-plot-1.png){#fig-waffle-colors-plot width=672}\n:::\n:::\n\n***\n\nFrom the visual inspections it seems that there is a problem with the color pair 1 / 2.\n::::\n:::::\n\n###### normal\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-chap03-waffle-colors-normal}\n: Color pair distances for the normal colors\n::::::\n:::\n::::{.my-r-code-container}\n\n::: {#tbl-waffle-colors-normal .cell tbl-cap='Color pair distances for the normal color palette without CVD'}\n\n```{.r .cell-code}\ncolorblindcheck::palette_dist(waffle_colors)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#>      [,1]     [,2]     [,3]     [,4]     [,5]     [,6]     [,7]\n#> [1,]   NA 10.54291 18.10731 37.10142 89.17120 41.73917 26.00648\n#> [2,]   NA       NA 19.28529 33.38842 84.16342 48.19716 31.10567\n#> [3,]   NA       NA       NA 25.22187 64.86977 60.28084 44.44362\n#> [4,]   NA       NA       NA       NA 42.63815 67.09988 59.51180\n#> [5,]   NA       NA       NA       NA       NA 85.64217 98.42826\n#> [6,]   NA       NA       NA       NA       NA       NA 20.57238\n#> [7,]   NA       NA       NA       NA       NA       NA       NA\n```\n\n\n:::\n:::\n\n***\n\nThe smallest distance in the normal color palette is about 10.5 between 1 and 2. But this is a very good distance, all the other colors perform even better with higher values of 18. \n::::\n:::::\n\n\n\n###### deu\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-chap03-waffle-colors-deu}\n: Color pair distances for the deuteranopia CVD\n::::::\n:::\n::::{.my-r-code-container}\n\n::: {#tbl-waffle-colors-deu .cell tbl-cap='Color pair distances for the deuteranopia CVD'}\n\n```{.r .cell-code}\ncolorblindcheck::palette_dist(waffle_colors, cvd = \"deu\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#>      [,1]     [,2]     [,3]     [,4]     [,5]     [,6]     [,7]\n#> [1,]   NA 2.795989 19.67791 38.31696 87.00229 42.72322 28.91615\n#> [2,]   NA       NA 17.19632 36.15745 82.97331 45.39762 31.72386\n#> [3,]   NA       NA       NA 21.43223 61.57162 60.53591 47.99180\n#> [4,]   NA       NA       NA       NA 41.37258 70.95919 60.97332\n#> [5,]   NA       NA       NA       NA       NA 87.88964 98.41086\n#> [6,]   NA       NA       NA       NA       NA       NA 19.58039\n#> [7,]   NA       NA       NA       NA       NA       NA       NA\n```\n\n\n:::\n:::\n\n***\n\nHere we can see clearly that the distance between 1 and 2 is only 2.8!. All the other colors perform excellent with higher values of 17.\n::::\n:::::\n\n###### pro\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-chap03-waffle-colors-pro}\n: Color pair distances for the protanopia CVD\n::::::\n:::\n::::{.my-r-code-container}\n\n::: {#tbl-waffle-colors-pro .cell tbl-cap='Color pair distances for the protanopia CVD'}\n\n```{.r .cell-code}\ncolorblindcheck::palette_dist(waffle_colors, cvd = \"pro\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#>      [,1]     [,2]     [,3]     [,4]     [,5]     [,6]     [,7]\n#> [1,]   NA 4.073523 16.80032 35.11481 91.09592 39.70098 26.01640\n#> [2,]   NA       NA 12.95911 31.90976 85.83276 43.51167 30.38048\n#> [3,]   NA       NA       NA 20.91352 68.81192 54.71840 43.20273\n#> [4,]   NA       NA       NA       NA 44.94125 65.17437 54.56921\n#> [5,]   NA       NA       NA       NA       NA 82.19301 97.30477\n#> [6,]   NA       NA       NA       NA       NA       NA 19.88647\n#> [7,]   NA       NA       NA       NA       NA       NA       NA\n```\n\n\n:::\n:::\n\n\n***\n\nAgain: The problem is the color pair 1 and 2 with a slightly better difference of 4 in comparison with the deuteranopia palette of 2.8.\n\n::::\n:::::\n\n###### tri\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-chap03-waffle-colors-tri}\n: Color pair distances for the tritanopia CVD\n::::::\n:::\n::::{.my-r-code-container}\n\n::: {#tbl-waffle-colors-tri .cell tbl-cap='Color pair distances for the tritanopia CVD'}\n\n```{.r .cell-code}\ncolorblindcheck::palette_dist(waffle_colors, cvd = \"tri\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#>      [,1]     [,2]     [,3]     [,4]     [,5]     [,6]     [,7]\n#> [1,]   NA 6.730892 13.01156 30.72849 90.39176 38.96913 24.90487\n#> [2,]   NA       NA 15.41221 29.64808 84.57220 34.48380 20.06730\n#> [3,]   NA       NA       NA 21.02786 69.32457 43.19480 31.56913\n#> [4,]   NA       NA       NA       NA 43.74885 46.44875 42.21174\n#> [5,]   NA       NA       NA       NA       NA 78.32859 96.26958\n#> [6,]   NA       NA       NA       NA       NA       NA 16.50397\n#> [7,]   NA       NA       NA       NA       NA       NA       NA\n```\n\n\n:::\n:::\n\n\n***\n\nHere again the problem lies smallest distance of the first two color. But 6.7 is not so bad for distinctions. Therefore it is always necessary to see the actual value and not only to stick with the first table in @tbl-waffle-color-distances.\n\nIt is interesting to notice that my thought from the visual inspection that the pair 1 /3 is also problematic is unsubstantiated.\n\n::::\n:::::\n\n###### cividis\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-chap03-waffle-color-distance-cividis}\n: Color distances with the CVD friendly {**cividis**} palette\n::::::\n:::\n::::{.my-r-code-container}\n\n::: {.cell}\n\n```{.r .cell-code}\nwaffle_colors2 = scales::viridis_pal(alpha = 1,\n                                    direction = -1,\n                                    option = \"cividis\")(7)\n\ncolorblindcheck::palette_check(waffle_colors2, plot = TRUE)\n```\n\n::: {.cell-output-display}\n![Color distances with the CVD friendly {**cividis**} palette](03-data-visualization_files/figure-html/waffle-color-distance-cividis-1.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#>           name n tolerance ncp ndcp min_dist mean_dist max_dist\n#> 1       normal 7  9.474139  21   21 9.474139  40.15113 94.45609\n#> 2 deuteranopia 7  9.474139  21   20 9.187656  40.67049 95.77164\n#> 3   protanopia 7  9.474139  21   20 9.309515  39.02739 90.60717\n#> 4   tritanopia 7  9.474139  21   20 8.932613  34.28656 78.10328\n```\n\n\n:::\n:::\n\n***\n\nFrom the table we can see that all three CVDs palette have a smaller tolerance as the normal color palette. But we also see that the differences are minimal. The worst case (tritanopia) is only .05 belwo and has still a distance of almost 9.\n\n\n::::\n:::::\n\n:::\n\n::::\n:::::\n\n\n:::::{.my-important}\n:::{.my-important-header}\nUse colorblind friendly palettes\n:::\n::::{.my-important-container}\nI have tried very hard to choose colorblind friendly manually. But I didn't succeed. \n\n**Lessons learned**: Do not rely on your subjective visual impressions but use the professionally designed palettes that improve readability for all kinds of color vision deficiencies. \n::::\n:::::\n\n\n\n***\n\n\n\n### Adding palettes\n\nI have learned to add palettes with different approaches. The following experiments list all the options I became aware in the last few days.\n\n:::::{.my-experiment}\n:::{.my-experiment-header}\n:::::: {#def-chap03-add-palettes}\n: How to add palettes to {**ggplot2**} graphics\n::::::\n:::\n::::{.my-experiment-container}\n\n::: {.panel-tabset}\n\n###### Creating the `gg` object\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-chap03-providing-gg-object}\n: Creating the `gg` object for adding the palette\n::::::\n:::\n::::{.my-r-code-container}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggmosaic)\nlibrary(ggplot2)\n\nnhanes_2012_clean <- base::readRDS(\"data/chap03/nhanes_2012_clean.rds\")\n\n(\n    gg <- nhanes_2012_clean |> \n        dplyr::mutate(rounds_fired =\n              dplyr::na_if(rounds_fired, \"Don't know\")) |> \n        tidyr::drop_na(c(rounds_fired, sex)) |> \n        dplyr::mutate(rounds_fired =\n              forcats::fct_drop(rounds_fired)) |> \n        ggplot2::ggplot() + \n        ggmosaic::geom_mosaic(ggplot2::aes(\n            x = ggmosaic::product(rounds_fired, sex), \n            fill = rounds_fired)\n            ) +\n        ggplot2::theme_classic() +\n        ggplot2::labs(x = \"Sex\",\n                      y = \"Total number of rounds fired\",\n                      fill = \"Rounds fired\") +\n        ggplot2::guides(fill = ggplot2::guide_legend(reverse = TRUE))\n)\n```\n\n::: {.cell-output-display}\n![This is the graph with the standard {**ggplot2**} palette.](03-data-visualization_files/figure-html/fig-providing-gg-object-1.png){#fig-providing-gg-object width=672}\n:::\n:::\n\n\n\n::::\n:::::\n\n\n###### 1\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-add-palette-1}\n: OPTION 1: Viridis color palette from {viridisLite} using {ggplot2}\n::::::\n:::\n::::{.my-r-code-container}\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngg +\n    ggplot2::scale_fill_viridis_d(\n        alpha = 1,  # alpha does not work!\n        begin = .25,\n         end = .75,\n        direction = -1,\n        option = \"cividis\"\n    )\n```\n\n::: {.cell-output-display}\n![Viridis color palette from {viridisLite} using {ggplot2}](03-data-visualization_files/figure-html/fig-add-palette-1-1.png){#fig-add-palette-1 width=672}\n:::\n:::\n\n\n::::\n:::::\n\n###### 2\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-add-palette-2}\n: OPTION 2: Create your own discrete scale using {**ggplot2**} and {**scales**}\n::::::\n:::\n::::{.my-r-code-container}\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngg +\n    ggplot2::scale_fill_manual(values = scales::viridis_pal(\n                                alpha = 1,\n                                begin = .25,\n                                 end = .75,\n                                direction = -1,\n                                option = \"cividis\")(5)\n                               )\n```\n\n::: {.cell-output-display}\n![Create your own discrete scale using {**ggplot2**} and {**scales**}](03-data-visualization_files/figure-html/fig-add-palette-2-1.png){#fig-add-palette-2 width=672}\n:::\n:::\n\n\n::::\n:::::\n\n###### 3\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-add-palette-3}\n: OPTION 3: Viridis Color Palette for ggplot2 using {viridis}\n::::::\n:::\n::::{.my-r-code-container}\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngg +\n    viridis::scale_fill_viridis(\n        begin = .25,\n        end = .75,\n        discrete = TRUE,\n        option = \"cividis\",\n        direction = -1\n        )\n```\n\n::: {.cell-output-display}\n![Viridis Color Palette for ggplot2 using {viridis}](03-data-visualization_files/figure-html/fig-add-palette-3-1.png){#fig-add-palette-3 width=672}\n:::\n:::\n\n\n::::\n:::::\n\n###### 4\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-add-palette-4}\n: OPTION 4: Viridis manual scale with {paletteer}\n::::::\n:::\n::::{.my-r-code-container}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(paletteer)\n\ngg +\n    ggplot2::scale_fill_manual(values =\n           paletteer::paletteer_c(\"viridis::cividis\",\n              n = 5,\n              direction = -1)\n    )\n```\n\n::: {.cell-output-display}\n![Viridis manual scale with {paletteer}](03-data-visualization_files/figure-html/fig-add-palette-4-1.png){#fig-add-palette-4 width=672}\n:::\n:::\n\n\n***\n\nThis option with {**paletteer**} lacks some arguments (`alpha`, `begin` and `end`).\n::::\n:::::\n\n###### 5\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-add-palette-5}\n: OPTION 5: Wrapper around continuous function (no direction!)\n::::::\n:::\n::::{.my-r-code-container}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(paletteer)\n\ngg +\n    ggplot2::scale_fill_manual(values =\n           base::rev(paletteer:::paletteer_c_viridis(\n               name = \"cividis\",\n               n = 5))\n    )\n```\n\n::: {.cell-output-display}\n![Viridis Color Palette for ggplot2 using {viridis}](03-data-visualization_files/figure-html/fig-add-palette-5-1.png){#fig-add-palette-5 width=672}\n:::\n:::\n\n\n***\n\nThis option uses an abbreviated function of the {**paletteer**} package. But again it misses the arguments `alpha`, `begin`, `end` and `direction`. It is possible to use `base:rev()` to reverse the direction but for the other arguments I have not found an alternative.\n\n\n::::\n:::::\n\n:::\n\n::::\n:::::\n\nThere are different option to add a palette. The option 4 and 5 with the {**paletteer**} lacks some options. I have not much experience with palettes and color scales. There I am not sure if the missing options are a result of my missing knowledge or if it is a design feature or bug. \n\n:::::{.my-watch-out}\n:::{.my-watch-out-header}\nWATCH OUT! Changing the `alpha` argument does not work\n:::\n::::{.my-watch-out-container}\n\nAll the options to add the {**viridis**} palette does not change the `alpha` argument. I believe that this is an error on the {**ggmosiac**} package. \n\n::::\n:::::\n\n\n\n\n\n***\n\n\n### Online resources\n\n::: my-resource\n::: my-resource-header\nOnline resources of {**ggplot2**} code examples\n:::\n\n::: my-resource-container\n### R Graphs Galleries {.unnumbered}\n\n-   [**R Charts**](https://r-charts.com/): Code examples of R graphs\n    made with base R, {**ggplot2**} and other packages. Over 1400 graphs\n    with reproducible code divided in 8 big categories and over 50 chart\n    types, in addition of tools to choose and create colors and color\n    palettes [@soage2024].\n-   [**The R Graph Gallery**](https://r-graph-gallery.com/index.html):\n    Featuring over 400 examples, our collection is meticulously\n    organized into nearly 50 chart types, following the\n    [data-to-viz](https://www.data-to-viz.com/) classification. Each\n    example comes with reproducible code and a detailed explanation of\n    its functionality [@healy2018a].\n-   [**Top 50 ggplot2 Visualizations - The Master List (With Full R\n    Code)**](https://r-statistics.co/Top50-Ggplot2-Visualizations-MasterList-R-Code.html):\n    Part 3 of a three part tutorial on {**ggplot2**}. There are 8 types\n    of objectives you may construct plots. So, before you actually make\n    the plot, try and figure what findings and relationships you would\n    like to convey or examine through the visualization\n    [@prabhakaran2017].\n-   [**ggplot2 gallery**](https://mjfrigaard.github.io/ggp2-gallery/): A\n    collection of graphs created using ggplot2 (and friends!). See also\n    the [ggplot2 field manual](https://mjfrigaard.github.io/fm-ggp2/):\n    What graph should I use? What kind of graph is that? [@frigaard2023;\n    @frigaard2023a]\n-   [**ggplot2 extension\n    gallery**](https://exts.ggplot2.tidyverse.org/gallery/):\n\n### Videos {.unnumbered}\n\n-   **Plotting anything with {**ggplot2**}: [Video\n    1](https://www.youtube.com/watch?v=h29g21z0a68) & [Video\n    2](https://www.youtube.com/watch?v=0m4yywqNPVY)**: Two 2 hour (!)\n    videos: Part I focuses on teaching the underlying theory of\n    {**ggplot2**} and how it is reflected in the <a class='glossary' title='An API, or application programming interface, is a set of defined rules that enable different applications to communicate with each other. It acts as an intermediary layer that processes data transfers between systems, letting companies open their application data and functionality to external third-party developers, business partners, and internal departments within their companies. (IBM)'>API</a>.\n    Part II focuses on the extended {**ggplot2**} universe with\n    practical examples from many extension packages. Further, at the end\n    is a short section on how to approach new graphics [@pedersen2020a;\n    @pedersen2020].\n\n### Books online {.unnumbered}\n\n-   [**ggplot2: Elegant Graphics for Data Analysis\n    (3e)**](https://ggplot2-book.org/): This book gives some details on\n    the basics of {**ggplot2**}, but its primary focus is explaining the\n    Grammar of Graphics that {**ggplot2**} uses, and describing the full\n    details. It will help you understand the details of the underlying\n    theory, giving you the power to tailor any plot specifically to your\n    needs [@wickham2024].\n-   [**R Graphics Cookbook, 2nd edition**](https://r-graphics.org/): a\n    practical guide that provides more than 150 recipes to help you\n    generate high-quality graphs quickly, without having to comb through\n    all the details of R’s graphing systems. Each recipe tackles a\n    specific problem with a solution you can apply to your own project,\n    and includes a discussion of how and why the recipe works\n    [@chang2024].\n:::\n:::\n\n## Packages introduced in this chapter\n\n### colorblindcheck\n\n:::::{.my-resource}\n:::{.my-resource-header}\ncolorblindcheck: Check Color Palettes for Problems with Color Vision Deficiency\n:::\n::::{.my-resource-container}\n\n***\n\n::: {#pak-colorblindcheck}\n\n***\n\n{**colorblindcheck**}: [Check Color Palettes for Problems with Color Vision Deficiency](https://jakubnowosad.com/colorblindcheck/) [@colorblindcheck]\n\n{*There is no hexagon sticker available for {**colorblindcheck**}.*}\n\nCompare color palettes with simulations of color vision deficiencies - deuteranopia, protanopia, and tritanopia. It includes calculation of distances between colors, and creating summaries of differences between a color palette and simulations of color vision deficiencies.\n\nDeciding if a color palette is a colorblind friendly is a hard task. This cannot be done in an entirely automatic fashion, as the decision needs to be confirmed by visual judgments. The goal of {**colorblindcheck**} is to provide tools to decide if the selected color palette is colorblind friendly, including:\n\n- `palette_dist()` - Calculation of the distances between the colors in the input palette and between the colors in simulations of the color vision deficiencies: deuteranopia, protanopia, and tritanopia.\n- `palette_plot()` - Plotting of the original input palette and simulations of color vision deficiencies: deuteranopia, protanopia, and tritanopia.\n- `palette_check()` - Creating summary statistics comparing the original input palette and simulations of color vision deficiencies: deuteranopia, protanopia, and tritanopia.\n\n\n\n{**colorblindcheck**}: A Package for Check Color Palettes for Problems with Color Vision Deficiency\n:::\n\n\n***\n::::\n:::::\n\n\n### colorblindr\n\n:::::{.my-resource}\n:::{.my-resource-header}\ncolorblindr: Simulate colorblindness in R figures \n:::\n::::{.my-resource-container}\n\n***\n\n::: {#pak-colorblindr}\n\n***\n\n{**colorblindr**}: [Simulate colorblindness in R figures](https://github.com/clauswilke/colorblindr) [@colorblindr]\n\n\n(*There is no hexagon logo for {**colorblindr**} available*)\n\nProvides a variety of functions that are helpful to simulate the effects of colorblindness in R figures. Complete figures can be modified to simulate the effects of various types of colorblindness. The resulting figures are standard grid objects and can be further manipulated or outputted as usual.\n\n{**colorblindr**}: A Package for Simulate colorblindness in R figures\n:::\n\n***\n::::\n:::::\n\n### colorspace\n\n:::::{.my-resource}\n:::{.my-resource-header}\ncolorspace: A Toolbox for Manipulating and Assessing Colors and Palettes \n:::\n::::{.my-resource-container}\n\n***\n\n::: {#pak-colorspace}\n\n***\n\n{**colorspace**}: [A Toolbox for Manipulating and Assessing Colors and Palettes](URL to package) [biblio]\n\n(*There is no hexagon logo for {**colorspace**} available*)\n\nThe colorspace package provides a broad toolbox for selecting individual colors or color palettes, manipulating these colors, and employing them in various kinds of visualizations.\n\nAt the core of the package there are various utilities for computing with color spaces (as the name of the package conveys). Thus, the package helps to map various three-dimensional representations of color to each other. A particularly important mapping is the one from the perceptually-based and device-independent color model HCL (Hue-Chroma-Luminance) to standard Red-Green-Blue (sRGB) which is the basis for color specifications in many systems based on the corresponding hex codes (e.g., in HTML but also in R). For completeness further standard color models are included as well in the package: polarLUV() (= HCL), LUV(), polarLAB(), LAB(), XYZ(), RGB(), sRGB(), HLS(), HSV().\n\nThe HCL space (= polar coordinates in CIELUV) is particularly useful for specifying individual colors and color palettes as its three axes match those of the human visual system very well: Hue (= type of color, dominant wavelength), chroma (= colorfulness), luminance (= brightness).\n\nThere is extensive documentation available. See also the website on [HCL Color Space](https://hclwizard.org/):\n\n> The hclwizard provides tools for manipulating and assessing colors and palettes based on the underlying colorspace software (available in R and Python). It leverages the HCL color space: a color model that is based on human color perception and thus makes it easy to choose good color palettes by varying three color properties: Hue (= type of color, dominant wavelength) - Chroma (= colorfulness) - Luminance (= brightness). As shown in the color swatches below each property can be varied while keeping the other two properties fixed.\n\n{**colorspace**}: A Toolbox for Manipulating and Assessing Colors and Palettes\n:::\n\nThis toolbox package is very important: All of the other color palette related package uses {**colorspace**} as a bases for their functionality. \n\n***\n::::\n:::::\n\n\n### cowplot\n\n::: my-resource\n::: my-resource-header\ncowplot: Streamlined Plot Theme and Plot Annotations for 'ggplot2'\n:::\n\n::: my-resource-container\n\n------------------------------------------------------------------------\n\n::: {#pak-cowplot}\n\n------------------------------------------------------------------------\n\n{**cowplot**}: [Streamlined Plot Theme and Plot Annotations for\n'ggplot2'](https://wilkelab.org/cowplot/)\n\n::: {layout=\"[10, 30]\" layout-valign=\"center\"}\n![](img/chap03/logoi/logo-cowplot-min.png){width=\"176\"}\n\nThe {**cowplot**} package provides various features that help with\ncreating publication-quality figures, such as a set of themes, functions\nto align plots and arrange them into complex compound figures, and\nfunctions that make it easy to annotate plots and or mix plots with\nimages. The package was originally written for internal use in the Wilke\nlab, hence the name (Claus O. Wilke’s plot package). It has also been\nused extensively in the book [Fundamentals of Data\nVisualization](https://www.amazon.com/gp/product/1492031089).\n:::\n\nThere are several packages that can be used to align plots. The most\nwidely used ones beside {**cowplot**} are {**egg**} and {**patchwork**}\n(see @pak-patchwork). All these packages use slightly different\napproaches to plot alignment, and the respective approaches have\ndifferent strengths and weaknesses. If you cannot achieve your desired\nresult with one of these packages try another one.\n\nMost importantly, while {**egg**} and {**patchwork**} align and arrange\nplots at the same time, {**cowplot**} aligns plots independently of how\nthey are arranged. This makes it possible to align plots and then\nreproduce them separately, or even overlay them on top of each other.\n\nThe {**cowplot**} package now provides a set of complementary themes\nwith different features. I now believe that there isn’t one single theme\nthat works for all figures, and therefore I recommend that you always\nexplicitly set a theme for every plot you make.\n\n{**cowplot**}: A Package for Streamlined Plot Themes and Plot\nAnnotations for {**ggplot2**}\n:::\n\n:::\n:::\n\n### curl\n\n:::::{.my-resource}\n:::{.my-resource-header}\ncurl: A Modern and Flexible Web Client for R \n:::\n::::{.my-resource-container}\n\n***\n\n::: {#pak-curl}\n\n***\n\n{**curl**}: [A Modern and Flexible Web Client for R](https://cran.r-project.org/web/packages/curl/vignettes/intro.html) [@curl]\n\n\n(*There is no hexagon logo for {**curl**} available*)\n\nThe `curl()` and `curl_download(`) functions provide highly configurable drop-in replacements for base `url()` and `download.file()` with better performance, support for encryption (https, ftps), gzip compression, authentication, and other 'libcurl' goodies. \n\nThe core of the package implements a framework for performing fully customized requests where data can be processed either in memory, on disk, or streaming via the callback or connection interfaces. Some knowledge of 'libcurl' is recommended; for a more-user-friendly web client see the 'httr' package which builds on this package with http specific tools and logic.\n\n{**curl**}: A Modern and Flexible Web Client for R        \n:::\n\n\n***\n::::\n:::::\n\n\n\n### dichromat\n\n:::::{.my-resource}\n:::{.my-resource-header}\ndichromat: Color Schemes for Dichromats \n:::\n::::{.my-resource-container}\n\n***\n\n::: {#pak-dichromat}\n\n***\n\n{**dichromats**}: [Color Schemes for Dichromats](https://cran.r-project.org/package=dichromat) [@dichromat]\n\n\nCollapse red-green or green-blue distinctions to simulate the effects of different types of color-blindness.\n\n{**dichromat**}: A Package for Color Schemes for Dichromats\n:::\n\n<Other text not included in the package reference>\n\n***\n::::\n:::::\n\n\n### ggmosaic\n\n::: my-resource\n::: my-resource-header\nggmosaic: Mosaic Plots in the 'ggplot2' Framework\n:::\n\n::: my-resource-container\n\n------------------------------------------------------------------------\n\n::: {#pak-ggmosaic}\n\n------------------------------------------------------------------------\n\n{**ggmosaic**}: [Mosaic Plots in the 'ggplot2'\nFramework](https://haleyjeppson.github.io/ggmosaic/) [@ggmosaic]\n\n::: {layout=\"[10, 30]\" layout-valign=\"center\"}\n![](img/chap03/logoi/logo-ggmosaic-min.png){width=\"176\"}\n\n{**ggmosaic**} is designed to create visualizations of categorical data\nand is capable of producing bar charts, stacked bar charts, mosaic\nplots, and double decker plots and therefore offers a wide range of\npotential plots.\n:::\n\nFurthermore, {**ggmosaic**} allows various features to be customized:\n\n-   the order of the variables,\n-   the formula setup of the plot,\n-   faceting,\n-   the type of partition, and\n-   the space between the categories.\n\n{**ggmosaic**}: A Package for Mosaic Plots in the 'ggplot2' Framework\n:::\n\n:::\n:::\n\n### ggokabeito\n\n:::::{.my-resource}\n:::{.my-resource-header}\nggokabeito: 'Okabe-Ito' Scales for 'ggplot2' and 'ggraph' \n:::\n::::{.my-resource-container}\n\n***\n\n::: {#pak-ggokabeito}\n\n***\n\n{**ggokabeito**}: ['Okabe-Ito' Scales for 'ggplot2' and 'ggraph'](https://malcolmbarrett.github.io/ggokabeito/index.html) [@ggokabeito]\n\n(*There is no hexagon logo for {**ggokabeito**} available*)\n\nDiscrete scales for the colorblind-friendly `Okabe-Ito` palette, including 'color', 'fill', and 'edge_colour'. {**ggokabeito**} provides {**ggplot2**} and {**ggraph**} scales to easily use the discrete, colorblind-friendly ‘Okabe-Ito’ palette in your data visualizations.\n\nCurrently, {**ggokabeito**} provides the following scales:\n\n- `scale_color_okabe_ito(`)/`scale_colour_okabe_ito()`\n- `scale_fill_okabe_ito()`\n- `scale_edge_color_okabe_ito()`/`scale_edge_colour_okabe_ito()`\n\n\n{**ggokabeito**}: `Okabe-Ito` Scales for {**ggplot2**} and {**ggraph**}\n:::\n\n***\n::::\n:::::\n\n\n### ggrepel\n\n:::::{.my-resource}\n:::{.my-resource-header}\nggrepel: Automatically Position Non-Overlapping Text Labels with 'ggplot2' \n:::\n::::{.my-resource-container}\n\n***\n\n::: {#pak-ggrepel}\n\n***\n\n{**ggrepel**}: [Automatically Position Non-Overlapping Text Labels with 'ggplot2'](https://ggrepel.slowkow.com/) [@ggrepel]\n\n::: {layout=\"[10, 30]\" layout-valign=\"center\"}\n![](img/chap03/logoi/logo-ggrepel-min.png){width=\"176\"}\n\n\nProvides text and label geoms for 'ggplot2' that help to avoid overlapping text labels. Labels repel away from each other and away from the data points.\n\n:::\n\n{**ggrepel**} provides two geoms for {**ggplot2**} to repel overlapping text labels:\n\n- `ggrepel::geom_text_repel()`\n- `ggrepel::geom_label_repel()`\n\n{**ggrepel**}: A Package for Automatically Position Non-Overlapping Text Labels with 'ggplot2'\n:::\n\n\n***\n::::\n:::::\n\n\n### ggtext\n\n::: my-resource\n::: my-resource-header\nggtext: Improved Text Rendering Support for 'ggplot2'\n:::\n\n::: my-resource-container\n\n------------------------------------------------------------------------\n\n::: {#pak-ggtext}\n\n------------------------------------------------------------------------\n\n{**ggtext**}: [Improved Text Rendering Support for\n'ggplot2'](https://wilkelab.org/ggtext/)\n\n(*There is no hexagon logo for {**ggtext**} available*)\n\nThe ggtext package provides simple Markdown and HTML rendering for\n{**ggplot2.**} Under the hood, the package uses the {**gridtext**}\npackage for the actual rendering, and consequently it is limited to the\n[feature set provided by gridtext](https://wilkelab.org/gridtext/).\n\nSupport is provided for Markdown both in theme elements (plot titles,\nsubtitles, captions, axis labels, legends, etc.) and in geoms (similar\nto `ggplot2::geom_text()`). In both cases, there are two alternatives,\none for creating simple text labels and one for creating text boxes with\nword wrapping.\n\n{**ggtext**}: A Package for Improved Text Rendering Support for\n'ggplot2'\n:::\n\n:::\n:::\n\n### gplots\n\n:::::{.my-resource}\n:::{.my-resource-header}\ngplots: Various R Programming Tools for Plotting Data \n:::\n::::{.my-resource-container}\n\n***\n\n::: {#pak-gplots}\n\n***\n\n{**gplots**}: [Various R Programming Tools for Plotting Data](https://github.com/talgalili/gplots) [@gplots]\n\n\n(*There is no hexagon logo for {**gplots**} available*)\n\nVarious R programming tools for plotting data, including:\n\n- calculating and plotting locally smoothed summary function as\n('bandplot', 'wapply'),\n- enhanced versions of standard plots ('barplot2', 'boxplot2', \n'heatmap.2', 'smartlegend'),\n- manipulating colors ('col2hex', 'colorpanel', 'redgreen',\n'greenred', 'bluered', 'redblue', 'rich.colors'),\n- calculating and plotting two-dimensional data summaries \n('ci2d', 'hist2d'),\n- enhanced regression diagnostic plots ('lmplot2', 'residplot'),\n- formula-enabled interface to 'stats::lowess' function ('lowess'),\n- displaying textual data in plots ('textplot', 'sinkplot'),\n- plotting a matrix where each cell contains a dot whose size \nreflects the relative magnitude of the elements ('balloonplot'),\n- plotting \"Venn\" diagrams ('venn'),\n- displaying Open-Office style plots ('ooplot'),\n- plotting multiple data on same region, with separate axes ('overplot'),\n- plotting means and confidence intervals ('plotCI', 'plotmeans'),\n- spacing points in an x-y plot so they don't overlap ('space').\n\n{**gplots**}: Various R Programming Tools for Plotting Data\n:::\n\n<Other text not included in the package reference>\n\n***\n::::\n:::::\n\n\n\n### gridExtra\n\n::: my-resource\n::: my-resource-header\ngridExtra: Miscellaneous Functions for \"Grid\" Graphics\n:::\n\n::: my-resource-container\n\n------------------------------------------------------------------------\n\n::: {#pak-gridExtra}\n\n------------------------------------------------------------------------\n\n{**gridExtra**}: [Miscellaneous Functions for \"Grid\"\nGraphics](https://cran.r-project.org/package=gridExtra)\n\n(*There is no hexagon logo for {**gridExtra**} available*)\n\nProvides a number of user-level functions to work with \"grid\" graphics,\nnotably to arrange multiple grid-based plots on a page, and draw tables.\n\nThe {**grid**) package (= part of the R system library) provides\nlow-level functions to create graphical objects (`grobs`), and position\nthem on a page in specific viewports. The {**gtable**} package\nintroduced a higher-level layout scheme, arguably more amenable to\nuser-level interaction. With the `gridExtra::arrangeGrob()` /\n`gridExtra::grid.arrange()` pair of functions, {**gridExtra**} builds\nupon {**gtable**} to arrange multiple `grobs` on a page.\n\n{**gridExtra**}: A Package for Miscellaneous Functions for \"Grid\"\nGraphics\n:::\n\n:::\n:::\n\n### httr2\n\n::: my-resource\n::: my-resource-header\nhttr2: Perform HTTP Requests and Process the Responses\n:::\n\n::: my-resource-container\n\n------------------------------------------------------------------------\n\n::: {#pak-httr2}\n\n------------------------------------------------------------------------\n\n{**httr2**}: [Perform HTTP Requests and Process the\nResponses](https://httr2.r-lib.org/)\n\nTools for creating and modifying HTTP requests, then performing them and\nprocessing the results.\n\n::: {layout=\"[10, 30]\" layout-valign=\"center\"}\n![](img/chap03/logoi/logo-httr2-min.png){width=\"176\"}\n\n{**httr2**} (pronounced hitter2) is a ground-up rewrite of {**httr**}\nthat provides a pipeable <a class='glossary' title='An API, or application programming interface, is a set of defined rules that enable different applications to communicate with each other. It acts as an intermediary layer that processes data transfers between systems, letting companies open their application data and functionality to external third-party developers, business partners, and internal departments within their companies. (IBM)'>API</a> with an explicit request\nobject that solves more problems felt by packages that wrap APIs (e.g.\nbuilt-in rate-limiting, retries, OAuth, secure secrets, and more). ---\n{**httr2**} is designed to map closely to the underlying\n<a class='glossary' title='The Hypertext Transfer Protocol (HTTP) is an application layer protocol in the Internet protocol suite model for distributed, collaborative, hypermedia information systems.[1] HTTP is the foundation of data communication for the World Wide Web, where hypertext documents include hyperlinks to other resources that the user can easily access, for example by a mouse click or by tapping the screen in a web browser. (Wikipedia)'>HTTP</a> <a class='glossary' title='A protocol is a system of rules that define how data is exchanged within or between computers. Communications between devices require that the devices agree on the format of the data that is being exchanged. The set of rules that defines a format is called a protocol. (MDN web docs)'>protocol</a>. For more details, read\n[An overview of\nHTTP](https://developer.mozilla.org/en-US/docs/Web/HTTP/Overview) from\n<a class='glossary' title='MDN Web Docs, previously Mozilla Developer Network and formerly Mozilla Developer Center, is a documentation repository and learning resource for web developers. MDN Web Docs content is maintained by Mozilla, Google employees, and volunteers (community of developers and technical writers). It also contains content contributed by Microsoft, Google, and Samsung. Topics include HTML5, JavaScript, CSS, Web APIs, Django, Node.js, WebExtensions, MathML, and others. (Wikipedia)'>MDN</a>.\n:::\n\n{**httr2**}: A Package to Perform HTTP Requests and Process the\nResponses\n:::\n\n:::\n:::\n\n### janitor\n\n::: my-resource\n::: my-resource-header\njanitor: Simple Tools for Examining and Cleaning Dirty Data\n:::\n\n::: my-resource-container\n\n------------------------------------------------------------------------\n\n::: {#pak-janitor}\n\n------------------------------------------------------------------------\n\n{**janitor**}: [Simple Tools for Examining and Cleaning Dirty\nData](https://sfirke.github.io/janitor/) [@janitor]\n\n::: {layout=\"[10, 30]\" layout-valign=\"center\"}\n![](img/chap03/logoi/logo-janitor-min.png){width=\"176\"}\n\n{**janitor**} has simple functions for examining and cleaning dirty\ndata. It was built with beginning and intermediate R users in mind and\nis optimized for user-friendliness. Advanced R users can perform many of\nthese tasks already, but with janitor they can do it faster and save\ntheir thinking for the fun stuff.\n:::\n\n**The main janitor functions:**\n\n-   perfectly format data.frame column names;\n-   create and format frequency tables of one, two, or three variables -\n    think an improved `base::table()`; and\n-   provide other tools for cleaning and examining data.frames.\n\nThe tabulate-and-report functions approximate popular features of SPSS\nand Microsoft Excel.\n\n{**janitor**} is a {**tidyverse**}-oriented package. Specifically, it\nplays nicely with the `%>%` pipe and is optimized for cleaning data\nbrought in with the {**readr**} and {**readxl**} packages.\n\n{**janitor**}: A Package for Simple Tools for Examining and Cleaning\nDirty Data\n:::\n\n------------------------------------------------------------------------\n\nI am using {**janitor**} mostly in two ways:\n\n1.  as better `base::table()` function, using `janitor::tabyl()`\n    -   `base::table()` doesn't accept data.frames and is therefore not\n        compatible with the pipe\n    -   `base::table()` doesn't output data.frames\n    -   `base::table()` results are hard to format (the most annoying\n        \"feature\" for me)\n\n-   to add information and formatting to the table with the\n    `janitor::adorn_*` functions\n    -   `janitor::adorn_totals()`\n    -   `janitor::adorn_percentages()`\n    -   `janitor::adorn_pct_formatting()`\n    -   `janitor::adorn_rounding()`\n    -   `janitor::adorn_ns()` (adding Ns = number of counts)\n    -   `janitor::adorn_title()`\n\nYou could also use {**tidyverse**} commands (for instance for a two\ntable `dplyr::count()` followed by `tidyr::pivot_wider()`) but the many\n`adorn_*`-functions make it easy to enhance the results. BTW: The prefix\n`adorn` comes from 'adornment' (ornament, decoration).\n:::\n:::\n\n### paletteer\n\n:::::{.my-resource}\n:::{.my-resource-header}\npaletteer: Comprehensive Collection of Color Palettes \n:::\n::::{.my-resource-container}\n\n***\n\n::: {#pak-paletteer}\n\n***\n\n{**paletteer**}: [Comprehensive Collection of Color Palettes](https://emilhvitfeldt.github.io/paletteer/index.html) [@paletteer]\n\n::: {layout=\"[10, 30]\" layout-valign=\"center\"}\n![](img/chap03/logoi/logo-paletteer-min.png){width=\"176\"}\n\n\nThe choices of color palettes in R can be quite overwhelming with palettes spread over many packages with many different API's. This packages aims to collect all color palettes across the R ecosystem under the same package with a streamlined API.\n\n:::\n\nThe palettes are divided into 2 groups; discrete and continuous. For discrete palette you have the choice between the fixed width palettes and dynamic palettes.\n\n1. discrete\n    - fixed width palettes: These are the most common discrete palettes. They have a set amount of colors which doesn’t change when the number of colors requested vary.\n    - dynamic palettes: The colors of dynamic palettes depend on the number of colors you need.\n2. continuous: These palettes provides as many colors as you need for a smooth transition of color.\n\nThis package includes 2759 palettes from 75 different packages and information about these can be found in the following data.frames: `palettes_c_names`, `palettes_d_names` and `palettes_dynamic_names`. Additionally this [github repo](https://github.com/EmilHvitfeldt/r-color-palettes/blob/main/README.md) showcases all the palettes included in the package and more.\n\n{**paletteer**}: A Package for Comprehensive Collection of Color Palettes\n:::\n\n\n***\n::::\n:::::\n\n\n\n\n### patchwork\n\n::: my-resource\n::: my-resource-header\npatchwork: The Composer of Plots\n:::\n\n::: my-resource-container\n\n------------------------------------------------------------------------\n\n::: {#pak-patchwork}\n\n------------------------------------------------------------------------\n\n{**patchwork**}: [The Composer of\nPlots](https://patchwork.data-imaginist.com/)\n\n::: {layout=\"[10, 30]\" layout-valign=\"center\"}\n![](img/chap03/logoi/logo-patchwork-min.png){width=\"176\"}\n\nThe goal of {**patchwork**} is to make it ridiculously simple to combine\nseparate `ggplots` into the same graphic. As such it tries to solve the\nsame problem as `gridExtra::grid.arrange()` and `cowplot::plot_grid` but\nusing an <a class='glossary' title='An API, or application programming interface, is a set of defined rules that enable different applications to communicate with each other. It acts as an intermediary layer that processes data transfers between systems, letting companies open their application data and functionality to external third-party developers, business partners, and internal departments within their companies. (IBM)'>API</a> that incites exploration and iteration, and\nscales to arbitrarily complex layouts.\n:::\n\nThe {**ggplot2**} package provides a strong API for sequentially\nbuilding up a plot, but does not concern itself with composition of\nmultiple plots. {**patchwork**} is a package that expands the API to\nallow for arbitrarily complex composition of plots by, among others,\nproviding mathematical operators for combining multiple plots. Other\npackages that try to address this need (but with a different approach)\nare {**gridExtra**} and {**cowplot**} (see @pak-gridExtra and\n@pak-cowplot).\n\nBefore plots can be laid out, they have to be assembled. Arguably one of\npatchwork’s biggest selling points is that it expands on the use of `+`\nin ggplot2 to allow plots to be added together and composed, creating a\nnatural extension of the {**ggplot2**} API.\n\nWhile quite complex compositions can be achieved using `+`, `|`, and\n`/`, it may be necessary to take even more control over the layout. All\nof this can be controlled using the `patchwork::plot_layout()` function\nalong with a couple of special placeholder objects.\n\n{**patchwork**}: A Package for Composing Plots\n:::\n\n:::\n:::\n\n### readxl\n\n::: my-resource\n::: my-resource-header\nreadxl: Read Excel Files\n:::\n\n::: my-resource-container\n\n------------------------------------------------------------------------\n\n::: {#pak-readxl}\n\n------------------------------------------------------------------------\n\n{**readxl**}: [Read Excel Files](https://readxl.tidyverse.org/)\n\n::: {layout=\"[10, 30]\" layout-valign=\"center\"}\n![](img/chap03/logoi/logo-readxl-min.png){width=\"176\"}\n\nThe readxl package makes it easy to get data out of Excel and into R.\nCompared to many of the existing packages (e.g. {**gdata**}, {**xlsx**},\n{**xlsReadWrite**}) {**readxl**} has no external dependencies, so it’s\neasy to install and use on all operating systems. It is designed to work\nwith *tabular* data. Works on Windows, Mac and Linux without external\ndependencies.\n:::\n\n{**readxl**} supports both the legacy `.xls` format and the modern\nxml-based `.xlsx` format. The embedded\n[libxls](https://github.com/libxls/libxls) C library is used to support\n`.xls`, which abstracts away many of the complexities of the underlying\nbinary format. To parse `.xlsx`, we use the\n[RapidXML](https://rapidxml.sourceforge.net/) C++ library.\n\n{**readxl**}: A Package to Read Excel Files\n:::\n\n:::\n:::\n\n### RNHANES\n\n::: my-resource\n::: my-resource-header\nRNHANES: Facilitates Analysis of CDC NHANES Data\n:::\n\n::: my-resource-container\n\n------------------------------------------------------------------------\n\n::: {#pak-RNHANES}\n\n------------------------------------------------------------------------\n\n{**RNHANES**}: [Facilitates Analysis of CDC NHANES\nData](https://wwww.silentspring.org/RNHANES/index.html)\n\n(*There is no hexagon logo available for RNHANES*)\n\nRNHANES is an R package for accessing and analyzing <a class='glossary' title='CDC is the U.S. leading science-based, data-driven, service organization that protects the public’s health. (CDC)'>CDC</a>\n<a class='glossary' title='The National Health and Nutrition Examination Survey (NHANES) is a program of studies designed to assess the health and nutritional status of adults and children in the United States. The survey is unique in that it combines interviews and physical examinations. (NHANES)'>NHANES</a> (National Health and Nutrition Examination\nSurvey) data that was developed by [Silent Spring\nInstitute](https://silentspring.org/).\n\n{**RNHANES**}: A Package for Facilitating Analysis of CDC NHANES Data\n:::\n\n:::\n:::\n\n### scico\n\n:::::{.my-resource}\n:::{.my-resource-header}\nscico: Colour Palettes Based on the Scientific Colour-Maps \n:::\n::::{.my-resource-container}\n\n***\n\n::: {#pak-scico}\n\n***\n\n{**scico**}: [Colour Palettes Based on the Scientific Colour-Maps](https://github.com/thomasp85/scico) [@scico]\n\n::: {layout=\"[10, 30]\" layout-valign=\"center\"}\n![](img/chap03/logoi/logo-scico-min.png){width=\"176\"}\n\n\nColor choice in information visualization is important in order to avoid being mislead by inherent bias in the used color palette. The {**scico**} package provides access to the perceptually uniform and color-blindness friendly palettes developed by [Fabio Crameri](https://www.fabiocrameri.ch/colourmaps/) and released under the \"Scientific Color-Maps\" moniker. The package contains 39 different palettes and includes both diverging and sequential types. It uses more or less the same <a class='glossary' title='An API, or application programming interface, is a set of defined rules that enable different applications to communicate with each other. It acts as an intermediary layer that processes data transfers between systems, letting companies open their application data and functionality to external third-party developers, business partners, and internal departments within their companies. (IBM)'>api</a> as {**viridis**} and provides scales for {**ggplot2**} without requiring {**ggplot2**} to be installed.\n\n:::\n\n**Features of {scico}**\n\n- Perceptually uniform\n- Perceptually ordered\n- Color-vision-deficiency (<a class='glossary' title='Color vision deficiency (CVD) or color blindness (also spelled colour blindness) includes a wide range of causes and conditions and is actually quite complex. It’s a condition characterized by an inability or difficulty in perceiving and differentiating certain colors due to abnormalities in the three color-sensing pigments of the cones in the retina. (EnChroma)'>CVD</a>) friendly\n- Readable in black & white prints\n- All color map types & classes in all major formats\n- Citable & reproducible\n\n\n{**scico**}: A Package for Colour Palettes Based on the Scientific Colour-Maps\n:::\n\n<Other text not included in the package reference>\n\n***\n::::\n:::::\n\n\n### tabulizer\n\npdftools\nPDF Data Extractor PDE\n\nhttps://www.youtube.com/watch?v=bJH-S2iaxNo (extract tables with pdftools)\n\nhttps://stackoverflow.com/questions/60127375/using-the-pdf-data-function-from-the-pdftools-package-efficiently?rq=2\n\n### vcd\n\n:::::{.my-resource}\n:::{.my-resource-header}\nvcd: Visualizing Categorical Data \n:::\n::::{.my-resource-container}\n\n***\n\n::: {#pak-vcd}\n\n***\n\n{**vcd**}: [Visualizing Categorical Data](https://cran.r-project.org/web/packages/vcd/index.html) [@vcd]                      \n\n(*There is no hexagon logo for {**vcd**} available*)\n\nVisualization techniques, data sets, summary and inference procedures aimed particularly at categorical data. Special emphasis is given to highly extensible grid graphics. The package was package was originally inspired by the book \"Visualizing Categorical Data\" by Michael Friendly and is now the main support package for a new book, \"Discrete Data Analysis with R\" by Michael Friendly and David Meyer [-@friendly2015].\n\n{**vcd**}: A Package for Visualizing Categorical Data\n:::\n\n***\n::::\n:::::\n\n### vcdExtra\n\n:::::{.my-resource}\n:::{.my-resource-header}\nvcdExtra: 'vcd' Extensions and Additions \n:::\n::::{.my-resource-container}\n\n***\n\n::: {#pak-vcdExtra}\n\n***\n\n{**vcdExtra**}: ['vcd' Extensions and Additions](https://friendly.github.io/vcdExtra/) [@vcdExtra]\n\n::: {layout=\"[10, 30]\" layout-valign=\"center\"}\n![](img/chap03/logoi/logo-vcdExtra-min.png){width=\"176\"}\n\n\nThis package provides additional data sets, documentation, and many functions designed to extend the vcd package for Visualizing Categorical Data and the {**gnm**} package for Generalized Nonlinear Models. In particular, {**vcdExtra**} extends mosaic, assoc and sieve plots from {**vcd**} to handle `stats::glm()` and `gnm::gnm()` models and adds a 3D version in `vcdExtra::mosaic3d()`.\n\n:::\n\n{**vcdExtra**} is a support package for the book Discrete Data Analysis with R (DDAR) by Michael Friendly and David Meyer [-@friendly2015]. There is also a [web site for DDAR](http://ddar.datavis.ca/) with all figures and code samples from the book. It is also used in my graduate course, [Psy 6136: Categorical Data Analysis](https://friendly.github.io/psy6136/).\n\n{**vcdExtra**}: A Package for 'vcd' Extensions and Additions\n:::\n\n***\n::::\n:::::\n\n\n\n### viridis\n\n::: my-resource\n::: my-resource-header\nviridis: Colorblind-Friendly Color Maps for R\n:::\n\n::: my-resource-container\n\n------------------------------------------------------------------------\n\n::: {#pak-viridis}\n\n------------------------------------------------------------------------\n\n{**viridis**}: <https://sjmgarnier.github.io/viridis/> [@viridis]\n\n::: {layout=\"[10, 30]\" layout-valign=\"center\"}\n![](img/chap03/logoi/logo-viridis-min.png){width=\"176\"}\n\n{**viridis**}, and its companion package {**viridisLite**} provide a\nseries of color maps that are designed to improve graph readability for\nreaders with common forms of color blindness and/or color vision\ndeficiency. The color maps are also perceptually-uniform, both in\nregular form and also when converted to black-and-white for printing.\n:::\n\n{**viridisLite**} provides the base functions for generating the color\nmaps in base R. The package is meant to be as lightweight and\ndependency-free as possible for maximum compatibility with all the R\necosystem. {**viridis**} provides additional functionalities, in\nparticular bindings for {**ggplot2**}.\n\n{**viridis**}: A Package for Colorblind-Friendly Color Maps for R\n:::\n\n:::\n:::\n\n### waffle\n\n::: my-resource\n::: my-resource-header\nwaffle: Create Waffle Chart Visualizations\n:::\n\n::: my-resource-container\n\n------------------------------------------------------------------------\n\n::: {#pak-waffle}\n\n------------------------------------------------------------------------\n\n{**waffle**}: [Create Waffle Chart\nVisualizations](https://cinc.rud.is/web/packages/waffle/index.html)\n\n(*There is no hexagon logo for {**waffle**} available*)\n\nSquare pie charts (a.k.a. waffle charts) can be used to communicate\nparts of a whole for categorical quantities. To emulate the percentage\nview of a pie chart, a 10x10 grid should be used with each square\nrepresenting 1% of the total.\n\nModern uses of waffle charts do not necessarily adhere to this rule and\ncan be created with a grid of any rectangular shape.\n\nBest practices suggest keeping the number of categories small, just as\nshould be done when creating pie charts.\n\nTools are provided to create waffle charts as well as stitch them\ntogether, and to use glyphs for making isotype pictograms.\n\nIt uses {**ggplot2**} and returns a `ggplot2` object.\n\n{**waffle**}: A Package for Creating Waffle Chart Visualizations\n\n\n::::\n:::::\n\n\n:::\n\n### withr\n\n:::::{.my-resource}\n:::{.my-resource-header}\nwithr: Run Code 'With' Temporarily Modified Global State \n:::\n::::{.my-resource-container}\n\n***\n\n::: {#pak-withr}\n\n***\n\n{**withr**}: [Run Code 'With' Temporarily Modified Global State](https://withr.r-lib.org/) [@withr]\n\n::: {layout=\"[10, 30]\" layout-valign=\"center\"}\n![](img/chap03/logoi/logo-withr-min.png){width=\"176\"}\n\n\nA set of functions to run code with safely and temporarily modified global state, withr makes working with the global state, i.e. side effects, less error-prone.\n\n:::\n\nPure functions, such as the `sum()` function, are easy to understand and reason about: they always map the same input to the same output and have no other impact on the workspace. In other words, pure functions have no *side effects*: they are not affected by, nor do they affect, the global state in any way apart from the value they return.\n\nThe purpose of the {**withr**} package is to help you manage side effects in your code. You may want to run code with secret information, such as an API key, that you store as an environment variable. You may also want to run code with certain options, with a given random-seed, or with a particular working-directory.\n\nThe {**withr**} package helps you manage these situations, and more, by providing functions to modify the global state temporarily, and safely. These functions modify one of the global settings for duration of a block of code, then automatically reset it after the block is completed.\n\n{**withr**}: Run Code 'With' Temporarily Modified Global State\n:::\n\n\n***\n\n:::\n:::\n\n## Glossary\n\n\n::: {.cell}\n::: {.cell-output-display}\n`````{=html}\n<table class=\"table\" style=\"margin-left: auto; margin-right: auto;\">\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> term </th>\n   <th style=\"text-align:left;\"> definition </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> API </td>\n   <td style=\"text-align:left;\"> An API, or application programming interface, is a set of defined rules that enable different applications to communicate with each other. It acts as an intermediary layer that processes data transfers between systems, letting companies open their application data and functionality to external third-party developers, business partners, and internal departments within their companies. (&lt;a href=\"https://www.ibm.com/topics/api\"&gt;IBM&lt;/a&gt;) </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> ATF Agency </td>\n   <td style=\"text-align:left;\"> Bureau of Alcohol, Tobacco, Firearms and Explosives (ATF): ATF’s responsibilities include the investigation and prevention of federal offenses involving the unlawful use, manufacture, and possession of firearms and explosives; acts of arson and bombings; and illegal trafficking of alcohol and tobacco products. The ATF also regulates, via licensing, the sale, possession, and transportation of firearms, ammunition, and explosives in interstate commerce. (&lt;a href=\"https://www.atf.gov/about/what-we-do\"&gt;ATF&lt;/a&gt;) </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Bar Charts </td>\n   <td style=\"text-align:left;\"> Bar charts are visual displays of data often used to examine similarities and differences across categories of things; bars can represent frequencies, percentages, means, or other statistics. (SwR, Glossary) </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Boxplots </td>\n   <td style=\"text-align:left;\"> Boxplots are a visual representation of data that shows central tendency (usually the median) and spread (usually the interquartile range) of a numeric variable for one or more groups; boxplots are often used to compare the distribution of a continuous variable across several groups. (SwR, Glossary) </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> CDC </td>\n   <td style=\"text-align:left;\"> CDC is the U.S. leading science-based, data-driven, service organization that protects the public’s health. (&lt;a href=\"https://www.cdc.gov/about/\"&gt;CDC&lt;/a&gt;) </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Color blindness </td>\n   <td style=\"text-align:left;\"> Color blindness (also spelled colour blindness) or color vision deficiency (CVD) or  includes a wide range of causes and conditions and is actually quite complex. It's a condition characterized by an inability or difficulty in perceiving and differentiating certain colors due to abnormalities in the three color-sensing pigments of the cones in the retina. (&lt;a href=\"https://enchroma.com/pages/types-of-color-blindness\"&gt;EnChroma&lt;/a&gt;) </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> CVD </td>\n   <td style=\"text-align:left;\"> Color vision deficiency (CVD) or color blindness (also spelled colour blindness) includes a wide range of causes and conditions and is actually quite complex. It's a condition characterized by an inability or difficulty in perceiving and differentiating certain colors due to abnormalities in the three color-sensing pigments of the cones in the retina. (&lt;a href=\"https://enchroma.com/pages/types-of-color-blindness\"&gt;EnChroma&lt;/a&gt;) </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Density Plots </td>\n   <td style=\"text-align:left;\"> Density plots are used for examining the distribution of a variable measured along a continuum; density plots are similar to histograms but are smoothed and may not show existing gaps in data (SwR, Glossary) </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Donut Charts </td>\n   <td style=\"text-align:left;\"> Donut or doughnut charts (sometimes also called ring charts) are an alternative chart for pie charts, which have a hole in the middle, making them cleaner to read than pie charts. (&lt;a href=\"https://r-charts.com/part-whole/donut-chart/\"&gt;R Charts&lt;/a&gt;) </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Grouped Bar Chart </td>\n   <td style=\"text-align:left;\"> A grouped bar chart is a data visualization that shows two categorical variables in a bar chart where one group is shown along the x-axis for vertical bars or y-axis for horizontal bars and the other grouping is shown as separate bars within each of the first grouping variable categories; the bars are often different colors to distinguish the groups. (SwR, Glossary) </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Histograms </td>\n   <td style=\"text-align:left;\"> Histograms are visual displays of data used to examine the distribution of a numeric variable. (SwR, Glossary) </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> HTTP </td>\n   <td style=\"text-align:left;\"> The Hypertext Transfer Protocol (HTTP) is an application layer protocol in the Internet protocol suite model for distributed, collaborative, hypermedia information systems.[1] HTTP is the foundation of data communication for the World Wide Web, where hypertext documents include hyperlinks to other resources that the user can easily access, for example by a mouse click or by tapping the screen in a web browser. (&lt;a href=\"https://en.wikipedia.org/wiki/HTTP\"&gt;Wikipedia&lt;/a&gt;) </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Kernel Density Estimation </td>\n   <td style=\"text-align:left;\"> Kernel density estimation (KDE) extrapolates data to an estimated population probability density function. It’s called kernel density estimation because each data point is replaced with a kernel—a weighting function to estimate the pdf. The function spreads the influence of any point around a narrow region surrounding the point. (&lt;a href=\"https://www.statisticshowto.com/kernel-density-estimation/\"&gt;Statistics How To&lt;/a&gt;) </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> MDN </td>\n   <td style=\"text-align:left;\"> MDN Web Docs, previously Mozilla Developer Network and formerly Mozilla Developer Center, is a documentation repository and learning resource for web developers. MDN Web Docs content is maintained by Mozilla, Google employees, and volunteers (community of developers and technical writers). It also contains content contributed by Microsoft, Google, and Samsung. Topics include HTML5, JavaScript, CSS, Web APIs, Django, Node.js, WebExtensions, MathML, and others. (&lt;a href=\"https://en.wikipedia.org/wiki/MDN_Web_Docs\"&gt;Wikipedia&lt;/a&gt;) </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Mosaic Plots </td>\n   <td style=\"text-align:left;\"> Mosaic plots are visual representations of data to show the relationship between two categorical variables; useful primarily when both variables have few categories. (SwR, Glossary) </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> NHANES </td>\n   <td style=\"text-align:left;\"> The National Health and Nutrition Examination Survey (NHANES) is a program of studies designed to assess the health and nutritional status of adults and children in the United States. The survey is unique in that it combines interviews and physical examinations. (&lt;a href=\"https://www.cdc.gov/nchs/nhanes/about_nhanes.htm\"&gt;NHANES&lt;/a&gt;) </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Pie Charts </td>\n   <td style=\"text-align:left;\"> Pie charts are used to show parts of a whole; pie charts get their name from looking like a pie with pieces representing different groups, and they are not recommended for most situations because they can be difficult to interpret </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Point Charts </td>\n   <td style=\"text-align:left;\"> Point charts are charts that show summary values for a numeric variable, typically across groups; for example, a point chart could be used in place of a bar graph to show mean or median across groups. (SwR, Glossary) </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Probability Density Function </td>\n   <td style=\"text-align:left;\"> A probability density function (pdf) tells us the probability that a random variable takes on a certain value. (&lt;a href=\"https://www.statology.org/cdf-vs-pdf/\"&gt;Statology&lt;/a&gt;) The probability density function (PDF) for a given value of random variable X represents the density of probability (probability per unit random variable) within a particular range of that random variable X. Probability densities can take values larger than 1. ([StackExchange Mathematics](https://math.stackexchange.com/a/1464837/1215136)) We can use a continuous probability distribution to calculate the probability that a random variable lies within an interval of possible values. To do this, we use the continuous analogue of a sum, an integral. However, we recognise that calculating an integral is equivalent to calculating the area under a probability density curve. We use `p(value)` for probability densities and `P </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Protocol </td>\n   <td style=\"text-align:left;\"> A protocol is a system of rules that define how data is exchanged within or between computers. Communications between devices require that the devices agree on the format of the data that is being exchanged. The set of rules that defines a format is called a protocol. (&lt;a href=\"https://developer.mozilla.org/en-US/docs/Glossary/Protocol\"&gt;MDN web docs&lt;/a&gt;) </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Stacked Bar Chart </td>\n   <td style=\"text-align:left;\"> A stacked bar chart is a data visualization that shows parts of a whole in a bar chart format; this type of chart can be used to examine two categorical variables together by showing the categories of one variable as the bars and the categories of the other variable as different colors within each bar. (SwR, Glossary) </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Statista </td>\n   <td style=\"text-align:left;\"> Statista is a global data and business intelligence platform with an extensive collection of statistics, reports, and insights on over 80,000 topics from 22,500 sources in 170 industries. Established in Germany in 2007, Statista operates in 13 locations worldwide and employs around 1,100 professionals. (&lt;a href=\"https://www.statista.com/aboutus/\"&gt;statista&lt;/a&gt;) </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Violin Plots </td>\n   <td style=\"text-align:left;\"> Violing plots are visual displays of data that combine features of density plots and boxplots to show the distribution of numeric variables, often across groups. (SwR, Glossary) </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Waffle Charts </td>\n   <td style=\"text-align:left;\"> Waffle Charts are visual displays of data that show the parts of a whole similar to a pie chart; waffle charts are generally preferred over pie charts. (SwR, Glossary) </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\n------------------------------------------------------------------------\n\n## Session Info {.unnumbered}\n\n::: my-r-code\n::: my-r-code-header\nSession Info\n:::\n\n::: my-r-code-container\n\n::: {.cell}\n\n```{.r .cell-code}\nsessioninfo::session_info()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> ─ Session info ───────────────────────────────────────────────────────────────\n#>  setting  value\n#>  version  R version 4.3.2 (2023-10-31)\n#>  os       macOS Sonoma 14.2.1\n#>  system   x86_64, darwin20\n#>  ui       X11\n#>  language (EN)\n#>  collate  en_US.UTF-8\n#>  ctype    en_US.UTF-8\n#>  tz       Europe/Vienna\n#>  date     2024-02-24\n#>  pandoc   3.1.12.1 @ /usr/local/bin/ (via rmarkdown)\n#> \n#> ─ Packages ───────────────────────────────────────────────────────────────────\n#>  package         * version    date (UTC) lib source\n#>  base64enc         0.1-3      2015-07-28 [1] CRAN (R 4.3.0)\n#>  bitops            1.0-7      2021-04-24 [1] CRAN (R 4.3.0)\n#>  caTools           1.18.2     2021-03-28 [1] CRAN (R 4.3.0)\n#>  cli               3.6.2      2023-12-11 [1] CRAN (R 4.3.0)\n#>  colorblindcheck   1.0.2      2023-05-13 [1] CRAN (R 4.3.0)\n#>  colorblindr       0.1.0      2024-02-14 [1] Github (clauswilke/colorblindr@90d64f8)\n#>  colorspace        2.1-1      2024-01-03 [1] R-Forge (R 4.3.2)\n#>  commonmark        1.9.1      2024-01-30 [1] CRAN (R 4.3.2)\n#>  cowplot           1.1.3.9000 2024-02-14 [1] Github (wilkelab/cowplot@e1334a2)\n#>  curl              5.2.0      2023-12-08 [1] CRAN (R 4.3.2)\n#>  data.table        1.15.0     2024-01-30 [1] CRAN (R 4.3.2)\n#>  dichromat         2.0-0.1    2022-05-02 [1] CRAN (R 4.3.0)\n#>  digest            0.6.34     2024-01-11 [1] CRAN (R 4.3.0)\n#>  dplyr             1.1.4      2023-11-17 [1] CRAN (R 4.3.0)\n#>  DT                0.31       2023-12-09 [1] CRAN (R 4.3.0)\n#>  evaluate          0.23       2023-11-01 [1] CRAN (R 4.3.0)\n#>  extrafont         0.19       2023-01-18 [1] CRAN (R 4.3.0)\n#>  extrafontdb       1.0        2012-06-11 [1] CRAN (R 4.3.0)\n#>  fansi             1.0.6      2023-12-08 [1] CRAN (R 4.3.0)\n#>  farver            2.1.1      2022-07-06 [1] CRAN (R 4.3.0)\n#>  fastmap           1.1.1      2023-02-24 [1] CRAN (R 4.3.0)\n#>  forcats           1.0.0      2023-01-29 [1] CRAN (R 4.3.0)\n#>  generics          0.1.3      2022-07-05 [1] CRAN (R 4.3.0)\n#>  ggmosaic        * 0.3.4      2024-02-10 [1] Github (haleyjeppson/ggmosaic@b8045be)\n#>  ggokabeito        0.1.0      2021-10-18 [1] CRAN (R 4.3.0)\n#>  ggplot2         * 3.4.4      2023-10-12 [1] CRAN (R 4.3.0)\n#>  ggrepel           0.9.5      2024-01-10 [1] CRAN (R 4.3.0)\n#>  glossary        * 1.0.0.9000 2023-08-12 [1] Github (debruine/glossary@819e329)\n#>  glue              1.7.0      2024-01-09 [1] CRAN (R 4.3.0)\n#>  gplots            3.1.3.1    2024-02-02 [1] CRAN (R 4.3.2)\n#>  gridExtra         2.3        2017-09-09 [1] CRAN (R 4.3.0)\n#>  gtable            0.3.4      2023-08-21 [1] CRAN (R 4.3.0)\n#>  gtools            3.9.5      2023-11-20 [1] CRAN (R 4.3.0)\n#>  here              1.0.1      2020-12-13 [1] CRAN (R 4.3.0)\n#>  highr             0.10       2022-12-22 [1] CRAN (R 4.3.0)\n#>  htmltools         0.5.7      2023-11-03 [1] CRAN (R 4.3.0)\n#>  htmlwidgets       1.6.4      2023-12-06 [1] CRAN (R 4.3.0)\n#>  httr              1.4.7      2023-08-15 [1] CRAN (R 4.3.0)\n#>  janitor           2.2.0      2023-02-02 [1] CRAN (R 4.3.0)\n#>  jsonlite          1.8.8      2023-12-04 [1] CRAN (R 4.3.0)\n#>  kableExtra        1.4.0      2024-01-24 [1] CRAN (R 4.3.2)\n#>  KernSmooth        2.23-22    2023-07-10 [2] CRAN (R 4.3.2)\n#>  knitr             1.45       2023-10-30 [1] CRAN (R 4.3.0)\n#>  labeling          0.4.3      2023-08-29 [1] CRAN (R 4.3.0)\n#>  lattice           0.22-5     2023-10-24 [2] CRAN (R 4.3.0)\n#>  lazyeval          0.2.2      2019-03-15 [1] CRAN (R 4.3.0)\n#>  lifecycle         1.0.4      2023-11-07 [1] CRAN (R 4.3.0)\n#>  lmtest            0.9-40     2022-03-21 [1] CRAN (R 4.3.0)\n#>  lubridate         1.9.3      2023-09-27 [1] CRAN (R 4.3.0)\n#>  magrittr          2.0.3      2022-03-30 [1] CRAN (R 4.3.0)\n#>  markdown          1.12       2023-12-06 [1] CRAN (R 4.3.0)\n#>  MASS              7.3-60.0.1 2024-01-13 [2] CRAN (R 4.3.0)\n#>  microbenchmark    1.4.10     2023-04-28 [1] CRAN (R 4.3.0)\n#>  munsell           0.5.0      2018-06-12 [1] CRAN (R 4.3.0)\n#>  paletteer       * 1.6.0      2024-01-21 [1] CRAN (R 4.3.0)\n#>  patchwork         1.2.0      2024-01-08 [1] CRAN (R 4.3.0)\n#>  pillar            1.9.0      2023-03-22 [1] CRAN (R 4.3.0)\n#>  pkgconfig         2.0.3      2019-09-22 [1] CRAN (R 4.3.0)\n#>  plotly            4.10.4     2024-01-13 [1] CRAN (R 4.3.0)\n#>  plyr              1.8.9      2023-10-02 [1] CRAN (R 4.3.0)\n#>  prismatic         1.1.1      2022-08-15 [1] CRAN (R 4.3.0)\n#>  productplots      0.1.1      2016-07-02 [1] CRAN (R 4.3.0)\n#>  purrr             1.0.2      2023-08-10 [1] CRAN (R 4.3.0)\n#>  R6                2.5.1      2021-08-19 [1] CRAN (R 4.3.0)\n#>  RColorBrewer      1.1-3      2022-04-03 [1] CRAN (R 4.3.0)\n#>  Rcpp              1.0.12     2024-01-09 [1] CRAN (R 4.3.0)\n#>  rematch2          2.1.2      2020-05-01 [1] CRAN (R 4.3.0)\n#>  repr              1.1.6      2023-01-26 [1] CRAN (R 4.3.0)\n#>  rlang             1.1.3      2024-01-10 [1] CRAN (R 4.3.0)\n#>  rmarkdown         2.25       2023-09-18 [1] CRAN (R 4.3.0)\n#>  rprojroot         2.0.4      2023-11-05 [1] CRAN (R 4.3.0)\n#>  rstudioapi        0.15.0     2023-07-07 [1] CRAN (R 4.3.0)\n#>  Rttf2pt1          1.3.12     2023-01-22 [1] CRAN (R 4.3.0)\n#>  rversions         2.1.2      2022-08-31 [1] CRAN (R 4.3.0)\n#>  scales            1.3.0      2023-11-28 [1] CRAN (R 4.3.2)\n#>  sessioninfo       1.2.2      2021-12-06 [1] CRAN (R 4.3.0)\n#>  skimr             2.1.5      2022-12-23 [1] CRAN (R 4.3.0)\n#>  snakecase         0.11.1     2023-08-27 [1] CRAN (R 4.3.0)\n#>  spacesXYZ         1.3-0      2024-01-23 [1] CRAN (R 4.3.2)\n#>  stringi           1.8.3      2023-12-11 [1] CRAN (R 4.3.0)\n#>  stringr           1.5.1      2023-11-14 [1] CRAN (R 4.3.0)\n#>  svglite           2.1.3      2023-12-08 [1] CRAN (R 4.3.0)\n#>  systemfonts       1.0.5      2023-10-09 [1] CRAN (R 4.3.0)\n#>  tibble            3.2.1      2023-03-20 [1] CRAN (R 4.3.0)\n#>  tidyr             1.3.1      2024-01-24 [1] CRAN (R 4.3.2)\n#>  tidyselect        1.2.0      2022-10-10 [1] CRAN (R 4.3.0)\n#>  timechange        0.3.0      2024-01-18 [1] CRAN (R 4.3.0)\n#>  utf8              1.2.4      2023-10-22 [1] CRAN (R 4.3.0)\n#>  vcd               1.4-12     2023-12-29 [1] CRAN (R 4.3.0)\n#>  vctrs             0.6.5      2023-12-01 [1] CRAN (R 4.3.2)\n#>  viridis           0.6.5      2024-01-29 [1] CRAN (R 4.3.2)\n#>  viridisLite       0.4.2      2023-05-02 [1] CRAN (R 4.3.0)\n#>  waffle            1.0.2      2023-09-30 [1] CRAN (R 4.3.0)\n#>  withr             3.0.0      2024-01-16 [1] CRAN (R 4.3.0)\n#>  xfun              0.42       2024-02-08 [1] CRAN (R 4.3.2)\n#>  xml2              1.3.6      2023-12-04 [1] CRAN (R 4.3.0)\n#>  yaml              2.3.8      2023-12-11 [1] CRAN (R 4.3.0)\n#>  zoo               1.8-12     2023-04-13 [1] CRAN (R 4.3.0)\n#> \n#>  [1] /Library/Frameworks/R.framework/Versions/4.3-x86_64/library\n#>  [2] /Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/library\n#> \n#> ──────────────────────────────────────────────────────────────────────────────\n```\n\n\n:::\n:::\n\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"site_libs/kePrint-0.0.1/kePrint.js\"></script>\n<link href=\"site_libs/lightable-0.0.1/lightable.css\" rel=\"stylesheet\" />\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}