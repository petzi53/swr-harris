{
  "hash": "fbe98656e0a46f8705ed44b23e47737a",
  "result": {
    "engine": "knitr",
    "markdown": "# Multinomial and ordinal logistic regression {#sec-chap11}\n\n\n\n\n\n## Achievements to unlock\n\n::: {#obj-chap11}\n::: {.my-objectives}\n::: {.my-objectives-header}\nObjectives for chapter 11\n:::\n\n::: {.my-objectives-container}\n**SwR Achievements**\n\n- **Achievement 1**: Using exploratory data analysis for multinomial logistic regression (@sec-chap11-achievement1)\n- **Achievement 2**: Estimating and interpreting a multinomial logistic regression model (@sec-chap11-achievement2)\n- **Achievement 3**: Checking assumptions for multinomial logistic regression (@sec-chap11-achievement3)\n- **Achievement 4**: Using exploratory data analysis for ordinal logistic regression (@sec-chap11-achievement4)\n- **Achievement 5**: Estimating and interpreting an ordinal logistic regression models (@sec-chap11-achievement5)\n- **Achievement 6**: Checking assumptions for ordinal logistic regression (@sec-chap11-achievement6)\n\n:::\n:::\nAchievements for chapter 11\n:::\n\n\n## The diversity dilemma in STEM\n\nThere is a lack of diversity in the science, technology, engineering, and math (STEM) fields and specifically about the lack of women. There are fewer women college graduates in computer science and math jobs now compared to 15 years ago.\n\nThere are three main reasons cited for fewer women in STEM: \n\n- beliefs about natural ability,\n- societal and cultural norms, \n- and institutional barriers.\n\nOne thing that appeared to encourage women in STEM is the visibility of other women in STEM careers.\n\n## Resources & Chapter Outline\n\n### Data, codebook, and R packages {#sec-chap04-data-codebook-packages}\n\n::: my-resource\n::: my-resource-header\nData, codebook, and R packages for learning about descriptive statistics\n:::\n\n::: my-resource-container\n\n**Data**\n\nThree options for accessing the data: \n\n1. Download and save the original SAS file `stem-nsf-2017-ch11.xpt` from <https://edge.sagepub.com/harris1e> and run the code in the first code chunk to clean the data. \n2. Download and save the original SAS file `stem-nsf-2017-ch11.xpt` from <https://edge.sagepub.com/harris1e> and follow the steps in Box 11.1 to clean the data.\n3. Download and save the original 2017 National Survey of College Graduates data from the National Science Foundation’s SESTAT Data Tool (https://ncsesdata.nsf.gov/datadownload/) and follow Box 11.1 to clean the data.\n\nAs there is nothing new for me in the recoding procedures I will go for the first option.\n\n**Codebook**\n\nTwo options for accessing the codebook: \n\n- Download the `stem-nsf-2017-ch11-codebook.pdf` from <https://edge.sagepub.com/harris1e>\n- Use the version that comes when downloading the raw data file from the National Science Foundation’s SESTAT Data Tool (https://ncsesdata.nsf.gov/datadownload/)\n\n\n\n**Packages**\n\n1. Packages used with the book (sorted alphabetically)\n\n-   {**Hmsic**}: @pak-Hmisc (Frank Harrell) \n-   {**MASS**}: @pak-MASS (Brian Ripley) \n-   {**mlogit**}: @pak-mlogit (Yves Croissant) \n-   {**nnet**}: @pak-nnet (Brian Ripley)\n-   {**ordinal**} @pak-ordinal (Rune Haubo Bojesen Christensen)\n-   {**tidyverse**}: @pak-tidyverse (Hadley Wickham)\n\n    \n2. My additional packages (sorted alphabetically)\n\n\n\n:::\n:::\n\n### Get & recode data\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-chap11-get-data}\n: Get and recode data for chapter 11\n::::::\n:::\n::::{.my-r-code-container}\n::: {#lst-chap11-get-data}\n\n::: {.cell}\n\n```{.r .cell-code}\n# tbl11 <- haven::read_xpt(\"data/chap11/stem-nsf-2017-ch11.xpt\") ## extremely slow!!\ntbl11 <- Hmisc::sasxport.get(file = \"data/chap11/stem-nsf-2017-ch11.xpt\")\n\n# function to recode the satisfaction variables\nRecSatis <- function(x){\n  return(base::as.ordered(forcats::fct_recode(x,\n                \"Very satisfied\" = \"1\" ,\n                \"Somewhat satisfied\" = \"2\",\n                \"Somewhat dissatisfied\" = \"3\",\n                \"Very dissatisfied\" = \"4\",\n                NULL = \"L\")\n            )\n    )\n}\n\n# recode and rename\ntbl11.1 <- tbl11  |> \n  dplyr::select(n2ocprmg, satadv, satsal, satsoc, gender, age)  |> \n  dplyr::mutate(job_cat = forcats::as_factor(\n                    forcats::fct_recode(.f = n2ocprmg,\n                          \"CS, Math, Eng\" = \"1\",\n                          \"Other Sciences\" = \"2\",\n                          \"Other Sciences\" = \"3\",\n                          \"Other Sciences\" = \"4\",\n                          \"CS, Math, Eng\" = \"5\",\n                          \"CS, Math, Eng\" = \"6\",\n                          \"Nonscience\" = \"7\",\n                          NULL  = \"8\"\n                          )\n                    )\n                ) |> \n  dplyr::mutate(satis_advance = RecSatis(x = satadv))  |> \n  dplyr::mutate(satis_salary = RecSatis(x = satsal))  |> \n  dplyr::mutate(satis_contrib = RecSatis(x = satsoc))  |> \n  dplyr::mutate(sex = dplyr::recode(.x = gender, \"M\" = \"Male\", \"F\"= \"Female\"))  |> \n  dplyr::mutate(sex = forcats::fct_relevel(.f = sex, c(\"Male\", \"Female\"))) |> \n  dplyr::mutate(age = as.numeric(x = age))  |> \n  dplyr::select(-n2ocprmg, -satadv, -satsal, -satsoc, -gender) |> \n  haven::zap_label()\n\n# # make sure the reordering worked\n# # re-order to have male first for ref group\n# print(levels(x = tbl11.1$sex))\n\nsave_data_file(\"chap11\", tbl11.1, \"tbl11.1.rds\")\n```\n:::\n\n\nGet and recode data for chapter 11\n:::\n\n(*For this R code chunk is no output available*)\n\n::::\n:::::\n\n***\n\nAt first I thought that there are no new things in recoding the data for chapter 11.. But it turned out that there are some issues to report:\n\n1. **Using  `haven::read_xpt()` instead of `Hmisc::sasxport.get()`** \n\nThis was an error in two respects:\n\n- The variable names were not converted to lower case. So I had to change all variable names in the following recoding.\n- The {**haven**} function was *extremely* slow! In contrast to `sasxport.get()` with 3.94 seconds the file export took 104.12 second, e.g. more than 26 times longer!\n\nI therefore returned to the much fast solution with `Hmisc::sasxport.get()`.\n\n***\n\n2. **Labelled data**\n\nI got with the export of a SAS transport file a labelled data frame with very long labels. After the recoding I lost many of these labels except of two columns. Therfore I used `haven::zap_label()` to remove all variable labels.\n\n3. **Likert-scale as ordered factors**\n\nI changed the factor levels in the `RecSatis()` function with the {**forcats**} package. Additionally I changed all Likert-scale factors to ordered factors.\n\nWith this change I had some troubles, because I haven't had any experience how to do and also to check if the levels are ordered or not. The function `base::levels()` reports the sequence (chronological order) but not the order of the factor levels.\n\n::: {.callout-important #imp-chap11-ordered-factor-levels}\n##### No possibility found in {forcats} to create factor with ordered levels\n\nI could manipulate the (chronological) *appearance* of levels in many ways but I did not find an option to create the class `\"ordered\" \"factor\"`.\n\nTherefore I have to use one of the following base R options options:\n\n- `base::as.ordered()` \n- `base::factor(x = c(\"A\", \"Z\", \"M\"), levels = c(\"A\", \"B\", \"M\", \"Z\"), ordered = TRUE)`\n- `base::ordered(c(\"A\", \"Z\", \"M\"), level = c(\"Z\", \"M\", \"A\"))`\n:::\n\nThe following examples uses in the first line with `tbl11.1$satis_advance` an ordered factor, and with the second line (after the '---' line) with `tbl11.1$sex` a factor without order.\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-chap11-checking-levels-order}\n: How to check the order of factor levels?\n::::::\n:::\n::::{.my-r-code-container}\n::: {#lst-chap11-checking-levels-orderD}\n\n::: {.cell}\n\n```{.r .cell-code}\ntbl11.1 <- base::readRDS(\"data/chap11/tbl11.1.rds\")\n\nglue::glue(\"##########################################################################\")\nglue::glue(\"base::levels() does not reveal if theres is an order in the factor levels\")\nbase::levels(tbl11.1$satis_advance)\nglue::glue(\"--------------------------------------------------------------------------\")\nbase::levels(tbl11.1$sex)\n\nglue::glue(\" \")\nglue::glue(\"##########################################################################\")\nglue::glue(\"If you display a value of an ordered factor, it reveals the order with '<'\")\nhead(tbl11.1$satis_advance, 1)\nglue::glue(\" \")\nglue::glue(\"To prevent showing one value one can use forcats::fct_unique()\")\nforcats::fct_unique(tbl11.1$satis_advance)\nglue::glue(\"--------------------------------------------------------------------------\")\nhead(tbl11.1$sex, 1)\n\n\nglue::glue(\"How to check if a factor has ordered levels, but not the order itself?\")\nglue::glue(\" \")\nglue::glue(\"##########################################################################\")\nglue::glue(\"utils::str()\")\nutils::str(tbl11.1)\n\nglue::glue(\" \")\nglue::glue(\"##########################################################################\")\nglue::glue(\"base::class()\")\nbase::class(tbl11.1$satis_advance)\nglue::glue(\"--------------------------------------------------------------------------\")\nbase::class(tbl11.1$sex)\n\nglue::glue(\" \")\nglue::glue(\"##########################################################################\")\nglue::glue(\"base::is.ordered()\")\nbase::is.ordered(tbl11.1$satis_advance)\nglue::glue(\"--------------------------------------------------------------------------\")\nbase::is.ordered(tbl11.1$sex)\n\nglue::glue(\" \")\nglue::glue(\"##########################################################################\")\nglue::glue(\"skimr::skim()) has a column 'ordered' about the status of the factor variable\")\ntbl11.1 |> dplyr::select(satis_advance, sex) |> skimr::skim()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> ##########################################################################\n#> base::levels() does not reveal if theres is an order in the factor levels\n#> [1] \"Very satisfied\"        \"Somewhat satisfied\"    \"Somewhat dissatisfied\"\n#> [4] \"Very dissatisfied\"    \n#> --------------------------------------------------------------------------\n#> [1] \"Male\"   \"Female\"\n#>  \n#> ##########################################################################\n#> If you display a value of an ordered factor, it reveals the order with '<'\n#> [1] Very satisfied\n#> 4 Levels: Very satisfied < Somewhat satisfied < ... < Very dissatisfied\n#>  \n#> To prevent showing one value one can use forcats::fct_unique()\n#> [1] Very satisfied        Somewhat satisfied    Somewhat dissatisfied\n#> [4] Very dissatisfied     <NA>                 \n#> 4 Levels: Very satisfied < Somewhat satisfied < ... < Very dissatisfied\n#> --------------------------------------------------------------------------\n#> [1] Female\n#> Levels: Male Female\n#> How to check if a factor has ordered levels, but not the order itself?\n#>  \n#> ##########################################################################\n#> utils::str()\n#> 'data.frame':\t83672 obs. of  6 variables:\n#>  $ age          : num  37 37 45 52 45 62 56 50 41 51 ...\n#>  $ job_cat      : Factor w/ 3 levels \"1\",\"2\",\"3\": 1 3 1 1 3 2 2 1 NA 3 ...\n#>  $ satis_advance: Ord.factor w/ 4 levels \"Very satisfied\"<..: 1 3 2 3 1 1 2 2 NA 3 ...\n#>  $ satis_salary : Ord.factor w/ 4 levels \"Very satisfied\"<..: 2 2 2 1 1 1 4 2 NA 2 ...\n#>  $ satis_contrib: Ord.factor w/ 4 levels \"Very satisfied\"<..: 1 2 2 3 1 2 1 1 NA 2 ...\n#>  $ sex          : Factor w/ 2 levels \"Male\",\"Female\": 2 2 1 2 1 1 2 1 2 1 ...\n#>  \n#> ##########################################################################\n#> base::class()\n#> [1] \"ordered\" \"factor\" \n#> --------------------------------------------------------------------------\n#> [1] \"factor\"\n#>  \n#> ##########################################################################\n#> base::is.ordered()\n#> [1] TRUE\n#> --------------------------------------------------------------------------\n#> [1] FALSE\n#>  \n#> ##########################################################################\n#> skimr::skim()) has a column 'ordered' about the status of the factor variable\n```\n\n\n:::\n\n::: {.cell-output-display}\n\nTable: Data summary\n\n|                         |                             |\n|:------------------------|:----------------------------|\n|Name                     |dplyr::select(tbl11.1, sa... |\n|Number of rows           |83672                        |\n|Number of columns        |2                            |\n|_______________________  |                             |\n|Column type frequency:   |                             |\n|factor                   |2                            |\n|________________________ |                             |\n|Group variables          |None                         |\n\n\n**Variable type: factor**\n\n|skim_variable | n_missing| complete_rate|ordered | n_unique|top_counts                                    |\n|:-------------|---------:|-------------:|:-------|--------:|:---------------------------------------------|\n|satis_advance |     14041|          0.83|TRUE    |        4|Som: 30443, Ver: 16980, Som: 15632, Ver: 6576 |\n|sex           |         0|          1.00|FALSE   |        2|Mal: 45470, Fem: 38202                        |\n\n\n:::\n:::\n\n\nSeveral options to check the order of factor levels\n:::\n\n::::\n:::::\n\n\n\n### Show raw data\n\n:::::{.my-example}\n:::{.my-example-header}\n:::::: {#exm-chap11-show-data}\n: Show summary of recoded data for chapter 11\n::::::\n:::\n::::{.my-example-container}\n\n::: {.panel-tabset}\n\n###### tbl11.1\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-chap11-show-tbl11.1}\n: Show recoded data for chapter 11 (`tbl11.1`) \n::::::\n:::\n::::{.my-r-code-container}\n::: {#lst-chap11-show-tbl11.1}\n\n::: {.cell}\n\n```{.r .cell-code}\ntbl11.1 <- base::readRDS(\"data/chap11/tbl11.1.rds\")\n\nglue::glue(\"********** Summarizing with base:summary() **************\")\nbase::summary(tbl11.1)\n\nglue::glue(\"  \")\nglue::glue(\"  \")\nglue::glue(\"********** Summarizing with skimr::skim() **************\")\nglue::glue(\"  \")\nskimr::skim(tbl11.1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> ********** Summarizing with base:summary() **************\n#>       age        job_cat                    satis_advance  \n#>  Min.   :20.00   1   :30946   Very satisfied       :16980  \n#>  1st Qu.:32.00   2   : 7642   Somewhat satisfied   :30443  \n#>  Median :44.00   3   :31043   Somewhat dissatisfied:15632  \n#>  Mean   :45.53   NA's:14041   Very dissatisfied    : 6576  \n#>  3rd Qu.:58.00                NA's                 :14041  \n#>  Max.   :75.00                                             \n#>                 satis_salary                 satis_contrib       sex       \n#>  Very satisfied       :21073   Very satisfied       :35124   Male  :45470  \n#>  Somewhat satisfied   :34453   Somewhat satisfied   :25341   Female:38202  \n#>  Somewhat dissatisfied: 9854   Somewhat dissatisfied: 6774                 \n#>  Very dissatisfied    : 4251   Very dissatisfied    : 2392                 \n#>  NA's                 :14041   NA's                 :14041                 \n#>                                                                            \n#>   \n#>   \n#> ********** Summarizing with skimr::skim() **************\n#> \n```\n\n\n:::\n\n::: {.cell-output-display}\n\nTable: Data summary\n\n|                         |        |\n|:------------------------|:-------|\n|Name                     |tbl11.1 |\n|Number of rows           |83672   |\n|Number of columns        |6       |\n|_______________________  |        |\n|Column type frequency:   |        |\n|factor                   |5       |\n|numeric                  |1       |\n|________________________ |        |\n|Group variables          |None    |\n\n\n**Variable type: factor**\n\n|skim_variable | n_missing| complete_rate|ordered | n_unique|top_counts                                    |\n|:-------------|---------:|-------------:|:-------|--------:|:---------------------------------------------|\n|job_cat       |     14041|          0.83|FALSE   |        3|3: 31043, 1: 30946, 2: 7642                   |\n|satis_advance |     14041|          0.83|TRUE    |        4|Som: 30443, Ver: 16980, Som: 15632, Ver: 6576 |\n|satis_salary  |     14041|          0.83|TRUE    |        4|Som: 34453, Ver: 21073, Som: 9854, Ver: 4251  |\n|satis_contrib |     14041|          0.83|TRUE    |        4|Ver: 35124, Som: 25341, Som: 6774, Ver: 2392  |\n|sex           |         0|          1.00|FALSE   |        2|Mal: 45470, Fem: 38202                        |\n\n\n**Variable type: numeric**\n\n|skim_variable | n_missing| complete_rate|  mean|   sd| p0| p25| p50| p75| p100|hist  |\n|:-------------|---------:|-------------:|-----:|----:|--:|---:|---:|---:|----:|:-----|\n|age           |         0|             1| 45.53| 14.3| 20|  32|  44|  58|   75|▆▇▆▆▃ |\n\n\n:::\n:::\n\nShow recoded data for chapter 11 (`tbl11.1`) \n:::\n\n***\n\n- **job_cat**: Job caktegory of current job. `n2ocprmg` was the original variable name. Recoded into three categories: \n    - CS, Math, Eng = Computer science, math, and engineering fields \n    - Other sciences = Other science fields \n    - Nonscience = Not a science field \n- **satis_advance**: Satisfaction with advancement opportunity. `satadv` was the original variable name. 4-point Likert scale from 4 = very dissatisfied to 1 = very satisfied.\n- `satis_salary`: Satisfaction with salary. `satsal` was the original variable name. 4-point Likert scale from 4 = very dissatisfied to 1 = very satisfied.\n- **satis.contrib**: Satisfaction with contribution to society. `satsoc` was the original variable name. 4-point Likert scale from 4 = very dissatisfied to 1 = very satisfied \n- **sex**: gender was the original variable name. Two categories: Female, Male \n- **age**: Age in years, not recoded or renamed\n\n::::\n:::::\n\n\n###### sample\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-chap11-sample-by-group}\n: Sample 1500 cases: 500 from each job category\n::::::\n:::\n::::{.my-r-code-container}\n::: {#lst-chap11-sample-by-group}    \n\n::: {.cell}\n\n```{.r .cell-code}\n# take a sample of 1500 cases\n# 500 from each job.cat category\ntbl11.2 <- tbl11.1 |> \n  tidyr::drop_na(job_cat) |> \n  dplyr::group_by(job_cat)  |> \n  dplyr::slice_sample(n = 500)\n\nsave_data_file(\"chap11\", tbl11.2, \"tbl11.2.rds\")\n\nglue::glue(\"********** Summarizing with base:summary() **************\")\nbase::summary(tbl11.2)\n\nglue::glue(\" \")\nglue::glue(\" \")\nglue::glue(\"********** Summarizing with skimr::skim() **************\")\nglue::glue(\" \")\nskimr::skim(tbl11.2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> ********** Summarizing with base:summary() **************\n#>       age        job_cat               satis_advance\n#>  Min.   :20.00   1:500   Very satisfied       :330  \n#>  1st Qu.:32.00   2:500   Somewhat satisfied   :669  \n#>  Median :40.00   3:500   Somewhat dissatisfied:344  \n#>  Mean   :42.85           Very dissatisfied    :157  \n#>  3rd Qu.:53.00                                      \n#>  Max.   :75.00                                      \n#>                 satis_salary               satis_contrib     sex     \n#>  Very satisfied       :411   Very satisfied       :764   Male  :813  \n#>  Somewhat satisfied   :757   Somewhat satisfied   :556   Female:687  \n#>  Somewhat dissatisfied:234   Somewhat dissatisfied:125               \n#>  Very dissatisfied    : 98   Very dissatisfied    : 55               \n#>                                                                      \n#>                                                                      \n#>  \n#>  \n#> ********** Summarizing with skimr::skim() **************\n#> \n```\n\n\n:::\n\n::: {.cell-output-display}\n\nTable: Data summary\n\n|                         |        |\n|:------------------------|:-------|\n|Name                     |tbl11.2 |\n|Number of rows           |1500    |\n|Number of columns        |6       |\n|_______________________  |        |\n|Column type frequency:   |        |\n|factor                   |4       |\n|numeric                  |1       |\n|________________________ |        |\n|Group variables          |job_cat |\n\n\n**Variable type: factor**\n\n|skim_variable |job_cat | n_missing| complete_rate|ordered | n_unique|top_counts                            |\n|:-------------|:-------|---------:|-------------:|:-------|--------:|:-------------------------------------|\n|satis_advance |1       |         0|             1|TRUE    |        4|Som: 244, Ver: 118, Som: 100, Ver: 38 |\n|satis_advance |2       |         0|             1|TRUE    |        4|Som: 202, Som: 133, Ver: 96, Ver: 69  |\n|satis_advance |3       |         0|             1|TRUE    |        4|Som: 223, Ver: 116, Som: 111, Ver: 50 |\n|satis_salary  |1       |         0|             1|TRUE    |        4|Som: 247, Ver: 174, Som: 63, Ver: 16  |\n|satis_salary  |2       |         0|             1|TRUE    |        4|Som: 258, Ver: 111, Som: 90, Ver: 41  |\n|satis_salary  |3       |         0|             1|TRUE    |        4|Som: 252, Ver: 126, Som: 81, Ver: 41  |\n|satis_contrib |1       |         0|             1|TRUE    |        4|Ver: 252, Som: 190, Som: 40, Ver: 18  |\n|satis_contrib |2       |         0|             1|TRUE    |        4|Ver: 285, Som: 170, Som: 32, Ver: 13  |\n|satis_contrib |3       |         0|             1|TRUE    |        4|Ver: 227, Som: 196, Som: 53, Ver: 24  |\n|sex           |1       |         0|             1|FALSE   |        2|Mal: 320, Fem: 180                    |\n|sex           |2       |         0|             1|FALSE   |        2|Mal: 256, Fem: 244                    |\n|sex           |3       |         0|             1|FALSE   |        2|Fem: 263, Mal: 237                    |\n\n\n**Variable type: numeric**\n\n|skim_variable |job_cat | n_missing| complete_rate|  mean|    sd| p0| p25|  p50| p75| p100|hist  |\n|:-------------|:-------|---------:|-------------:|-----:|-----:|--:|---:|----:|---:|----:|:-----|\n|age           |1       |         0|             1| 41.41| 12.86| 23|  31| 37.5|  52|   75|▇▅▅▃▁ |\n|age           |2       |         0|             1| 43.45| 12.84| 20|  32| 41.0|  53|   75|▅▇▆▅▂ |\n|age           |3       |         0|             1| 43.70| 13.07| 23|  32| 42.0|  54|   75|▇▆▆▅▂ |\n\n\n:::\n:::\n\n\nShow sampled data: 500 from each job category\n:::\n\n::::\n:::::\n\n:::\n\n::::\n:::::\n\n## Achievement 1: EDA for multinomial logistic regression {#sec-chap11-achievement1}\n\n\n\n\n\n\n\n## Exercises (empty)\n\n\n## Glossary\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n#> data frame with 0 columns and 0 rows\n```\n\n\n:::\n:::\n\n\n------------------------------------------------------------------------\n\n\n## Session Info {.unnumbered}\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\nSession Info\n:::\n::::{.my-r-code-container}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsessioninfo::session_info()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> ─ Session info ───────────────────────────────────────────────────────────────\n#>  setting  value\n#>  version  R version 4.4.0 (2024-04-24)\n#>  os       macOS Sonoma 14.4.1\n#>  system   x86_64, darwin20\n#>  ui       X11\n#>  language (EN)\n#>  collate  en_US.UTF-8\n#>  ctype    en_US.UTF-8\n#>  tz       Europe/Vienna\n#>  date     2024-05-02\n#>  pandoc   3.1.13 @ /usr/local/bin/ (via rmarkdown)\n#> \n#> ─ Packages ───────────────────────────────────────────────────────────────────\n#>  package     * version    date (UTC) lib source\n#>  base64enc     0.1-3      2015-07-28 [1] CRAN (R 4.4.0)\n#>  cli           3.6.2      2023-12-11 [1] CRAN (R 4.4.0)\n#>  colorspace    2.1-0      2023-01-23 [1] CRAN (R 4.4.0)\n#>  crayon        1.5.2      2022-09-29 [1] CRAN (R 4.4.0)\n#>  curl          5.2.1      2024-03-01 [1] CRAN (R 4.4.0)\n#>  digest        0.6.35     2024-03-11 [1] CRAN (R 4.4.0)\n#>  dplyr         1.1.4      2023-11-17 [1] CRAN (R 4.4.0)\n#>  evaluate      0.23       2023-11-01 [1] CRAN (R 4.4.0)\n#>  fansi         1.0.6      2023-12-08 [1] CRAN (R 4.4.0)\n#>  fastmap       1.1.1      2023-02-24 [1] CRAN (R 4.4.0)\n#>  forcats       1.0.0      2023-01-29 [1] CRAN (R 4.4.0)\n#>  generics      0.1.3      2022-07-05 [1] CRAN (R 4.4.0)\n#>  ggplot2       3.5.1      2024-04-23 [1] CRAN (R 4.4.0)\n#>  glossary    * 1.0.0.9003 2024-04-25 [1] Github (debruine/glossary@05e4a61)\n#>  glue          1.7.0      2024-01-09 [1] CRAN (R 4.4.0)\n#>  gtable        0.3.5      2024-04-22 [1] CRAN (R 4.4.0)\n#>  here          1.0.1      2020-12-13 [1] CRAN (R 4.4.0)\n#>  htmltools     0.5.8.1    2024-04-04 [1] CRAN (R 4.4.0)\n#>  htmlwidgets   1.6.4      2023-12-06 [1] CRAN (R 4.4.0)\n#>  jsonlite      1.8.8      2023-12-04 [1] CRAN (R 4.4.0)\n#>  knitr         1.46       2024-04-06 [1] CRAN (R 4.4.0)\n#>  lifecycle     1.0.4      2023-11-07 [1] CRAN (R 4.4.0)\n#>  magrittr      2.0.3      2022-03-30 [1] CRAN (R 4.4.0)\n#>  munsell       0.5.1      2024-04-01 [1] CRAN (R 4.4.0)\n#>  pillar        1.9.0      2023-03-22 [1] CRAN (R 4.4.0)\n#>  pkgconfig     2.0.3      2019-09-22 [1] CRAN (R 4.4.0)\n#>  purrr         1.0.2      2023-08-10 [1] CRAN (R 4.4.0)\n#>  R6            2.5.1      2021-08-19 [1] CRAN (R 4.4.0)\n#>  repr          1.1.7      2024-03-22 [1] CRAN (R 4.4.0)\n#>  rlang         1.1.3      2024-01-10 [1] CRAN (R 4.4.0)\n#>  rmarkdown     2.26       2024-03-05 [1] CRAN (R 4.4.0)\n#>  rprojroot     2.0.4      2023-11-05 [1] CRAN (R 4.4.0)\n#>  rstudioapi    0.16.0     2024-03-24 [1] CRAN (R 4.4.0)\n#>  rversions     2.1.2      2022-08-31 [1] CRAN (R 4.4.0)\n#>  scales        1.3.0      2023-11-28 [1] CRAN (R 4.4.0)\n#>  sessioninfo   1.2.2      2021-12-06 [1] CRAN (R 4.4.0)\n#>  skimr         2.1.5      2022-12-23 [1] CRAN (R 4.4.0)\n#>  stringi       1.8.3      2023-12-11 [1] CRAN (R 4.4.0)\n#>  stringr       1.5.1      2023-11-14 [1] CRAN (R 4.4.0)\n#>  tibble        3.2.1      2023-03-20 [1] CRAN (R 4.4.0)\n#>  tidyr         1.3.1      2024-01-24 [1] CRAN (R 4.4.0)\n#>  tidyselect    1.2.1      2024-03-11 [1] CRAN (R 4.4.0)\n#>  utf8          1.2.4      2023-10-22 [1] CRAN (R 4.4.0)\n#>  vctrs         0.6.5      2023-12-01 [1] CRAN (R 4.4.0)\n#>  withr         3.0.0      2024-01-16 [1] CRAN (R 4.4.0)\n#>  xfun          0.43       2024-03-25 [1] CRAN (R 4.4.0)\n#>  xml2          1.3.6      2023-12-04 [1] CRAN (R 4.4.0)\n#>  yaml          2.3.8      2023-12-11 [1] CRAN (R 4.4.0)\n#> \n#>  [1] /Library/Frameworks/R.framework/Versions/4.4-x86_64/Resources/library\n#> \n#> ──────────────────────────────────────────────────────────────────────────────\n```\n\n\n:::\n:::\n\n\n\n::::\n:::::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}