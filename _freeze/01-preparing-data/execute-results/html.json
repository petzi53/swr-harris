{
  "hash": "b4daf1048c0ae60cce6827d81434630e",
  "result": {
    "engine": "knitr",
    "markdown": "# Preparing Data {#sec-chap01}\n\n\n\n\n\n\n## Achievements to unlock\n\n::: my-objectives\n::: my-objectives-header\nAchievements:\n:::\n\n::: my-objectives-container\n**SwR Achievements**\n\n-   (~~Observations and variables~~)\n-   Using reproducible research practices (@sec-chap01-reproducibility)\n-   (~~Understanding and changing data types~~)\n-   Entering or loading data into R (@sec-chap01-import-data)\n-   Identifying and treating missing values \n(Data wrangling) (@sec-chap01-data-wrangling)\n-   Building a basic bar chart \n(Replicate Figure 1.1 and 1.2) (@sec-chap01-repr-bar-charts)\n\nI will skip the crossed out learning objectives in parenthesis as I know\nalready these procedures. However I will modify and elaborate some of\nthese achievements as mentioned in the parentheses.\n\nI will add other objectives that resulted from questions that arose\nduring reading the book.\n\n**Questions that resulted to additional objectives**\n\n-   How to download data directly from the\n    <a class='glossary' title='A large survey of a sample of people in the United States conducted regularly since 1972; the General Social Survey is abbreviated GSS and is conducted by the National Opinion Research Center at the University of Chicago. (Harris, Glossary)'>General Social Survey</a> (GSS) web page?\n    {@sec-chap01-get-gss-data}\n-   How to work with labelled data? {@sec-chap01-labelled-data}\n-   Reviewing different packages for creating tables (@sec-chap01-review-table-packages)\n- Introducing {**gtsummary**}, a packages for presentation-ready data summary and analytic result tables (see: @pak-gtsummary @sec-chap01-experiments-gtsummary)\n- Developing timeline graph (1973-2022) about opinions of respondents from <a class='glossary' title='A large survey of a sample of people in the United States conducted regularly since 1972; the General Social Survey is abbreviated GSS and is conducted by the National Opinion Research Center at the University of Chicago. (Harris, Glossary)'>GSS</a> surveys about legalizing marijuana (@sec-chap01-grass-timeline)\n:::\n:::\n\n## Using reproducible research practices {#sec-chap01-reproducibility}\n\n### Script files\n\nSwR explains writing script files, but I am using\n<a class='glossary' title='Literate programming is a methodology that combines a programming language with a documentation language, thereby making programs more robust, more portable, more easily maintained, and arguably more fun to write than programs that are written only in a high-level language. The main idea is to treat a program as a piece of literature, addressed to human beings rather than to a computer.(Donald Knuth)'>Literate Programming</a> with Quarto. This has the\nconsequence that in addition to short comments inside code cells I have\nthe possibility to write extensively in the other parts of the file\nabout approach, code, results etc.\n\nA practical advice for scripts is to include a <a class='glossary' title='A set of comments at the top of a code file that provides information about what is in the file (SwR, Glossary)'>prolog</a>.\nPossible prolog sections:\n\n-   Project name\n-   Project purpose\n-   Name(s) of data set(s) used in the project\n-   Location(s) of data set(s) used in the project\n-   Code author name (you!)\n-   Date code created\n-   Date last time code was edited\n\nMost of these information are naturally occurring in the writing process\nof Quarto books.\n\n::: my-resource\n::: my-resource-header\nLiterate Statistical Programming\n:::\n\n::: my-resource-container\n-   Literate Programming:\n    ([Wikipedia](https://en.wikipedia.org/wiki/Literate_programming))\n-   Introduction to Literate Programming with Quarto ([Online\n    Slides](https://gesiscss.github.io/quarto-workshop/material/slides/01_introduction.html#/title-slide))\n-   Reproducibility and literate programming in R ([bookdown\n    course](https://exeter-data-analytics.github.io/LitProg/index.html))\n-   Introduction to Data Science in R for Biologists (Module on\n    [Literate Statistical Programming and\n    Quarto](https://mbutler808.github.io/rclass/posts/2023-01-26-intro-quarto/index.html))\n-   Let’s build a blog with Quarto [Literate programming in\n    Quarto](https://ivelasq.quarto.pub/building-a-blog-with-quarto/workflow/write-docs/))\n    by Isabella Velásquez. The site has other material (for Quarto\n    blogs) as well: [Migrate from R\n    Markdown](https://ivelasq.quarto.pub/building-a-blog-with-quarto/learn-more/migrate-blog/),\n    [Additional\n    resources](https://ivelasq.quarto.pub/building-a-blog-with-quarto/learn-more/resources/)\n-   Introduction to literate programming with Quarto and Markdown by\n    Gesis\n    ([Slides](https://gesiscss.github.io/quarto-workshop/material/slides/01_introduction.html#/title-slide))\n:::\n:::\n\n### Naming objects\n\nI am used to apply the [tidyverse style\nguide](https://style.tidyverse.org/). It requires to use underlines\n(\"snake_code\") as separators in object names. (In contrast to\n\"camelCase\" code style). But reading the book I thought it might be a\ngood idea to use special additional styles for certain specific objects.\n\n-   **Naming constants**: Prefix name of constants with `k_`.\n-   **Naming variables**: Standard snake code.\n-   **Naming functions**: Prefix name of private functions with a dot\n    `.`. I had already experienced that didn't know from which package a\n    function was. Only to learn after looking around for minutes that it\n    was a function I wrote myself!\n-   **Naming data frames**: Prefix name with `df_` for data.frame and\n    `dt_` for tibble. I might also use a suffix to refer to the status\n    e.g., `_raw` (raw data), `_clean` (cleaned data), `_v2` (version\n    number).\n-   **Naming files**: It could be helpful to add at the start the\n    chapter number e.g. `chap02_`. And maybe also --- as in naming data\n    frames --- the status as suffix.\n\n## Import data frames from outside resources {#sec-chap01-import-data}\n\nR has many possibilities to import data from other statistical packages.\n\n### Some common file extensions\n\n-   **.csv**: comma separated values\n-   **.txt**: text file\n-   **.xls or .xlsx**: Excel file\n-   **.sav**: SPSS file\n-   **.sasb7dat**: SAS file\n-   **.xpt**: SAS transfer file\n-   **.dta**: Stata file\n\n### Some packages for import data sources\n\n-   {**readr**}: Read Rectangular Text Data (see: @pak-readr), it is part of {**tidyverse**}\n-   {**vroom**}: Read and Write Rectangular Text Data Quickly\n-   {**haven**}: Import and Export 'SPSS', 'Stata' and 'SAS' Files (see: @pak-haven)\n-   {**foreign**}: Read Data Stored by 'Minitab', 'S', 'SAS', 'SPSS',\n    'Stata', 'Systat', 'Weka', 'dBase', ...\n-   {**readxl**}: Read Excel Files\n-   {**openxslx**}: Read, Write and Edit xslx Files\n-   {**readODS**}: Read and Write ODS Files (e.g. LibreOffice)\n-   {**clipr**}: Read and Write from the System Clipboard\n\nI will not go into the import details of all the different packages\nhere, because my focus is on the <a class='glossary' title='A large survey of a sample of people in the United States conducted regularly since 1972; the General Social Survey is abbreviated GSS and is conducted by the National Opinion Research Center at the University of Chicago. (Harris, Glossary)'>General Social Survey</a>\n(GSS) data.\n\n### Import data with a .csv file\n\n> “While the GSS data can be read into R directly from the GSS website,\n> Kiara had experienced this and knew that it could be frustrating.”\n> ([Harris, 2020](zotero://select/groups/5254842/items/9N29QMJB))\n> ([pdf](zotero://open-pdf/groups/5254842/items/3NDRGBBW?page=107&annotation=SFD9FHQD))\n\nThe author therefore offers for this chapter a\n<a class='glossary' title='Text files where the values are separated with commas (Comma Separated Values = CSV). These files have the file extension .csv'>.csv</a> file with the data. In later chapters\nlearner can choose to use the provided files from the [SAGE\nwebpage](https://edge.sagepub.com/harris1e/student-resources/datasets-and-r-code).\nEven if these data files are not yet cleaned, it is a kind of cheating,\nbecause it bypasses downloading data from the original source.\n\n::: my-example\n::: my-example-header\n::: {#exm-chap01-read-csv-show-data}\n: Read data from a .csv file into R\n:::\n:::\n\n::: my-example-container\n::: panel-tabset\n###### summary()\n\n::: my-r-code\n::: my-r-code-header\n::: {#cnj-code-name-a}\n: Read .csv file and show data summary\n:::\n:::\n\n::: my-r-code-container\n::: {#lst-chap01-read-csv-show-summary}\n\n::: {.cell}\n\n```{.r .cell-code}\ngss_2016_book <- readr::read_csv(\n    file = \"data-harris/legal_weed_age_GSS2016_ch1.csv\",\n    show_col_types = FALSE)\n\nsummary(gss_2016_book)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#>     grass               age           \n#>  Length:2867        Length:2867       \n#>  Class :character   Class :character  \n#>  Mode  :character   Mode  :character\n```\n\n\n:::\n:::\n\n\nRead the provided dataset as a .csv file into R and show\n`base::summary()`\n:::\n\n------------------------------------------------------------------------\n\n**Some comments**\n\n1.  In contrast to `base::read.csv()` in the book I used with\n    `readr::read_csv()` a function from the {**tidyverse**} package\n    collection.\n2.  I added the `show_col_types = FALSE` argument to prevent a message\n    about the column specification.\n:::\n:::\n\nThe output of `base::summary` is in this case not very informative.\nLooking around for appropriate reporting function I developed with\n`glance_data()` my private command. (See\n@lst-chap01-read-csv-glance-data in next tab.)\n\n###### glance_data()\n\n::: my-r-code\n::: my-r-code-header\n::: {#cnj-code-name-b}\nLook at data with my private function `glance_data()`\n:::\n:::\n\n::: my-r-code-container\n::: {#lst-chap01-read-csv-glance-data}\n\n::: {.cell}\n\n```{.r .cell-code}\ngss_2016_book |>\n    dplyr::select(c(age, grass)) |> \n    glance_data(N = 8, seed = 2016)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> # A tibble: 10 × 3\n#>      obs age   grass    \n#>    <int> <chr> <chr>    \n#>  1     1 47    IAP      \n#>  2   172 27    LEGAL    \n#>  3   562 70    NOT LEGAL\n#>  4   898 60    NOT LEGAL\n#>  5  1019 30    LEGAL    \n#>  6  1176 80    NOT LEGAL\n#>  7  1505 53    IAP      \n#>  8  1911 54    NOT LEGAL\n#>  9  2622 62    IAP      \n#> 10  2867 72    NOT LEGAL\n```\n\n\n:::\n:::\n\n\nDisplay 8 randomly chosen rows in addition to the first and last row\n:::\n:::\n:::\n\nI developed a private function `glance_data()` to provide a first\nimpression about the data. The function prints the first and last row of\nthe dataset, so you know implicitly how many rows the dataset has.\nBetween the first and last row the function adds randomly `N` other rows\n(default is 8). Additionally it provides the row number of the data in a\nseparate column. (The column header `obs` stands for \"observation\".) For\nreproducibility purposes you can also add a number for the `set.seed()`\ncommand.\n\nThe idea of `glance_data()` is to get a first impression of the dataset.\nOther printing methods show only the first (or last) rows of the\ndataset. This could be misleading, giving a wrong impression about\ntypical data.\n\n###### glance_data\n\nMaybe you are interested to use `glance_data()` yourself? It isn't\navailable through a package, but you can copy the source code from the\nnext R chunk.\n\nI have saved the function in a `.qmd` file one level higher as this book\n(and all my other R projects). With `{{< include \"../_common.qmd\" >}}` I\nhave the code integrated in this book. (For the `include` shortcode see\nthe section [Includes](https://quarto.org/docs/authoring/includes.html)\nof the Quarto documentation.)\n\n::: {#lst-chap01-show-function-glance-data}\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"show\"}\n### function glance_data ##############\nglance_data <- function(df, N = 8, seed = 42){\n    df_temp <- first_and_last_row(df)\n    \n    set.seed(seed)\n    df |> \n    dplyr::mutate(obs = dplyr::row_number()) |> \n    dplyr::relocate(obs) |> \n    dplyr::slice_sample(n = N) |> \n    dplyr::bind_rows(df_temp) |> \n    dplyr::arrange(obs)\n} \n\nfirst_and_last_row <-  function(df) {\n    df |> \n    dplyr::mutate(obs = dplyr::row_number()) |>\n    dplyr::filter(dplyr::row_number() %in% base::c(1, dplyr::n()))\n}\n```\n:::\n\n\nCode of my private function `glance_date()`\n:::\n:::\n:::\n:::\n\n------------------------------------------------------------------------\n\n## Data Wrangling {#sec-chap01-data-wrangling}\n\n### ToDo List\n\nAfter we saved the data we need to do some data wrangling. To replicate\nthe data structure for the book Figure 1.2 we need to:\n\n-   filter the dataset to the year 2016 (in the case you work with the\n    full GSS dataset 1972-2022, which we won't)\n-   select only the variables `age` and `grass` to work with\n-   drop all NA’s\n-   convert `grass` into factor\n-   recode `grass` labels\n-   convert `age` from double to numeric\n-   divide `age` into appropriate age intervals and label them\n    accordingly\n\n------------------------------------------------------------------------\n\n::: {#fig-chap01-bar-charts layout-ncol=\"2\"}\n![Support for marijuana legalization among participants in the 2016\nGeneral Social Survey (Figure 1.1)](img/chap01/fig-01-01-min.png){#fig-01-01}\n\n![Support for marijuana legalization by age group among participants in\nthe 2016 General Social Survey (Figure\n1.2)](img/chap01/fig-01-02-min.png){#fig-01-02}\n\nWe will replicate these two bar charts (Figure 1.1 and Figure 1.2 in the\nbook)\n:::\n\n------------------------------------------------------------------------\n\n### Replicating data structure for bar charts\n\n::: my-example\n::: my-example-header\n::: {#exm-chap01-repl-data-bar-charts}\n: Replicate data structure for bar charts\n:::\n:::\n\n::: my-example-container\n::: my-r-code\n::: my-r-code-header\n::: {#cnj-chap01-repl-data-fig-book}\n: Replicate data structure for Figures 1.1 and 1.2 (Book)\n:::\n:::\n\n::: my-r-code-container\n\n::: {#lst-repl-data-fig-book}\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngss_2016 <- readr::read_csv(\n    file = \"data/chap01/legal_weed_age_GSS2016_ch1.csv\",\n    show_col_types = FALSE)\n\n\ngss_2016_clean <- gss_2016 |> \n\n#### (A) rework grass ##################\n## convert grass to factor\n  dplyr::mutate(grass = forcats::as_factor(grass))  |> \n\n## change DK and IAP to NA\n  dplyr::mutate(grass = dplyr::na_if(x = grass, y = \"DK\")) |> \n  dplyr::mutate(grass = dplyr::na_if(x = grass, y = \"IAP\")) |> \n\n## drop unused levels \"DK\" and \"IAP\"\n  dplyr::mutate(grass = forcats::fct_drop(grass)) |> \n    \n## convert to factor and recode it\n  dplyr::mutate(grass = forcats::fct_recode(\n      grass, \"Yes\" = \"LEGAL\", \"No\" = \"NOT LEGAL\")) |> \n\n#### (B) rework age #########################\n## change data types and recode\n\n## turn character type of age into factor and recode \"89 OR OLDER\" to \"89\"\n  # dplyr::mutate(age = dplyr::recode(age, \"89 OR OLDER\" = \"89\")) |> \n  dplyr::mutate(age = dplyr::case_match(age, \n                                 \"89 OR OLDER\" ~ \"89\",\n                                 .default = age)) |> \n\n## convert data type of age from factor to numeric\n  dplyr::mutate(age = base::as.numeric(age)) |> \n\n## cut age into several defined age groups\n  dplyr::mutate(age_cat = base::cut(age, \n                       breaks = c(-Inf, 29, 59, 74, Inf),\n                       labels = c(\"< 30\", \"30 - 59\", \"60 - 74\", \"75+\" ))) |>  \n\n## drop NA's\n    tidyr::drop_na()\n\n## save cleaned data gss_2016\nsave_data_file(\"chap01\", gss_2016_clean, \"gss_2016_clean.rds\")\n\n## (C) check result #########\n\n## summarize\nprint(\"************************   SUMMARY   ****************************\")\nbase::summary(gss_2016_clean)\n\n## glance at the data\nprint(\"*******************   GLANCE AT SOME DATA  **********************\")\ngss_2016_clean |>\n    dplyr::select(c(age_cat, grass)) |> \n    glance_data(N = 8, seed = 2016)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> [1] \"************************   SUMMARY   ****************************\"\n#>  grass           age           age_cat   \n#>  Yes:1123   Min.   :18.00   < 30   :332  \n#>  No : 713   1st Qu.:33.00   30 - 59:989  \n#>             Median :48.00   60 - 74:364  \n#>             Mean   :48.26   75+    :151  \n#>             3rd Qu.:61.00                \n#>             Max.   :89.00                \n#> [1] \"*******************   GLANCE AT SOME DATA  **********************\"\n#> # A tibble: 10 × 3\n#>      obs age_cat grass\n#>    <int> <fct>   <fct>\n#>  1     1 60 - 74 Yes  \n#>  2   172 30 - 59 No   \n#>  3   562 75+     No   \n#>  4   574 30 - 59 Yes  \n#>  5  1019 30 - 59 No   \n#>  6  1176 30 - 59 Yes  \n#>  7  1500 < 30    Yes  \n#>  8  1568 75+     No   \n#>  9  1803 75+     Yes  \n#> 10  1836 60 - 74 No\n```\n\n\n:::\n:::\n\n\nReplicate data structure for Figures 1.1 and 1.2 of the book)\n\n:::\n\n------------------------------------------------------------------------\n\nThe somewhat strange cut decision for age groups was motivated by the\nquestion if there is a difference between young and old voters about\nmarijuana legalization.\n\nCompare the result of the recoding with the original data structure in\n@lst-chap01-read-csv-show-summary.\n:::\n:::\n\n**Some comments**\n\n1.  I have included all data wrangling changes for the Figure 1.1 even\n    if they appeared in the book section where the graph is prepared.\n2.  I have used `|>` form the native R pipe instead of `%>%` exported\n    into tidyverse from the {**magrittr**} package.\n3.  Otherwise whenever possible I have used {**tidyverse**} code. For\n    `base::as.numeric()` and `base::cut()` I couldn't find\n    {**tidyverse**} equivalents.\n\n::: my-watch-out\n::: my-watch-out-header\nWATCH OUT! Difference between `forcats::fct_recode()` and\n`dplyr::recode()`. Use `dplyr::case_match()`!\n:::\n\n::: my-watch-out-container\nTo recode `age` from \"89 OR OLDER\" to \"89\" I used at first\n`forcats::fct_recode()`. But this function changes the 72 *levels* of\nthe factor `age` and resulted --- after I changed `age` to numeric in\nthe next line --- in a data frame where `age` ranged from 1 to 72!\n\nAfter I noticed the problem and wanted to replace the {**forcats**}-line\nwith `dplyr::mutate(age = dplyr::recode(age, \"89 OR OLDER\" = \"89\"))` I\nsaw in the help file that\n\n> `recode()` is superseded in favor of `case_match()`, which handles the\n> most important cases of `recode()` with a more elegant interface.\n> ([Recode values](https://dplyr.tidyverse.org/reference/recode.html))\n> and\n\n> \\[`dplyr::case_match()`\\] allows you to vectorise multiple switch()\n> statements. Each case is evaluated sequentially and the first match\n> for each element determines the corresponding value in the output\n> vector. If no cases match, the .default is used. ([A general\n> verctorized\n> switch()](https://dplyr.tidyverse.org/reference/case_match.html))\n:::\n:::\n\n\n@lst-repl-data-fig-book used some important packages:\n\nI used {**dplyr**} in the above code heavily (see: @pak-dplyr). {**dplyr**} is part of the {**tidyverse**} core collection (see: @pak-tidyverse), together with {**forcats**} (see: @pak-forcats), {**ggplot2**} (see @pak-ggplot2), {**readr**} (see: @pak-ggplot2), {**tibble**} (see: @pak-tibble), {**tidyr**} (see: @pak-tidyr), {**string**} and {**purrr**}. \n\nThe last two packages ({**string**} and {**purrr**}) I will profile when I use them the first time.\n\n:::\n:::\n\n\n\n\n\n\n\n## Reproducing bar charts {#sec-chap01-repr-bar-charts}\n\n::: my-example\n::: my-example-header\n::: {#exm-chap01-repr-bar-charts}\n: Reproducing bar charts\n:::\n:::\n\n::: my-example-container\n::: panel-tabset\n###### Figure 1.1\n\n::: my-r-code\n::: my-r-code-header\n::: {#cnj-fig-chap01-repr-fig-1-1}\na: Reproducing bar chart Figure 1.1 using `geom_bar()`\n:::\n:::\n\n::: my-r-code-container\n\n::: {.cell}\n\n```{.r .cell-code}\ngss_2016_clean <-  base::readRDS(\"data/chap01/gss_2016_clean.rds\")\n\n## create figure 1.1 #######\ngss_2016_clean |> \n  ggplot2::ggplot(ggplot2::aes(x = grass,\n             y = 100 * ggplot2::after_stat(count) / \n                 base::sum(ggplot2::after_stat(count)),\n             fill = grass)) +\n  ggplot2::geom_bar() +\n  ggplot2::theme_minimal() +\n  ggplot2::scale_fill_manual(values = c(\"#79a778\", '#7662aa'),\n                    guide = \"none\") +\n  ggplot2::labs(x = \"Should marijuana be legal?\",\n       y = \"Percent of responses\")\n```\n\n::: {.cell-output-display}\n![Support for marijuana legalization among participants in the 2016 General Social Survey (Figure 1.1)](01-preparing-data_files/figure-html/fig-chap01-repr-fig-1-1-1.png){#fig-chap01-repr-fig-1-1 width=384}\n:::\n:::\n\n\n------------------------------------------------------------------------\n\nI changed the code slightly because of two warnings. Newer versions of\n{**ggplot2**} have deprecated some older functions:\n\n-   Warning: The dot-dot notation (`..count..`) was deprecated in\n    {**ggplot2**} version 3.4.0. Please use `after_stat(count)` instead.\n-   Warning: The `guide` argument in `scale_*()` cannot be `FALSE`. This\n    was deprecated in {**ggplot2**} version 3.3.4. Please use \"none\" instead.\n(I have slightly edited both warnings) \n:::\n:::\n\nCompare the reproduction with the original @fig-01-01.\n\n###### Figure 1.2\n\n::: my-r-code\n::: my-r-code-header\n::: {#cnj-fig-chap01-repr-fig-1-2}\nb: Reproducing bar chart Figure 1.2 using `geom_col()`\n:::\n:::\n\n::: my-r-code-container\n\n::: {.cell}\n\n```{.r .cell-code}\ngss_2016_clean <-  base::readRDS(\"data/chap01/gss_2016_clean.rds\")\n\n## create figure 1.2 ########\ngss_2016_clean |> \n  dplyr::group_by(grass, age_cat) |> \n  dplyr::count() |> \n  dplyr::group_by(age_cat) |> \n  dplyr::mutate(perc_grass = 100 * n / base::sum(n)) |> \n  ggplot2::ggplot(ggplot2::aes(x = age_cat, fill = grass,\n             y = perc_grass)) +\n  ggplot2::geom_col(position = 'dodge') +\n  ggplot2::theme_minimal() +\n  ggplot2::scale_fill_manual(values = c('#79a778', '#7662aa'),\n                    name = \"Should marijuana\\nbe legal?\") +\n  ggplot2::labs(x = \"Age group (in years)\",\n       y = \"Percent of responses in age group\")\n```\n\n::: {.cell-output-display}\n![Support for marijuana legalization by age group among participants in the 2016 General Social Survey (Figure 1.2)](01-preparing-data_files/figure-html/fig-chap01-repr-fig-1-2-1.png){#fig-chap01-repr-fig-1-2 width=672}\n:::\n:::\n\n\n------------------------------------------------------------------------\n\n@fig-chap01-repr-fig-1-1 uses `ggplot2::geom_bar()` whereas this figure\nhere calls the `ggplot2::geom_col()` function.\n\n> There are two types of bar charts: `geom_bar()` and `geom_col()`.\n> `geom_bar()` makes the height of the bar proportional to the number of\n> cases in each group … . If you want the heights of the bars to\n> represent values in the data, use `geom_col()` instead. `geom_bar()`\n> uses `stat_count()` by default: it counts the number of cases at each\n> x position. `geom_col()` uses `stat_identity()`: it leaves the data as\n> is. ([Bar\n> charts](https://ggplot2.tidyverse.org/reference/geom_bar.html) with\n> {**ggplot2**})\n:::\n:::\n\nCompare the reproduction with the original @fig-01-02.\n:::\n:::\n:::\n\n------------------------------------------------------------------------\n\n## Exercises\n\n::: my-objectives\n::: my-objectives-header\nExercises for the Coder & Hacker edition\n:::\n\n::: my-objectives-container\n**SwR objectives**\n\n1.  Visit the NHANES website and find the online codebook for the\n    2013–2014 data (@sec-visit-nhanes-website)\n2.  Open the 2013–2014 NHANES data file saved as `nhanes_2013_ch1.csv`\n    with the book materials at\n    [edge.sagepub.com/harris1e](https://edge.sagepub.com/harris1e)\n    (Achievement 1) (@sec-chap01-import-clean-data in tab \"read_csv()\")\n3.  Examine the data types for DUQ200, RIDAGEYR, and RIAGENDR, and fix\n    data types if needed based on the NHANES codebook (Achievements 2\n    and 3) (@sec-chap01-import-clean-data in tab \"View data\" and tab \"Codebook\")\n4.  Based on the online NHANES codebook, code missing values\n    appropriately for DUQ200, RIDAGEYR, and RIAGENDR \n    (Achievement 4) (@sec-chap01-import-clean-data in tab \"Data cleaning\")\n5.  Create a bar chart showing the percentage of NHANES participants\n    answering yes and no to marijuana use \n    (Achievement 5) (@sec-chap01-bar-chart-grass in tab \"Solution\")\n6.  Recode age into a new variable called `age_cat` with 4 categories:\n    18–29, 30–39, 40–49, 50–59 \n    (Achievement 7) (@sec-chap01-grass-age-sex in tab \"Numbers\")\n7.  Create a bar chart of marijuana use by age group\n(Achievement 6) (@sec-chap01-grass-age-sex in tab \"Age\")\n8.  ~~Add a prolog and comments to your code (Achievement 1)~~ (I am\n    using <a class='glossary' title='Literate programming is a methodology that combines a programming language with a documentation language, thereby making programs more robust, more portable, more easily maintained, and arguably more fun to write than programs that are written only in a high-level language. The main idea is to treat a program as a piece of literature, addressed to human beings rather than to a computer.(Donald Knuth)'>literate programming</a> in writing this book.)\n9.  Create a bar chart of marijuana use by age group and sex with side-by-side bars (Achievement 5) (@sec-chap01-grass-age-sex in tab \"Age and sex\")\n10. Following the R code in your code file, use comments to describe\n    what you found. Given what you found and the information in the\n    chapter, what do you predict will happen with marijuana legalization\n    in the next 10 years? Discuss how the omission of older people from\n    the marijuana use question for NHANES influenced your prediction.\n    Write your prediction and discussion in comments at the end of your\n    code file (@sec-chap01-data-interpretation). \n\n**My own additional exercises**\n\n11. Download and work with SAS .xpt file data (Demo)\n    {@sec-download-xpt-file}\n12. Show table of frequencies and percentages (@sec-chap01-bar-chart-grass in Tab \"Numbers\")\n12. Make bars thinner (@sec-chap01-bar-chart-grass in Tab \"Thin bars\") \n13. Make bars thinner and adjust spacing accordingly (@sec-chap01-bar-chart-grass in Tab \"Solution\") \n:::\n:::\n\n### Visiting the NHANES website {#sec-visit-nhanes-website}\n\nUse the National Health and Nutrition Examination Survey\n(<a class='glossary' title='The National Health and Nutrition Examination Survey (NHANES) is a program of studies designed to assess the health and nutritional status of adults and children in the United States. The survey is unique in that it combines interviews and physical examinations. (NHANES)'>NHANES</a>) data to examine marijuana use in the United\nStates. Spend a few minutes looking through the NHANES website\n([https://www.cdc.gov/nchs/nhanes/index.htm](https://www.cdc.gov/nchs/nhanes/index.htm)) before you begin, including\nfinding the online codebook for the 2013–2014 data. Complete the\nfollowing tasks to explore whether age is related to marijuana use in\nthe United States.\n\nThe 2013–2014 codebook is on the page [NHANES\n2013-2014](https://wwwn.cdc.gov/nchs/nhanes/continuousnhanes/default.aspx?BeginYear=2013).\nOn this page are the links to different types of data, documentations or\ncodebooks.\n\nYou can choose from\n\n::: {#bul-NAHNES-data-sections}\n-   Demographics Data\n-   Dietary Data\n-   Examination Data\n-   Laboratory Data\n-   Questionnaire Data\n-   Limited Access Data\n\nNHANES has six different data sections\n:::\n\nClicking of one of these links opens a page where a table contains the\nfollowing information:\n\n::: {#bul-NHANES-data-pages}\n-   Data File Name\n-   Doc File\n-   Data File\n-   Data Published\n\nNHANES data pages has download links for documentation and data files\n:::\n\n[Datasets and\nDocumentation](https://wwwn.cdc.gov/nchs/nhanes/tutorials/Datasets.aspx)\nand [Frequently Asked Questions\n(FAQs)](https://wwwn.cdc.gov/nchs/nhanes/continuousnhanes/faq.aspx) are\nimportant introductory pages.\n\nNHANES data are saved in a [SAS transport (.XPT)\nfile](https://www.loc.gov/preservation/digital/formats/fdd/fdd000464.shtml).\nThese file can be read with `foreign::read.xport()` and\n`haven::read_xpt()`. There is also a [page with example\ncode](https://wwwn.cdc.gov/nchs/nhanes/tutorials/Datasets.aspx) to\ndownload/import NHANES data files. I will use {**haven**} instead of the\nrecommended {**foreign**} package.\n\n### Download NHANES SAS .xpt file data (Demo) {#sec-download-xpt-file}\n\n::: my-experiment\n::: my-experiment-header\n::: {#def-chap01-xpt-file-download}\n: Download and work with NHANES SAS .xpt file data (Demo)\n:::\n:::\n\n::: my-experiment-container\n::: panel-tabset\n###### Get .xpt file\n\n::: my-r-code\n::: my-r-code-header\n::: {#cnj-chap01-save-xpt-file-demo}\n: Save a SAS transport (.xpt) file from the NHANES site for demo\npurposes and display the structure of the file\n:::\n:::\n\n::: my-r-code-container\n\n::: {.cell}\n\n```{#lst-chap01-downloadfile .r .cell-code  lst-cap=\"Download a file and save it as R object\"}\n## download only once (manually)\nutils::download.file(\n    \"https://wwwn.cdc.gov/Nchs/Nhanes/2017-2018/P_BPXO.XPT\",\n    tf <- base::tempfile(),\n    mode = \"wb\"\n)\nblood_pressure_demo <- haven::read_xpt(tf)\n\nsave_data_file(\"chap01\", blood_pressure_demo, \"blood_pressure_demo.rds\")\n```\n:::\n\n\n(*This code chunk has no visible output*)\n\nWith the exception of using (**haven**) instead of {**foreign**}, I\nfollowed the instruction from the [NHANES\nrecommendation](https://wwwn.cdc.gov/nchs/data/tutorials/file_download_import_R.R).\nWe see labelled data as it was expected from the import with\n{**haven**}.\n\nIn @lst-chap01-get-gss2016-automated I have already used the\n`utils::download.file()` function: There are some differences:\n\n-   @lst-chap01-get-gss2016-automated downloaded a STATA `.zip` file,\n    therefore I used `unz()` to unzip the file and to read\n    `haven::read_dta()` instead `haven::read_xpt()`.\n-   More important however was the `base::unlink(temp)` command to\n    unlink the temporary file, which is not done here.\n-   Another difference was using the argument `mode = \"wb\"` for writing\n    binary files. As I understood this is only important for Windows\n    user. On my Mac I could stick with the default value `mode = \"w\"`.\n    But for reproducibility it would be better to use in the future the\n    more general option with `mode = \"wb\"`.\n:::\n:::\n\n:::::{.my-important}\n:::{.my-important-header}\n{**nhanesA**} package facilitates downloading NHANES data\n:::\n::::{.my-important-container}\nI just learned that there is a {**nhanesA**} package that facilitates downloading data to R. (2024-01-20) The latest package release is brand-new (2024-01-09).\n\nI am planning to use this package when I am working with again with NHANES data in @sec-chap03 and @sec-chap06. Just for me to remember: \n\n- The packages is [on CRAN](https://cran.r-project.org/web/packages/nhanesA/index.html)\n- There is a [GitHub repository](https://github.com/cjendres1/nhanes).\n- A very informative [introductory vignette](https://cran.r-project.org/web/packages/nhanesA/vignettes/Introducing_nhanesA.html) does not only explain the package but also the structure of the NAHNES data and codebook.\n\n::::\n:::::\n\n\n\n###### str()\n\n::: my-r-code\n::: my-r-code-header\n::: {#cnj-chap01-str-blood-pressure-demo}\n: Show data summary of three blood pressure variables with\n`utils::str()` (Demo)\n:::\n:::\n\n::: my-r-code-container\n\n::: {.cell}\n\n```{.r .cell-code}\nblood_pressure_demo <- base::readRDS(\"data/chap01/blood_pressure_demo.rds\")\n\nblood_pressure_demo |> \n    dplyr::select(c(2, 4, 5)) |> \n    utils::str()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> tibble [11,656 × 3] (S3: tbl_df/tbl/data.frame)\n#>  $ BPAOARM: chr [1:11656] \"R\" \"R\" \"R\" \"R\" ...\n#>   ..- attr(*, \"label\")= chr \"Arm selected - oscillometric\"\n#>  $ BPXOSY1: num [1:11656] 109 99 123 102 116 138 104 100 141 NA ...\n#>   ..- attr(*, \"label\")= chr \"Systolic - 1st oscillometric reading\"\n#>  $ BPXODI1: num [1:11656] 67 56 73 65 68 70 58 64 77 NA ...\n#>   ..- attr(*, \"label\")= chr \"Diastolic - 1st oscillometric reading\"\n```\n\n\n:::\n:::\n\n:::\n:::\n\n###### summary()\n\n::: my-r-code\n::: my-r-code-header\n::: {#cnj-chap01-summary-blood-pressure-demo}\n: Show data summary of three blood pressure variables with `summary()`\n(Demo)\n:::\n:::\n\n::: my-r-code-container\n\n::: {.cell}\n\n```{.r .cell-code}\nblood_pressure_demo |> \n    dplyr::select(c(2, 4, 5)) |> \n    base::summary()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#>    BPAOARM             BPXOSY1        BPXODI1      \n#>  Length:11656       Min.   : 52    Min.   : 31.00  \n#>  Class :character   1st Qu.:106    1st Qu.: 63.00  \n#>  Mode  :character   Median :117    Median : 71.00  \n#>                     Mean   :120    Mean   : 72.04  \n#>                     3rd Qu.:130    3rd Qu.: 80.00  \n#>                     Max.   :225    Max.   :151.00  \n#>                     NA's   :1304   NA's   :1304\n```\n\n\n:::\n:::\n\n:::\n:::\n\n###### skim()\n\n::: my-r-code\n::: my-r-code-header\n::: {#cnj-chap01-skim-blood-pressure-demo}\n: Show data summary of three blood pressure variables with `skim()`\n(Demo)\n:::\n:::\n\n::: my-r-code-container\n\n::: {.cell}\n\n```{.r .cell-code}\nblood_pressure_demo |> \n    dplyr::select(c(2, 4, 5)) |> \n    skimr::skim()\n```\n\n::: {.cell-output-display}\n\nTable: Data summary\n\n|                         |                             |\n|:------------------------|:----------------------------|\n|Name                     |dplyr::select(blood_press... |\n|Number of rows           |11656                        |\n|Number of columns        |3                            |\n|_______________________  |                             |\n|Column type frequency:   |                             |\n|character                |1                            |\n|numeric                  |2                            |\n|________________________ |                             |\n|Group variables          |None                         |\n\n\n**Variable type: character**\n\n|skim_variable | n_missing| complete_rate| min| max| empty| n_unique| whitespace|\n|:-------------|---------:|-------------:|---:|---:|-----:|--------:|----------:|\n|BPAOARM       |         0|             1|   0|   1|  2152|        3|          0|\n\n\n**Variable type: numeric**\n\n|skim_variable | n_missing| complete_rate|   mean|    sd| p0| p25| p50| p75| p100|hist  |\n|:-------------|---------:|-------------:|------:|-----:|--:|---:|---:|---:|----:|:-----|\n|BPXOSY1       |      1304|          0.89| 120.00| 19.95| 52| 106| 117| 130|  225|▁▇▅▁▁ |\n|BPXODI1       |      1304|          0.89|  72.04| 12.42| 31|  63|  71|  80|  151|▁▇▃▁▁ |\n\n\n:::\n:::\n\n:::\n:::\n\n###### glance_data()\n\n::: my-r-code\n::: my-r-code-header\n::: {#cnj-chap01-show-random-blood-pressure-demo}\n: Show some blood pressure data with my private function `glance_data()`\n:::\n:::\n\n::: my-r-code-container\n\n::: {.cell}\n\n```{.r .cell-code}\nblood_pressure_demo <- base::readRDS(\"data/chap01/blood_pressure_demo.rds\")\n\n## display some values\nblood_pressure_demo |> \n    dplyr::select(c(2, 4, 5)) |> \n    dplyr::rename(arm_selected = BPAOARM) |> \n    dplyr::rename(systolic = BPXOSY1) |> \n    dplyr::rename(diastolic = BPXODI1) |> \n    glance_data()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> # A tibble: 10 × 4\n#>      obs arm_selected systolic diastolic\n#>    <int> <chr>           <dbl>     <dbl>\n#>  1     1 R                 109        67\n#>  2   356 R                 131        64\n#>  3  1252 R                 100        54\n#>  4  2369 R                 173        82\n#>  5  5273 R                 131        77\n#>  6  8826 R                 111        74\n#>  7  9290 R                 112        69\n#>  8 10289 R                 141        74\n#>  9 10801 R                 112        71\n#> 10 11656 R                 122        55\n```\n\n\n:::\n:::\n\n:::\n:::\n:::\n:::\n:::\n\n### Import & clean data {#sec-chap01-import-clean-data}\n\n::: my-exercise\n::: my-exercise-header\n::: {#exr-chap01-read-nhanes-csv}\n: Coder exercises: Import & clean data\n:::\n:::\n\n::: my-exercise-container\n::: panel-tabset\n###### read_csv()\n\n::: my-r-code\n::: my-r-code-header\n::: {#cnj-chap01-read-nhanes-csv}\n: Open the 2013–2014 NHANES data file that comes with the book\n:::\n:::\n\n::: my-r-code-container\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## load and save it only once (manually) ########\nnhanes_2013 <- readr::read_csv(\"data/chap01/nhanes_2013_ch1.csv\")\nsave_data_file(\"chap01\", nhanes_2013, \"nhanes_2013.rds\")\n```\n:::\n\n\n\n(*This R Code chunk has no visible output.*)\n:::\n:::\n\n###### View data\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-chap01-NHANES-view-data}\n: Look at the data with `utils::str()` and `skimr::skim()`\n::::::\n:::\n::::{.my-r-code-container}\n\n::: {#lst-chap01-NHANES-view-data}\n\n::: {.cell}\n\n```{.r .cell-code}\nnhanes_2013 <- base::readRDS(\"data/chap01/nhanes_2013.rds\")\n\nbase::summary(nhanes_2013)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#>       ...1          DUQ200        RIDAGEYR        RIAGENDR    \n#>  Min.   :   1   Min.   :1.00   Min.   :18.00   Min.   :1.000  \n#>  1st Qu.:1265   1st Qu.:1.00   1st Qu.:30.00   1st Qu.:1.000  \n#>  Median :2529   Median :1.00   Median :42.00   Median :2.000  \n#>  Mean   :2529   Mean   :1.48   Mean   :42.49   Mean   :1.522  \n#>  3rd Qu.:3793   3rd Qu.:2.00   3rd Qu.:56.00   3rd Qu.:2.000  \n#>  Max.   :5057   Max.   :9.00   Max.   :69.00   Max.   :2.000  \n#>                 NA's   :1356\n```\n\n\n:::\n\n```{.r .cell-code}\nutils::str(nhanes_2013)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> spc_tbl_ [5,057 × 4] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n#>  $ ...1    : num [1:5057] 1 2 3 4 5 6 7 8 9 10 ...\n#>  $ DUQ200  : num [1:5057] NA 1 1 NA 1 NA 2 2 1 2 ...\n#>  $ RIDAGEYR: num [1:5057] 69 54 56 61 56 65 26 33 32 18 ...\n#>  $ RIAGENDR: num [1:5057] 1 1 1 2 2 1 2 2 1 1 ...\n#>  - attr(*, \"spec\")=\n#>   .. cols(\n#>   ..   ...1 = col_double(),\n#>   ..   DUQ200 = col_double(),\n#>   ..   RIDAGEYR = col_double(),\n#>   ..   RIAGENDR = col_double()\n#>   .. )\n#>  - attr(*, \"problems\")=<externalptr>\n```\n\n\n:::\n\n```{.r .cell-code}\nskimr::skim(nhanes_2013)\n```\n\n::: {.cell-output-display}\n\nTable: Data summary\n\n|                         |            |\n|:------------------------|:-----------|\n|Name                     |nhanes_2013 |\n|Number of rows           |5057        |\n|Number of columns        |4           |\n|_______________________  |            |\n|Column type frequency:   |            |\n|numeric                  |4           |\n|________________________ |            |\n|Group variables          |None        |\n\n\n**Variable type: numeric**\n\n|skim_variable | n_missing| complete_rate|    mean|      sd| p0|  p25|  p50|  p75| p100|hist  |\n|:-------------|---------:|-------------:|-------:|-------:|--:|----:|----:|----:|----:|:-----|\n|...1          |         0|          1.00| 2529.00| 1459.97|  1| 1265| 2529| 3793| 5057|▇▇▇▇▇ |\n|DUQ200        |      1356|          0.73|    1.48|    0.61|  1|    1|    1|    2|    9|▇▁▁▁▁ |\n|RIDAGEYR      |         0|          1.00|   42.49|   15.16| 18|   30|   42|   56|   69|▇▆▇▆▇ |\n|RIAGENDR      |         0|          1.00|    1.52|    0.50|  1|    1|    2|    2|    2|▇▁▁▁▇ |\n\n\n:::\n:::\n\n\nLook at the data with `utils::str()` and `skimr::skim()`\n:::\n\nAs one of the packages for displaying summaries I am using the {**skimr**} package (see @pak-skimr).\n::::\n:::::\n\n\n\n\n###### Codebook\n\nUnfortunately the .csv files does not include labelled data. Therefore I\nhad to look for the variable names in all different NHANES sections as\noutlined in @bul-NAHNES-data-sections. Inspecting the accompanying\nNHANES download pages (see: @bul-NHANES-data-pages) I could look for the\nvariable names in the download links for the documentation.\n\n-   [DUQ200](https://wwwn.cdc.gov/Nchs/Nhanes/2013-2014/DUQ_H.htm#DUQ200):\n    Ever used marijuana or hashish\n-   [RIAGENDR](https://wwwn.cdc.gov/Nchs/Nhanes/2013-2014/DEMO_H.htm#RIAGENDR):\n    Gender\n-   [RIDAGEYR](https://wwwn.cdc.gov/Nchs/Nhanes/2013-2014/DEMO_H.htm#RIDAGEYR):\n    Age in years at screening\n\nThere is an additional column `...1` (see @lst-chap01-NHANES-view-data) providing row numbers. Maybe this column works as an ID, a kind sequence number, so that one could merge other data files identified by this number. (See [SEQN](https://wwwn.cdc.gov/Nchs/Nhanes/2013-2014/DEMO_H.htm#SEQN): Respondent Sequence Number). Why this column has lost its name, I do not know. Perhaps it has to do with the data import done by the book author?\n\nTo facilitate the work I made screenshots from these four variables:\n\n![](img/chap01/codebook-NHANES-DUQ200-marijuana-min.png)\n\n![](img/chap01/codebook-NHANES-RIAGENDR-RIDAGEYR-gender-age-min.png)\n\n\n![](img/chap01/codebook-NHANES-SEQN-sequence-number-min.png)\n\n###### Data cleaning\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-chap01-NHANES-data-cleaning}\n: Look at the data after data cleaning\n::::::\n:::\n::::{.my-r-code-container}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnhanes_2013 <- base::readRDS(\"data/chap01/nhanes_2013.rds\")\n\nnhanes_2013_clean <- nhanes_2013 |> \n    dplyr::rename(nr = ...1) |> \n    dplyr::rename(\n        sex = RIAGENDR,\n        age = RIDAGEYR,\n        grass = DUQ200\n        ) |> \n    dplyr::mutate(grass =\n          dplyr::na_if(x = grass, y = 7)) |> \n    dplyr::mutate(grass =\n          dplyr::na_if(x = grass, y = 9)) |>\n    tidyr::drop_na() |> \n    dplyr::mutate(sex = forcats::as_factor(sex)) |> \n    dplyr::mutate(grass = forcats::as_factor(grass)) |> \n    dplyr::mutate(grass = \n          forcats::fct_recode(grass, \n          \"Yes\" = \"1\", \"No\" = \"2\")) |> \n    dplyr::mutate(sex = \n          forcats::fct_recode(sex, \n          \"Male\" = \"1\", \"Female\" = \"2\"))\n\n## save cleaned data ###############\nsave_data_file(\"chap01\", nhanes_2013_clean, \"nhanes_2013_clean.rds\")\n\nbase::summary(nhanes_2013_clean)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#>        nr       grass           age            sex      \n#>  Min.   :   2   Yes:1991   Min.   :18.00   Male  :1792  \n#>  1st Qu.:1288   No :1699   1st Qu.:26.00   Female:1898  \n#>  Median :2546              Median :38.00                \n#>  Mean   :2536              Mean   :37.48                \n#>  3rd Qu.:3784              3rd Qu.:48.00                \n#>  Max.   :5056              Max.   :59.00\n```\n\n\n:::\n\n```{.r .cell-code}\nskimr::skim(nhanes_2013_clean)\n```\n\n::: {.cell-output-display}\n\nTable: Data summary\n\n|                         |                  |\n|:------------------------|:-----------------|\n|Name                     |nhanes_2013_clean |\n|Number of rows           |3690              |\n|Number of columns        |4                 |\n|_______________________  |                  |\n|Column type frequency:   |                  |\n|factor                   |2                 |\n|numeric                  |2                 |\n|________________________ |                  |\n|Group variables          |None              |\n\n\n**Variable type: factor**\n\n|skim_variable | n_missing| complete_rate|ordered | n_unique|top_counts           |\n|:-------------|---------:|-------------:|:-------|--------:|:--------------------|\n|grass         |         0|             1|FALSE   |        2|Yes: 1991, No: 1699  |\n|sex           |         0|             1|FALSE   |        2|Fem: 1898, Mal: 1792 |\n\n\n**Variable type: numeric**\n\n|skim_variable | n_missing| complete_rate|    mean|      sd| p0|     p25|    p50|     p75| p100|hist  |\n|:-------------|---------:|-------------:|-------:|-------:|--:|-------:|------:|-------:|----:|:-----|\n|nr            |         0|             1| 2535.51| 1450.33|  2| 1288.25| 2546.5| 3784.25| 5056|▇▇▇▇▇ |\n|age           |         0|             1|   37.48|   12.43| 18|   26.00|   38.0|   48.00|   59|▇▆▆▆▆ |\n\n\n:::\n:::\n\n\n:::::{.my-important}\n:::{.my-important-header}\nRecoded `gender` to `sex`\n:::\n::::{.my-important-container}\nIn all R code chunks and text passages I have changed the `gender` category to `sex`. \"Sex\" refers only to biology but \"gender\" is a broader concepts: It refers to identity construction, that include biological, psycho-social, and cultural factors. \n\n> Gender refers to the characteristics of women, men, girls and boys that are socially constructed.  This includes norms, behaviours and roles associated with being a woman, man, girl or boy, as well as relationships with each other. As a social construct, gender varies from society to society and can change over time. ...\n> Gender interacts with but is different from sex, which refers to the different biological and physiological characteristics of females, males and intersex persons, such as chromosomes, hormones and reproductive organs. Gender and sex are related to but different from gender identity. Gender identity refers to a person’s deeply felt, internal and individual experience of gender, which may or may not correspond to the person’s physiology or designated sex at birth.  ([WHO](https://www.who.int/health-topics/gender#tab=tab_1))\n\n\n::::\n:::::\n\n\n\n:::::{.my-note}\n:::{.my-note-header}\nMy learning from the above procedure of data cleaning\n:::\n::::{.my-note-container}\n\n1. It is wrong to put the column name `...1` into accents.\n2. There exists a shortcut for several `dplyr::rename()` but not for `dplyr::na_if()` and `forcats::as_factor()` because here we need to change the column values with the command.\n3. Sequence of commands is important: \n    - Start with the renaming of variables, This is not mandatory but it helps to address the correct column in the following commands.\n    - Recode different missing values to NA’s with `dplyr::na_if()`\n    - Then drop (all) NA’s with `tidyr::drop_na()`.\n4. `forcats::as_factor()` needs to rewrite the column as factor with `dplyr::mutate()` \n\n::::\n:::::\n\n::::\n:::::\n\n\n:::\n:::\n:::\n\n### Bar chart for marijuana use {#sec-chap01-bar-chart-grass}\n\n:::::{.my-exercise}\n:::{.my-exercise-header}\n:::::: {#exr-chap01-bar-chart-grass-percentage}\n: Bar chart (with different bar width ans space) showing the percentage of NHANES participants answering yes and no to marijuana use\n::::::\n:::\n::::{.my-exercise-container}\n\n::: {.panel-tabset}\n\n###### Numbers\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-chap01-compute-grass-percentage}\n: Show frequencies and percentages of NHANES participants answering yes and no to \"Ever used marijuana or hashish\"\n::::::\n:::\n::::{.my-r-code-container}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnhanes_2013_clean <- base::readRDS(\"data/chap01/nhanes_2013_clean.rds\")\n\ntibble::enframe(table(nhanes_2013_clean$grass)) |> \n    dplyr::rename(`Ever used grass or hash` = name, Freq = value) |> \n    dplyr::mutate(Perc = round(100 * Freq / sum(Freq), 2))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> # A tibble: 2 × 3\n#>   `Ever used grass or hash` Freq        Perc       \n#>   <chr>                     <table[1d]> <table[1d]>\n#> 1 Yes                       1991        53.96      \n#> 2 No                        1699        46.04\n```\n\n\n:::\n:::\n\n\n***\n\nInstead of using `name` and `value` I could have used the position of the column numbers `1` and `2` (all names without the \\`-sign.)\n\n::::\n:::::\n\nThis is a manual calculation using the {**tidyverse**} approach: I am sure there are some packages that may facilitate this computation (e.g., {**Janitor**} or {**DescTools**}), but I had difficulties to apply the appropriate functions.\n\n###### Standard\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-chap01-grass-bar-chart-percentage}\n: Percentage of NHANES participants answering yes and no to marijuana use\n::::::\n:::\n::::{.my-r-code-container}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnhanes_2013_clean <- base::readRDS(\"data/chap01/nhanes_2013_clean.rds\")\n\nggplot2::ggplot(nhanes_2013_clean,\n    ggplot2::aes(grass, \n         y = 100 * ggplot2::after_stat(count) /\n             base::sum(ggplot2::after_stat(count)),\n             fill = grass\n        )) +\n    ggplot2::geom_bar() + \n    ggplot2::theme_minimal() +\n    ggplot2::scale_fill_manual(values = c(\"darkgreen\", 'darkred'),\n                    guide = \"none\") +\n    ggplot2::scale_y_continuous(\n        breaks = base::seq(0, 50, by = 10),\n        labels = scales::label_percent(scale = 1)) +\n    ggplot2::labs(x = \"Did you ever use marijuana or hashish?\",\n       y = \"Percent of responses\") \n```\n\n::: {.cell-output-display}\n![Proportion of marijuana use of the participant in the NHANES 2013 survey](01-preparing-data_files/figure-html/fig-grass-bar-chart-percentage-standard-1.png){#fig-grass-bar-chart-percentage-standard width=384}\n:::\n:::\n\n\n\n\n\n\n\n::::\n:::::\n\nThe bars are very thick. I tried with `ggplot2::geom_bar(width = 0.5)` to make them thinner. But I failed. (See @lst-chap01-grass-bar-chart-width)\n\n###### Thin bars\n\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-chap01-grass-bar-chart-thin-bars}\n: Percentage of NHANES participants answering yes and no to marijuana use\n::::::\n:::\n::::{.my-r-code-container}\n\n\n::: {#lst-chap01-grass-bar-chart-width}\n\n::: {.cell}\n\n```{.r .cell-code}\nnhanes_2013_clean <- base::readRDS(\"data/chap01/nhanes_2013_clean.rds\")\n\nggplot2::ggplot(nhanes_2013_clean,\n    ggplot2::aes(grass, \n         y = 100 * ggplot2::after_stat(count) /\n             base::sum(ggplot2::after_stat(count)),\n             fill = grass\n        )) +\n    \n    ## provide thinner bars, standard = 0.9\n    ggplot2::geom_bar(width = 0.5) + \n    \n    ggplot2::theme_minimal() +\n    ggplot2::scale_fill_manual(values = c(\"darkgreen\", 'darkred'),\n                    guide = \"none\") +\n    ggplot2::scale_y_continuous(\n        breaks = base::seq(0, 50, by = 10),\n        labels = scales::label_percent(scale = 1)) +\n    ggplot2::labs(x = \"Did you ever use marijuana or hashish?\",\n       y = \"Percent of responses\") \n```\n\n::: {.cell-output-display}\n![Proportion of marijuana use of the participant in the NHANES 2013 survey](01-preparing-data_files/figure-html/fig-grass-bar-chart-thin-bars-1.png){#fig-grass-bar-chart-thin-bars width=384}\n:::\n:::\n\n\nReducing the thickness of the bars\n\n:::\n\n\n\n::::\n:::::\n\nThe bars are now thin but the space between didn't change. I tried several options with the position argument to [adjust bar width *and* spacing](https://r-graphics.org/recipe-bar-graph-adjust-width):\n\n> Dodging preserves the vertical position of an geom while adjusting the horizontal position. position_dodge() requires the grouping variable to be be specified in the global or geom_* layer. Unlike position_dodge(), position_dodge2() works without a grouping variable in a layer. position_dodge2() works with bars and rectangles, but is particulary useful for arranging box plots, which can have variable widths.\n\nAll my trials with `position_dodge()` and `position_dodge2()` failed. The only two strategies I could reduce the spacing was:\n\n- reducing the width of the graphic (and adapting the title of the graphic to fit into the smaller space)\n- using ggplot2::theme(aspect.ratio = 3/1) as shown in @lst-fig-chap01-grass-bar-chart-solution.\n\n\n###### Solution\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-chap01-grass-bar-chart-solution}\n: Percentage of NHANES participants answering yes and no to marijuana use\n::::::\n:::\n::::{.my-r-code-container}\n\n::: {#lst-fig-chap01-grass-bar-chart-solution}\n\n::: {.cell}\n\n```{.r .cell-code}\nnhanes_2013_clean <- base::readRDS(\"data/chap01/nhanes_2013_clean.rds\")\n\nggplot2::ggplot(nhanes_2013_clean,\n    ggplot2::aes(grass, \n         y = 100 * ggplot2::after_stat(count) /\n             base::sum(ggplot2::after_stat(count)),\n             fill = grass\n        )) +\n    ggplot2::geom_bar() + \n    ggplot2::theme_minimal() +\n    ggplot2::scale_fill_manual(values = c(\"darkgreen\", 'darkred'),\n                    guide = \"none\") +\n    ggplot2::scale_y_continuous(\n        # n.breaks = 10, \n        breaks = base::seq(0, 50, by = 5),\n        labels = scales::label_percent(scale = 1)) +\n    ggplot2::labs(x = \"Did you ever use marijuana or hashish?\",\n       y = \"Percent of responses\") +\n    ggplot2::theme(aspect.ratio = 3/1)\n```\n\n::: {.cell-output-display}\n![Proportion of marijuana use of the participant in the NHANES 2013 survey](01-preparing-data_files/figure-html/fig-grass-bar-chart-solution-1.png){#fig-grass-bar-chart-solution width=384}\n:::\n:::\n\n\nMy solution for creating a bar chart showing the percentage of NHANES participants answering yes and no to marijuana use\n\n:::\n\n:::::{.my-note}\n:::{.my-note-header}\nWhat I learned from creating the bar chart\n:::\n::::{.my-note-container}\n\nEven with this simple example of a bar chart I learned some new options:\n\n1. Use `ggplot2::after_stat()` inside the aesthetics of the first layer to convert frequencies to percentages.\n2. Adding breaks with `n.breaks = <number>` or `breaks = base::seq(from, to, by = <number>)` inside the appropriate scale.\n3. Use the {**scales**} package to add the `%`-sign after the values. As I have already calculated the percentages I need to reduce the default value of `scale = 100` to `scale = 1`.\n4. Use `ggplot2::theme(aspect.ratio = <number>/1)` creating thinner bars *and* reducing the spacing between the bars accordingly. In my case I changed the aspect ratio to `3/1`. A bigger front number compresses the graph, a smaller front number extends it. Aspect ratio of `1/1` is the standard (= no change).\n\n::::\n:::::\n\n::::\n:::::\n\n\n:::\n\n\n::::\n:::::\n\n\n### Marijuana use per age and sex {#sec-chap01-grass-age-sex}\n\n:::::{.my-exercise}\n:::{.my-exercise-header}\n:::::: {#exr-chap01-bar-chart-grass-age-group}\n: Exploring the percentage of NHANES participants answering yes or no to marijuana use by age category and sex\n::::::\n:::\n::::{.my-exercise-container}\n\n::: {.panel-tabset}\n\n###### Summary Table\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-chap01-compute-grass-age-group-percentage}\n: Show frequencies and percentages of NHANES participants answering yes and no to \"Ever used marijuana or hashish\"\n::::::\n:::\n::::{.my-r-code-container}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnhanes_2013_clean <- base::readRDS(\"data/chap01/nhanes_2013_clean.rds\")\n\nnhanes_2013_grouped <- nhanes_2013_clean |> \n    ## cut age into several defined age groups\n    dplyr::mutate(age_cat = base::cut(age,\n                   breaks = c(-Inf, 29, 39, 49, 59),\n                   labels = c(\"18 - 29\", \"30 - 39\", \"40 - 49\", \"50 - 59\"))) |> \n    dplyr::select(grass, sex, age_cat)\n\n\n## older trial, without the knowledge of {gtsummary}\n# tibble::enframe(table(nhanes_2013_grouped$age_cat)) |>  \n#     dplyr::rename(`Ever used grass or hash` = 1, Freq = 2) |> \n#     dplyr::mutate(Perc = round(100 * Freq / sum(Freq), 2))\n\nnhanes_2013_grouped |> \n    labelled::set_variable_labels(\n        grass = \"Ever used grass or hash?\"\n    ) |> \n    gtsummary::tbl_summary(\n        label = list(\n            age_cat = \"Age Category\",\n            sex = \"Sex\"\n        ),\n        type = grass ~ \"categorical\"\n    ) |> \n    gtsummary::bold_labels()\n\nsave_data_file(\"chap01\", nhanes_2013_grouped, \"nhanes_2013_grouped.rds\")\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div id=\"yentzrociy\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>#yentzrociy table {\n  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#yentzrociy thead, #yentzrociy tbody, #yentzrociy tfoot, #yentzrociy tr, #yentzrociy td, #yentzrociy th {\n  border-style: none;\n}\n\n#yentzrociy p {\n  margin: 0;\n  padding: 0;\n}\n\n#yentzrociy .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#yentzrociy .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#yentzrociy .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#yentzrociy .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 3px;\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#yentzrociy .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#yentzrociy .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#yentzrociy .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#yentzrociy .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#yentzrociy .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#yentzrociy .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#yentzrociy .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#yentzrociy .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#yentzrociy .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#yentzrociy .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#yentzrociy .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#yentzrociy .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#yentzrociy .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#yentzrociy .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#yentzrociy .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#yentzrociy .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#yentzrociy .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#yentzrociy .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#yentzrociy .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#yentzrociy .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#yentzrociy .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#yentzrociy .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#yentzrociy .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#yentzrociy .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#yentzrociy .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #D3D3D3;\n}\n\n#yentzrociy .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#yentzrociy .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#yentzrociy .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#yentzrociy .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#yentzrociy .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#yentzrociy .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#yentzrociy .gt_left {\n  text-align: left;\n}\n\n#yentzrociy .gt_center {\n  text-align: center;\n}\n\n#yentzrociy .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#yentzrociy .gt_font_normal {\n  font-weight: normal;\n}\n\n#yentzrociy .gt_font_bold {\n  font-weight: bold;\n}\n\n#yentzrociy .gt_font_italic {\n  font-style: italic;\n}\n\n#yentzrociy .gt_super {\n  font-size: 65%;\n}\n\n#yentzrociy .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#yentzrociy .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#yentzrociy .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#yentzrociy .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#yentzrociy .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#yentzrociy .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#yentzrociy .gt_indent_5 {\n  text-indent: 25px;\n}\n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n  <thead>\n    <tr class=\"gt_col_headings\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"&lt;strong&gt;Characteristic&lt;/strong&gt;\"><strong>Characteristic</strong></th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"&lt;strong&gt;N = 3,690&lt;/strong&gt;&lt;span class=&quot;gt_footnote_marks&quot; style=&quot;white-space:nowrap;font-style:italic;font-weight:normal;&quot;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/span&gt;\"><strong>N = 3,690</strong><span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;\"><sup>1</sup></span></th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><td headers=\"label\" class=\"gt_row gt_left\" style=\"font-weight: bold;\">Ever used grass or hash?</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\"><br /></td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    Yes</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">1,991 (54%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    No</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">1,699 (46%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\" style=\"font-weight: bold;\">Sex</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\"><br /></td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    Male</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">1,792 (49%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    Female</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">1,898 (51%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\" style=\"font-weight: bold;\">Age Category</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\"><br /></td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    18 - 29</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">1,154 (31%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    30 - 39</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">859 (23%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    40 - 49</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">855 (23%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    50 - 59</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">822 (22%)</td></tr>\n  </tbody>\n  \n  <tfoot class=\"gt_footnotes\">\n    <tr>\n      <td class=\"gt_footnote\" colspan=\"2\"><span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;\"><sup>1</sup></span> n (%)</td>\n    </tr>\n  </tfoot>\n</table>\n</div>\n```\n\n:::\n:::\n\n\n***\n\nInstead of using `1` and `2` I could have used the position of the column numbers `name` and `value` (all names without the \\`-sign.)\n\n::::\n:::::\n\nThis is a manual calculation using the {**tidyverse**} approach: I am sure there are some packages that may facilitate this computation (e.g., {**Janitor**} or {**DescTools**}), but I had difficulties to apply the appropriate functions.\n\n###### Age 1\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-chap01-grass-age-group1}\n: Table: Percentage of NHANES participants by age group answering yes and no to marijuana use in percent of total responses\n::::::\n:::\n::::{.my-r-code-container}\n\n\n::: {#tbl-grass-age-group1 .cell tbl-cap='Proportion of marijuana use of the participant by age group in percent of total responses in the NHANES 2013 survey'}\n\n```{.r .cell-code}\nnhanes_2013_grouped <- base::readRDS(\"data/chap01/nhanes_2013_grouped.rds\")\n\nnhanes_2013_grouped |> \n    labelled::set_variable_labels(\n        grass = \"**Ever used grass or hash?**\"\n    ) |> \n    gtsummary::tbl_cross(\n        label = list(\n            age_cat = \"Age Category\",\n            sex = \"Sex\"\n        ),\n        row = age_cat,\n        col = grass,\n        percent = \"cell\"\n    ) |> \n    gtsummary::modify_header(\n      stat_1 = '**Yes**',\n      stat_2 = '**No**',\n      stat_0 = '**Total**'\n    ) |> \n    gtsummary::bold_labels()\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div id=\"ddvrmedbxr\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>#ddvrmedbxr table {\n  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#ddvrmedbxr thead, #ddvrmedbxr tbody, #ddvrmedbxr tfoot, #ddvrmedbxr tr, #ddvrmedbxr td, #ddvrmedbxr th {\n  border-style: none;\n}\n\n#ddvrmedbxr p {\n  margin: 0;\n  padding: 0;\n}\n\n#ddvrmedbxr .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#ddvrmedbxr .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#ddvrmedbxr .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#ddvrmedbxr .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 3px;\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#ddvrmedbxr .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#ddvrmedbxr .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#ddvrmedbxr .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#ddvrmedbxr .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#ddvrmedbxr .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#ddvrmedbxr .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#ddvrmedbxr .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#ddvrmedbxr .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#ddvrmedbxr .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#ddvrmedbxr .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#ddvrmedbxr .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#ddvrmedbxr .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#ddvrmedbxr .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#ddvrmedbxr .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#ddvrmedbxr .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#ddvrmedbxr .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#ddvrmedbxr .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#ddvrmedbxr .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#ddvrmedbxr .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#ddvrmedbxr .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#ddvrmedbxr .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#ddvrmedbxr .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#ddvrmedbxr .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#ddvrmedbxr .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#ddvrmedbxr .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #D3D3D3;\n}\n\n#ddvrmedbxr .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#ddvrmedbxr .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#ddvrmedbxr .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#ddvrmedbxr .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#ddvrmedbxr .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#ddvrmedbxr .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#ddvrmedbxr .gt_left {\n  text-align: left;\n}\n\n#ddvrmedbxr .gt_center {\n  text-align: center;\n}\n\n#ddvrmedbxr .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#ddvrmedbxr .gt_font_normal {\n  font-weight: normal;\n}\n\n#ddvrmedbxr .gt_font_bold {\n  font-weight: bold;\n}\n\n#ddvrmedbxr .gt_font_italic {\n  font-style: italic;\n}\n\n#ddvrmedbxr .gt_super {\n  font-size: 65%;\n}\n\n#ddvrmedbxr .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#ddvrmedbxr .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#ddvrmedbxr .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#ddvrmedbxr .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#ddvrmedbxr .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#ddvrmedbxr .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#ddvrmedbxr .gt_indent_5 {\n  text-indent: 25px;\n}\n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n  <thead>\n    <tr class=\"gt_col_headings gt_spanner_row\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"2\" colspan=\"1\" scope=\"col\" id=\"\"></th>\n      <th class=\"gt_center gt_columns_top_border gt_column_spanner_outer\" rowspan=\"1\" colspan=\"2\" scope=\"colgroup\" id=\"&lt;strong&gt;Ever used grass or hash?&lt;/strong&gt;\">\n        <span class=\"gt_column_spanner\"><strong>Ever used grass or hash?</strong></span>\n      </th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"2\" colspan=\"1\" scope=\"col\" id=\"&lt;strong&gt;Total&lt;/strong&gt;\"><strong>Total</strong></th>\n    </tr>\n    <tr class=\"gt_col_headings\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"&lt;strong&gt;Yes&lt;/strong&gt;\"><strong>Yes</strong></th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"&lt;strong&gt;No&lt;/strong&gt;\"><strong>No</strong></th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><td headers=\"label\" class=\"gt_row gt_left\" style=\"font-weight: bold;\">Age Category</td>\n<td headers=\"stat_1\" class=\"gt_row gt_center\"><br /></td>\n<td headers=\"stat_2\" class=\"gt_row gt_center\"><br /></td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\"><br /></td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    18 - 29</td>\n<td headers=\"stat_1\" class=\"gt_row gt_center\">662 (18%)</td>\n<td headers=\"stat_2\" class=\"gt_row gt_center\">492 (13%)</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">1,154 (31%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    30 - 39</td>\n<td headers=\"stat_1\" class=\"gt_row gt_center\">466 (13%)</td>\n<td headers=\"stat_2\" class=\"gt_row gt_center\">393 (11%)</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">859 (23%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    40 - 49</td>\n<td headers=\"stat_1\" class=\"gt_row gt_center\">405 (11%)</td>\n<td headers=\"stat_2\" class=\"gt_row gt_center\">450 (12%)</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">855 (23%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    50 - 59</td>\n<td headers=\"stat_1\" class=\"gt_row gt_center\">458 (12%)</td>\n<td headers=\"stat_2\" class=\"gt_row gt_center\">364 (9.9%)</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">822 (22%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\" style=\"font-weight: bold;\">Total</td>\n<td headers=\"stat_1\" class=\"gt_row gt_center\">1,991 (54%)</td>\n<td headers=\"stat_2\" class=\"gt_row gt_center\">1,699 (46%)</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">3,690 (100%)</td></tr>\n  </tbody>\n  \n  \n</table>\n</div>\n```\n\n:::\n:::\n\n\n***\n\nI have required {**gtsummary**} to calculate the percentage with one decimal place. The reason was that the graphic did not match the table. For instance: Without decimal places the \"No\"-proportion of the age group 18-29 was with 13% equal to the \"Yes\"-proportion of the age group 30-39. But in the figure these two bars have a different height. The reason was a rounding error: Both values 13.3% and 12.6% were rounded to 13%. But in the figure one could see the difference of 0.7% in the length of the bars.\n\n::::\n:::::\n\n\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-chap01-fig-grass-age-group1}\n: Figure: Percentage of NHANES participants by age group answering yes and no to marijuana use in percent of total responses\n::::::\n:::\n::::{.my-r-code-container}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## age groups bar chart 1 ########\nnhanes_2013_grouped |> \n    ggplot2::ggplot(ggplot2::aes(\n        x = age_cat, \n        fill = grass,\n         y = 100 * ggplot2::after_stat(count) / \n             base::sum(ggplot2::after_stat(count))\n        )\n    ) + \n    ggplot2::geom_bar(position = 'dodge') +    \n    ggplot2::theme_minimal() +\n    ggplot2::scale_fill_manual(values = c('darkgreen', 'darkred'),\n                    name = \"Ever used\\ngrass or hash?\") +\n    ggplot2::labs(x = \"Age group (in years)\",\n       y = \"Percent of total responses\")\n```\n\n::: {.cell-output-display}\n![Percentage of NHANES participants by age group answering yes and no to marijuana use in percent of total responses](01-preparing-data_files/figure-html/fig-grass-age-group1-1.png){#fig-grass-age-group1 width=672}\n:::\n:::\n\n\n\n::::\n:::::\n\n\n###### Age 2\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-chap01-grass-age-group2}\n: Table:: Percentage of NHANES 2013 survey participants by age group answering yes and no to marijuana use in percent of age group\n::::::\n:::\n::::{.my-r-code-container}\n\n\n::: {#tbl-grass-age-group2 .cell tbl-cap='Proportion of marijuana use of the participant by age group in the NHANES 2013 survey'}\n\n```{.r .cell-code}\nnhanes_2013_grouped <- base::readRDS(\"data/chap01/nhanes_2013_grouped.rds\")\n\nnhanes_2013_grouped |> \n    labelled::set_variable_labels(\n            grass = \"**Ever used grass or hash?**\"\n        ) |> \n    gtsummary::tbl_cross(\n        label = list(\n            age_cat = \"Age Category\",\n            sex = \"Sex\"\n        ),\n        row = age_cat,\n        col = grass,\n        percent = \"row\",\n        margin = \"column\",\n        digits = c(0, 1)\n    ) |> \n    gtsummary::modify_header(\n      stat_1 = '**Yes**',\n      stat_2 = '**No**',\n      stat_0 = '**Total**'\n    ) |> \n    gtsummary::bold_labels()\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div id=\"exnevbrxqr\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>#exnevbrxqr table {\n  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#exnevbrxqr thead, #exnevbrxqr tbody, #exnevbrxqr tfoot, #exnevbrxqr tr, #exnevbrxqr td, #exnevbrxqr th {\n  border-style: none;\n}\n\n#exnevbrxqr p {\n  margin: 0;\n  padding: 0;\n}\n\n#exnevbrxqr .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#exnevbrxqr .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#exnevbrxqr .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#exnevbrxqr .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 3px;\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#exnevbrxqr .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#exnevbrxqr .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#exnevbrxqr .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#exnevbrxqr .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#exnevbrxqr .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#exnevbrxqr .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#exnevbrxqr .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#exnevbrxqr .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#exnevbrxqr .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#exnevbrxqr .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#exnevbrxqr .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#exnevbrxqr .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#exnevbrxqr .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#exnevbrxqr .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#exnevbrxqr .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#exnevbrxqr .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#exnevbrxqr .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#exnevbrxqr .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#exnevbrxqr .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#exnevbrxqr .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#exnevbrxqr .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#exnevbrxqr .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#exnevbrxqr .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#exnevbrxqr .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#exnevbrxqr .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #D3D3D3;\n}\n\n#exnevbrxqr .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#exnevbrxqr .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#exnevbrxqr .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#exnevbrxqr .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#exnevbrxqr .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#exnevbrxqr .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#exnevbrxqr .gt_left {\n  text-align: left;\n}\n\n#exnevbrxqr .gt_center {\n  text-align: center;\n}\n\n#exnevbrxqr .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#exnevbrxqr .gt_font_normal {\n  font-weight: normal;\n}\n\n#exnevbrxqr .gt_font_bold {\n  font-weight: bold;\n}\n\n#exnevbrxqr .gt_font_italic {\n  font-style: italic;\n}\n\n#exnevbrxqr .gt_super {\n  font-size: 65%;\n}\n\n#exnevbrxqr .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#exnevbrxqr .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#exnevbrxqr .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#exnevbrxqr .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#exnevbrxqr .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#exnevbrxqr .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#exnevbrxqr .gt_indent_5 {\n  text-indent: 25px;\n}\n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n  <thead>\n    <tr class=\"gt_col_headings gt_spanner_row\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"2\" colspan=\"1\" scope=\"col\" id=\"\"></th>\n      <th class=\"gt_center gt_columns_top_border gt_column_spanner_outer\" rowspan=\"1\" colspan=\"2\" scope=\"colgroup\" id=\"&lt;strong&gt;Ever used grass or hash?&lt;/strong&gt;\">\n        <span class=\"gt_column_spanner\"><strong>Ever used grass or hash?</strong></span>\n      </th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"2\" colspan=\"1\" scope=\"col\" id=\"&lt;strong&gt;Total&lt;/strong&gt;\"><strong>Total</strong></th>\n    </tr>\n    <tr class=\"gt_col_headings\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"&lt;strong&gt;Yes&lt;/strong&gt;\"><strong>Yes</strong></th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"&lt;strong&gt;No&lt;/strong&gt;\"><strong>No</strong></th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><td headers=\"label\" class=\"gt_row gt_left\" style=\"font-weight: bold;\">Age Category</td>\n<td headers=\"stat_1\" class=\"gt_row gt_center\"><br /></td>\n<td headers=\"stat_2\" class=\"gt_row gt_center\"><br /></td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\"><br /></td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    18 - 29</td>\n<td headers=\"stat_1\" class=\"gt_row gt_center\">662 (57.4%)</td>\n<td headers=\"stat_2\" class=\"gt_row gt_center\">492 (42.6%)</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">1,154 (100.0%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    30 - 39</td>\n<td headers=\"stat_1\" class=\"gt_row gt_center\">466 (54.2%)</td>\n<td headers=\"stat_2\" class=\"gt_row gt_center\">393 (45.8%)</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">859 (100.0%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    40 - 49</td>\n<td headers=\"stat_1\" class=\"gt_row gt_center\">405 (47.4%)</td>\n<td headers=\"stat_2\" class=\"gt_row gt_center\">450 (52.6%)</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">855 (100.0%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    50 - 59</td>\n<td headers=\"stat_1\" class=\"gt_row gt_center\">458 (55.7%)</td>\n<td headers=\"stat_2\" class=\"gt_row gt_center\">364 (44.3%)</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">822 (100.0%)</td></tr>\n  </tbody>\n  \n  \n</table>\n</div>\n```\n\n:::\n:::\n\n\n::::\n:::::\n\n\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-fig-grass-age-group2}\n: Figure: Percentage of NHANES participants of the 2013 survey answering yes and no to marijuana use in percent of age group\n::::::\n:::\n::::{.my-r-code-container}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## age groups bar chart 2 ########\nnhanes_2013_grouped |> \n  dplyr::group_by(grass, age_cat) |>\n  dplyr::count() |> \n  dplyr::group_by(age_cat) |> \n  dplyr::mutate(perc_grass = 100 * n / base::sum(n)) |> \n  ggplot2::ggplot(ggplot2::aes(x = age_cat, fill = grass,\n             y = perc_grass)) +\n  ggplot2::geom_col(position = 'dodge') +\n  ggplot2::theme_minimal() +\n  ggplot2::scale_fill_manual(values = c('darkgreen', 'darkred'),\n                    name = \"Ever used\\ngrass or hash?\") +\n  ggplot2::labs(x = \"Age group (in years)\",\n       y = \"Percent of responses in age group\")\n```\n\n::: {.cell-output-display}\n![Percentage of NHANES participants of the 2013 survey answering yes and no to marijuana use in percent of age group](01-preparing-data_files/figure-html/fig-grass-age-group2-1.png){#fig-grass-age-group2 width=672}\n:::\n:::\n\n\n\n::::\n:::::\n\n###### Age & Sex\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-chap01-grass-age-sex}\n: Percentage of NHANES participants 2013 survey by age group and sex answering yes and no to marijuana use\n::::::\n:::\n::::{.my-r-code-container}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnhanes_2013_grouped <- \n    base::readRDS(\"data/chap01/nhanes_2013_grouped.rds\")\n\n## age and sex bar chart ########\nnhanes_2013_grouped |> \n  dplyr::group_by(grass, age_cat, sex) |> \n  dplyr::count() |> \n  dplyr::group_by(age_cat, sex) |> \n  dplyr::mutate(perc_grass_2 = 100 * n / base::sum(n)) |> \n  ggplot2::ggplot(ggplot2::aes(\n      x = age_cat, \n      y = perc_grass_2,\n      fill = sex)) +\n  ggplot2::geom_col(position = 'dodge') +\n  ggplot2::theme_minimal() +\n  ggplot2::scale_fill_manual(values = c('#f98e31', '#730b6d'),\n                             name = \"sex\") +\n  ggplot2::labs(\n          x = \"Age group (in years)\",\n          y = \"Percent of males/females that used marijuana or hashish\"\n      )\n```\n\n::: {.cell-output-display}\n![Proportion of marijuana use of the participant by age group and sex in the NHANES 2013 survey](01-preparing-data_files/figure-html/fig-grass-age-sex-1.png){#fig-grass-age-sex width=672}\n:::\n:::\n\n***\n\nWith the exception of the oldest age group the graphic shows that the proportion of marijuana / hashish user increases with younger people. One possible explanation for the untypical high use in the oldest age group could be that people between 50-59 of the 2013 survey were born between 1954-1963 and were young adults during the time of the [Flower Power](https://en.wikipedia.org/wiki/Flower_power) generation part of the [counterculture of the 1960s](Counterculture of the 1960s)-1970s.\n\n\n::::\n:::::\n\n@fig-grass-age-sex is a little difficult to interpret. Both bars colors shows the proportion of \"Yes\"-respondents in the appropriate age group. For instance: About 62% of males and about 51% of women of the age group 18-29 said \"Yes\". \n\nTherefore the bars to not sum up to 100%. The figures shows only the \"Yes\" part of the dichotomous `grass` variable for men and women in a certain age group. The other \"No\" part is missing.\n\nTo distinguish the sex colors in @fig-grass-age-sex from the Yes/No colors in @fig-grass-age-group1 and @fig-grass-age-group2 I chose at first some kind of blue for men and red for females. But I learned from [An alternative to pink & blue: Colors for gender data](https://blog.datawrapper.de/gendercolor/) that one should avoid this stereotypical colors. \n\n> In our western culture, these colors come with the whole gender stereotype baggage. Pink means weak, shy girls who play with dolls and don’t deserve as much as boys. Blue stands for boys who need to be strong & rough. **When we create a chart with pink & blue, we endorse gender stereotypes**.\n\n\n\n\n\n:::\n\n::::\n:::::\n\n### Data interpretation {#sec-chap01-data-interpretation}\n\n\n::: {#rep-chap01-gss-nhanes .callout-tip}\n\n###### Marijuana usage and opinions to legalize it (<a class='glossary' title='A large survey of a sample of people in the United States conducted regularly since 1972; the General Social Survey is abbreviated GSS and is conducted by the National Opinion Research Center at the University of Chicago. (Harris, Glossary)'>GSS</a> and <a class='glossary' title='The National Health and Nutrition Examination Survey (NHANES) is a program of studies designed to assess the health and nutritional status of adults and children in the United States. The survey is unique in that it combines interviews and physical examinations. (NHANES)'>NHANES</a> data)\n\n@fig-chap01-repr-fig-1-2 with <a class='glossary' title='A large survey of a sample of people in the United States conducted regularly since 1972; the General Social Survey is abbreviated GSS and is conducted by the National Opinion Research Center at the University of Chicago. (Harris, Glossary)'>GSS</a> data 2016 shows that younger people support the legalizing of marijuana. Therefore we can expect that in the future the proportion of people that approve legalizing will increase. With a small project on my own I have backed up this thesis. @fig-gss-grass-timeline demonstrates that the percentage of supporters has increased very strongly in the last years and has now hit the 70% mark. This trend is very clear even I have not distinguished in the longitudinal study between different age groups.\n\nThe graphs of the <a class='glossary' title='The National Health and Nutrition Examination Survey (NHANES) is a program of studies designed to assess the health and nutritional status of adults and children in the United States. The survey is unique in that it combines interviews and physical examinations. (NHANES)'>NHANES</a> 2013 data in @fig-grass-age-group1 and fig-grass-age-group2 show that the highest proportion of people ever used marijuana or hashish lies in youngest age. The age trend is not very clear, because we have only figures for person equal or under 59 years. (Here would be necessary another small project with longitudinal analysis including newer data.)\n\nWith the exception of the age group 40-49 the proportion of males ever used in their respective age group is higher than the percentage of women. (See @fig-grass-age-sex). But this is only a snapshot and difficult to interpret. Another possible thesis could be that there is a tiny upward trend from old top young in marijuana use. One possible explanation for the untypical higher use in the oldest age group could be that people between 50-59 of the 2013 survey were born between 1954-1963 and were young adults during the time of the [Flower Power](https://en.wikipedia.org/wiki/Flower_power) generation part of the [counterculture of the 1960s](Counterculture of the 1960s)-1970s.\n\n\n\n\n:::\n\n***\n\n\n## Get the GSS data {#sec-chap01-get-gss-data}\n\n### Working with the GSS\n\nI am very interested how to get <a class='glossary' title='A large survey of a sample of people in the United States conducted regularly since 1972; the General Social Survey is abbreviated GSS and is conducted by the National Opinion Research Center at the University of Chicago. (Harris, Glossary)'>GSS</a> data directly from\nthe GSS website, so that I could work on interesting research questions\nmyself.\n\nI have found several resources helping to work with the\n<a class='glossary' title='A large survey of a sample of people in the United States conducted regularly since 1972; the General Social Survey is abbreviated GSS and is conducted by the National Opinion Research Center at the University of Chicago. (Harris, Glossary)'>GSS</a>. The most important one is the {**gssr**} package (see: @pak-gssr)\n\n::: my-resource\n::: my-resource-header\nasdfree: Analyze Survey Data for Free\n:::\n\n::: my-resource-container\n\n[Analyze Survey Data for Free](http://asdfree.com/) is a bookdown\nwebsite by [Anthony\nDamico](https://www.youtube.com/@anthonyjosephdamico/playlists) with\ncurrently 64 locations to grab free survey data. As expected it features\nalso a [description of the\nGSS](http://asdfree.com/general-social-survey-gss.html) including\nanalysis examples with the {**survey**} package and --- especially\nimportant for my purpose here --- {**lodown**}, a [package on GitHub](https://github.com/ajdamico/lodown) that is not maintained anymore.\n\n:::\n:::\n\n@def-chap01-get-gss-data features five different strategies to download\nGSS data:\n\n1.  Download extract by using the GSS Data Explorer --- Tab: \"Explorer\"\n2.  Download files manually --- Tab: \"by hand\"\n3.  Download files programmatically --- Tab: \"automated\"\n4.  Download via the {**lodown**} package --- Tab: \"lodown\"\n5.  Download via the {**gssr**} package --- Tab: \"gssr\"\n\n### Five strategies to get GSS data\n\n::: my-experiment\n::: my-experiment-header\n::: {#def-chap01-get-gss-data}\n: How to get the General Social Survey (GSS) data\n:::\n:::\n\n::: my-experiment-container\n::: panel-tabset\n###### Explore\n\nTo use all the facilities of the GSS Data Explorer (tagging, tabulating,\ndata extracting) you need to register for a free account. The good thing\nis: This is a onetime procedure.\n\n::: my-procedure\n::: my-procedure-header\n::: {#prp-chap01-get-gss-data-explorer}\n: Downloading data extracts with the GSS Data Explorer\n:::\n:::\n\n::: my-procedure-container\n1.  Create a free account for the [GSS Data\n    Explorer](https://gssdataexplorer.norc.org/), a tool that allows to\n    browse the data that have been collected in the surveys.\n    -   Fill out the form\n    -   Wait for an email with the verification code\n    -   Confirm the registration with the verification code\n2.  Go for the tour to learn the interface (Link \"Tour Guide\")\n3.  Now you are ready to follow the advises in the slides. If you prefer\n    you can view the slide show in a [standalone\n    browser](https://petzi53.quarto.pub/gss-data-explorer/#/title-slide).\n:::\n:::\n\n<iframe width=\"650\" height=\"400\" class=\"slide-deck\" src=\"https://petzi53.quarto.pub/gss-data-explorer/#/title-slide\">\n\n</iframe>\n\nAs one can see this is a somewhat cumbersome procedure to download the\ndesired data. Following the proposed strategies in the other tabs are\nmuch easier for importing GSS data. But using the GSS Data Explorer is\nvery helpful to *explore* the dataset. Apply the first three steps of\nthe above list to find the correct variable names, to read the exact\nwording of the question asked and to inspect the different codes that\nare used for the variable. Otherwise you have to skim the more than 700\npages of the GSS codebook.😭\n\n###### by hand\n\nAnother approach is to download the complete dataset (or all variables\nof those years you are interested in) and manage the data in such a way\nthat it can be easily used for your research question. (See\n@sec-chap01-data-wrangling)\n\n::: my-procedure\n::: my-procedure-header\n::: {#prp-chap01-get-gss-data-manually}\n: Download GSS individual year data sets (cross-section only)\n:::\n:::\n\n::: my-procedure-container\n1.  Visit <https://gss.norc.org/Get-The-Data> and choose under the\n    section \"Download the Data\" the \"STATA\" format. I read elsewhere\n    that this is the preferred format to convert the data into R with\n    the {**haven**} package.\n2.  From the [STATA-page](https://gss.norc.org/get-the-data/stata)\n    choose the appropriate link (`2016` in our case) under the section\n    \"Individual Year Data Sets (cross-section only)\" and download the\n    file `2016_stata.zip` (994 MB) into your preferred folder on your\n    hard disk. After you extract the .zip file you will get the STAT\n    file `GSS2016.dta` (4.4 MB).\n3.  You can now apply @cnj-chap01-import-stata-data.\n:::\n:::\n\n::: my-r-code\n::: my-r-code-header\n::: {#cnj-chap01-import-stata-data}\n: Import STATA GSS 2016 file into R using (**haven**)\n:::\n:::\n\n::: my-r-code-container\n::: {#lst-chap01-import-stata-2016-file}\n\n::: {.cell}\n\n```{.r .cell-code}\n## run only once (manually) ###########\ngss_2016_man <- haven::read_dta(\"data/chap01/GSS2016.dta\")\nsave_data_file(\"chap01\", gss_2016_man, \"gss_2016_man.rds\")\n```\n:::\n\n\n(*This R code chunk has no visible output*)\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngss_2016_man <- \n    base::readRDS(\"data/chap01/gss_2016_man.rds\")\n\ngss_2016_man |>\n    dplyr::select(c(age, grass)) |> \n    glance_data(N = 8, seed = 2016)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> # A tibble: 10 × 3\n#>      obs age       grass                      \n#>    <int> <dbl+lbl> <dbl+lbl>                  \n#>  1     1 47        NA(i) [iap]                \n#>  2   172 27            1 [should be legal]    \n#>  3   562 70            2 [should not be legal]\n#>  4   898 60            2 [should not be legal]\n#>  5  1019 30            1 [should be legal]    \n#>  6  1176 80            2 [should not be legal]\n#>  7  1505 53        NA(i) [iap]                \n#>  8  1911 54            2 [should not be legal]\n#>  9  2622 62        NA(i) [iap]                \n#> 10  2867 72            2 [should not be legal]\n```\n\n\n:::\n:::\n\n\nImport STATA GSS 2016 file into R using (**haven**) and glance at the\ndata\n:::\n\n::: my-important\n::: my-important-header\n{**haven**} imports data as labelled vectors\n:::\n\n::: my-important-container\nThe data structure we have found here is very different from the Excel\ndata file provided with the book.\n:::\n:::\n\nLabelled vectors is a completely new feature for me. I learned that\nvalue labels and other metadata tags that are commonly seen when working\nwith other statistical software like SAS, STATA or SPSS (cf. [Survey\nResearch and Datasets in\nR](https://socialresearchcentre.github.io/r_survey_datasets/), here\nsection 3 [Labelled\nData](https://socialresearchcentre.github.io/r_survey_datasets/labelled-data.html))\n\n> A labelled vector is a common data structure in other statistical\n> environments, allowing you to assign text labels to specific values.\n> This class makes it possible to import such labelled vectors in to R\n> without loss of fidelity. ([Create a labelled\n> vector](https://haven.tidyverse.org/reference/labelled.html))\n\nI will go into more details in @sec-chap01-labelled-data. The important\nthing here is to notice that the variable `grass` has labelled values\nthat explain the short code. Code `1` represents the respondent option\nthat marijuana should be legalized and `2` the opposite. We also learn\nthat there is with `NA i` a special kind of `NA` value:\n\n> .i: Inapplicable (IAP). Respondents who are not asked to answer a\n> specific question are assigned to IAP. (See [Alert on the STATA\n> download page](https://gss.norc.org/get-the-data/stata))\n\nOn the website we see under the \"Alert\" section that there other kind of\nNA’s as well. And the 2022 GSS Codebook describes still other, less\ncommon missing values.\n:::\n:::\n\n**Additional comments**\n\nI chose for file saving the `base::saveRDS()` option (and not\n`base::save()`) because when later reading into R again with\n`base::readRDS()` it does not overwrite a variable with the same name\nrespectively I can assign the file to another variable name.\n\n###### automated\n\n::: my-r-code\n::: my-r-code-header\n::: {#cnj-chap01-get-gss2016-data}\n: Get year 2016 of GSS data set with `base::download.file()`\n:::\n:::\n\n::: my-r-code-container\n::: {#lst-chap01-get-gss2016-automated}\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"show\"}\n## run only once (manually) ###########\ntemp <- base::tempfile()\nutils::download.file(\"https://gss.norc.org/documents/stata/2016_stata.zip\",temp)\ngss_2016_aut <- haven::read_dta(base::unz(temp, \"GSS2016.dta\"))\nbase::unlink(temp)\nsave_data_file(\"chap01\", gss_2016_aut, \"gss_2016_aut.rds\")\n```\n:::\n\n\nGet year 2016 of GSS data set with `base::download.file()`\n:::\n\n(*This R code chunk has no visible output*)\n\nThis time we have the file downloaded programmatically which is much\nbetter in term of reproducibility. We don't need now to import the data\n{**haven**} but can call base::readRDS().\n\n::: {#lst-chap01-read-rds-data}\n\n::: {.cell}\n\n```{.r .cell-code}\ngss_2016_aut <- base::readRDS(\"data/chap01/gss_2016_aut.rds\")\n\ngss_2016_aut |> \n    dplyr::select(c(age, grass)) |> \n    glance_data(N = 8, seed = 2016)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> # A tibble: 10 × 3\n#>      obs age       grass                      \n#>    <int> <dbl+lbl> <dbl+lbl>                  \n#>  1     1 47        NA(i) [iap]                \n#>  2   172 27            1 [should be legal]    \n#>  3   562 70            2 [should not be legal]\n#>  4   898 60            2 [should not be legal]\n#>  5  1019 30            1 [should be legal]    \n#>  6  1176 80            2 [should not be legal]\n#>  7  1505 53        NA(i) [iap]                \n#>  8  1911 54            2 [should not be legal]\n#>  9  2622 62        NA(i) [iap]                \n#> 10  2867 72            2 [should not be legal]\n```\n\n\n:::\n:::\n\n\nRead previously saved `.rds` file into R and glance at the data\n:::\n:::\n:::\n\nData now have a more R like appearance, even if the variable classes\nwith <hvn_lbll> \"*haven_labelled, vctrs_vctr, double*\" are unfamiliar. But we\nhave now lost some information, especially we have to consult the\ncodebook to know what the codes `1` and `2` mean.\n\n###### lodown\n\nThe following strategy I have taken from the bookdown book [Analyze\nSurvey Data for Free](http://asdfree.com/) (asdf.com) It gives step by\nstep instructions to explore public <a class='glossary' title='Microdata are unit-level data obtained from sample surveys, censuses, and administrative systems. They provide information about characteristics of individual people or entities such as households, business enterprises, facilities, farms or even geographical areas such as villages or towns. They allow in-depth understanding of socio-economic issues by studying relationships and interactions among phenomena. Microdata are thus key to designing projects and formulating policies, targeting interventions and monitoring and measuring the impact and results of projects, interventions and policies. (The World Bank)'>Microdata</a>. Here I\nrefer to the <a class='glossary' title='A large survey of a sample of people in the United States conducted regularly since 1972; the General Social Survey is abbreviated GSS and is conducted by the National Opinion Research Center at the University of Chicago. (Harris, Glossary)'>General Social Survey</a> (GSS) section of the\nbook.\n\n::: my-procedure\n::: my-procedure-header\n::: {#prp-chap01-get-gss2016-lodown}\n: Get the GSS data with the {**lodown**} package and glance at the data\n:::\n:::\n\n::: my-procedure-container\nWorking with {**lodown**} is a three step procedure:\n\n1.  Retrieve a listing of all available extracts for the GSS data.\n2.  Choose what files you want to download. In our case data for the\n    year 2016.\n3.  Download the specified dataset in the offered SPSS file format, but\n    {**lodown**} produces with `.rds` a native R file format with the\n    name `2016.rds`.\n:::\n:::\n\nThe second step has to be done manually but I have the result of my\ninspection already integrated in @lst-chap01-get-gss2016-lodown.\n\nAs additional steps I renamed the downloaded file, so that I can\ndistinguish it from similar files of the other approaches. Finally I\nglanced at the `grass` and `age` data.\n\n::: my-r-code\n::: my-r-code-header\n::: {#cnj-chap01-get-gss2016-lodown}\n: Get GSS data via {**lodown**} package\n:::\n:::\n\n::: my-r-code-container\n::: {#lst-chap01-get-gss2016-lodown}\n\n::: {.cell}\n\n```{.r .cell-code}\n## can't suppress messages, tried several options\n\n## run only once (manually) ############\nmy_folder <- base::paste0(here::here(), \"/data-raw\")\n\n# (1) retrieve a listing of all available extracts for the GSS data\ngss_cat <- lodown::get_catalog(data_name = \"gss\",\n                               output_dir = my_folder,\n                               \"GSS\") |> \n## (2) choose the catalog part to download\n    dplyr::filter(\n        output_filename == base::paste0(my_folder, \"/2016.rds\"))\n\n## (3) download the GSS microdata as 2016.rds\nlodown::lodown(\"gss\" , gss_cat)\n\n## rename dataset to distinguish from other download approaches\nold_filename <- base::paste0(my_folder, \"/2016.rds\")\nnew_filename <- base::paste0(my_folder, \"/gss_2016_cat.rds\")\nbase::file.rename(from = old_filename, to = new_filename)\n```\n:::\n\n\n(*This R code chunk has no visible output beside the warning message.*)\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## load and glance at data\ngss_2016_cat <- base::readRDS(\"data/chap01/gss_2016_cat.rds\")\ngss_2016_cat |> \n    dplyr::select(c(age, grass)) |> \n    glance_data(N = 8, seed = 2016)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#>     obs age grass\n#> 1     1  47    NA\n#> 2   172  27     1\n#> 3   562  70     2\n#> 4   898  60     2\n#> 5  1019  30     1\n#> 6  1176  80     2\n#> 7  1505  53    NA\n#> 8  1911  54     2\n#> 9  2622  62    NA\n#> 10 2867  72     2\n```\n\n\n:::\n:::\n\n\nGet GSS data for the year 2016 via the {**lodown**} package\n:::\n:::\n:::\n\nThe result is a pure `.rds` file where the columns are still of class\n\"*haven_labelled, vctrs_vctr, double*\" as in @lst-chap01-read-rds-data.\n\n###### gssr\n\nFinally I will download the 2016 data with the help of the {**gssr**}\npackage (see @pak-gssr). This takes some minutes. At first I missed the vignette, so I\nhad to download the package again with the additional argument\n`build_vignettes = TRUE`. Whereas the vignette explains how to analyse\ndata the GitHub is very helpful how to get the desired data.\n\n> You can quickly get the data for any single GSS year by using\n> `gssr::gss_get_yr()` to download the data file from NORC and put it\n> directly into a tibble.\n\nAfter downloaded the file we can --- as in the other tabs already done\n--- load the file and glance at the grass/age data.\n\n::: my-r-code\n::: my-r-code-header\n::: {#cnj-chap01-get-gss2016-gssr}\n: Get GSS 2016 Year Data Set (cross-section only) and glance at the data\n:::\n:::\n\n::: my-r-code-container\n::: {#lst-chap01-get-gss2016-gssr-and-glance-at-data}\n\n::: {.cell}\n\n```{.r .cell-code}\n## run only once (manually) ####################\ngss_2016_gssr <- gssr::gss_get_yr(year = 2016)\ngss_2016_gssr <- gss_2016_gssr |>\n   dplyr::select(c(age, grass))\n\nsave_data_file(\"chap01\", gss_2016_gssr, \"gss_2016_gssr.rds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n## load data ####################\ngss_2016_gssr <- base::readRDS(\"data/chap01/gss_2016_gssr.rds\")\n\n## glance at data\ngss_2016_gssr |> \n    glance_data(N = 8, seed = 2016)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> # A tibble: 10 × 3\n#>      obs age       grass                      \n#>    <int> <dbl+lbl> <dbl+lbl>                  \n#>  1     1 47        NA(i) [iap]                \n#>  2   172 27            1 [should be legal]    \n#>  3   562 70            2 [should not be legal]\n#>  4   898 60            2 [should not be legal]\n#>  5  1019 30            1 [should be legal]    \n#>  6  1176 80            2 [should not be legal]\n#>  7  1505 53        NA(i) [iap]                \n#>  8  1911 54            2 [should not be legal]\n#>  9  2622 62        NA(i) [iap]                \n#> 10  2867 72            2 [should not be legal]\n```\n\n\n:::\n:::\n\n\nGet GSS 2016 Year Data Set (cross-section only) and glance at the data\n:::\n:::\n:::\n\nDownloading data with {**gssr**} results in exactly the same format as\nin listing @lst-chap01-import-stata-2016-file from the manual download.\nBut it has now the advantages from the {**gssr**} package. For instance\nwith the integrated help it is much easier to\n\n-   find the variables\n-   to read the question text of the variable\n-   to see in which year the questions was asked\n-   what the code - including the different types of NA’s mean\n:::\n:::\n:::\n\n\n::: my-important\n::: my-important-header\nSix different approaches to get the GSS data\n:::\n\n::: my-important-container\nUsing the {**gssr**} packages seems to me by far the best approach.\n:::\n:::\n\n## Working with Labelled Data {#sec-chap01-labelled-data}\n\n### How to work with labelled data? --- Resources\n\nDuring downloading GSS data I mentioned that {**haven**} imports data as\nlabelled vectors. As a completely new feature for me I looked at the\nInternet for their advantages and how to work with them. I found four\nimportant resources:\n\n::: my-resource\n::: my-resource-header\nHow to work with labelled data?\n:::\n\n::: my-resource-container\n\n[Survey Research Datasets and\nR](https://socialresearchcentre.github.io/r_survey_datasets/)\n\nA book accompanying a workshop delivered for the 7th Biennial\n<a class='glossary' title='Australian Consortium for Social and Political Research Inc. oganizes conferences and delivers course. (ACSPRI)'>ACSPRI</a> Social Science Methodology Conference. It\nprovides a practical demonstration of several packages for accessing and\nworking with survey data, associated metadata and official statistics in\nR. The short book demonstrates\n\n-   Working with external data sources from common statistical packages\n    (SPSS, SAS, Stata, Excel) and their quirks\n-   Easily working with categorical data in R with the {**labelled**} R\n    package\n-   Accessing external databases in an R native way using {**DBI**} and\n    {**dbplyr**} (The [DBI package](https://dbi.r-dbi.org/) helps\n    connecting R to database management systems (DBMS).\n    [dbplyr](https://dbplyr.tidyverse.org/) is a {**dplyr**} backend for\n    data bases)\n-   Accessing publicly available data in R scripts via the web\n-   Resources for accessing official statistics data in R\n\nHere I am interested only in the first two demonstration. I will refer\nespecially to the section on [Labelled\ndata](https://socialresearchcentre.github.io/r_survey_datasets/labelled-data.html).\n\n------------------------------------------------------------------------\n\n::: my-watch-out\n::: my-watch-out-header\nWATCH OUT! {**labelled**} and {**sjlabelled**} have similar purposes and\nfunctions\n:::\n\n::: my-watch-out-container\n{**labelled**} and {**sjlabelled**} are very similar. As far as I\nunderstand is the main difference that {**sjlabelled**} supports not\nonly working with labelled data but also offers functions to benefit\nfrom these features. {**labelled**} in contrast manipulates labelled\ndata only as an intermediate data structure that should be converted to\ncommon R classes, loosing these kind of meta-data.\n:::\n:::\n:::\n:::\n\n### Displaying data including labelled vectors {#sec-chap01-labelled-data-2}\n\nTo get comfortable with labelled data @def-chap01-show-labelled-data I\nwill show how labelled data appear in different viewing functions. To\ninspect the possibilities of the {**labelled**} package see\n@def-chap01-use-labelled-haven-package.\n\n::: my-experiment\n::: my-experiment-header\n::: {#def-chap01-show-labelled-data}\n: Different types of data views with labelled data\n:::\n:::\n\n::: my-experiment-container\n::: panel-tabset\n###### str()\n\n::: my-r-code\n::: my-r-code-header\n::: {#cnj-chap01-str-labelled-data}\n: Display the internal structure of labelled data\n:::\n:::\n\n::: my-r-code-container\n\n::: {.cell}\n\n```{.r .cell-code}\nutils::str(gss_2016_gssr)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> tibble [2,867 × 2] (S3: tbl_df/tbl/data.frame)\n#>  $ age  : dbl+lbl [1:2867] 47, 61, 72, 43, 55, 53, 50, 23, 45, 71, 33, 86, 32, 6...\n#>    ..@ label       : chr \"age of respondent\"\n#>    ..@ format.stata: chr \"%29.0g\"\n#>    ..@ labels      : Named num [1:14] 89 NA NA NA NA NA NA NA NA NA ...\n#>    .. ..- attr(*, \"names\")= chr [1:14] \"89 or older\" \"don't know\" \"iap\" \"I don't have a job\" ...\n#>  $ grass: dbl+lbl [1:2867] NA(i),     1,     2, NA(i),     1,     1, NA(i),     ...\n#>    ..@ label       : chr \"should marijuana be made legal\"\n#>    ..@ format.stata: chr \"%29.0g\"\n#>    ..@ labels      : Named num [1:15] 1 2 NA NA NA NA NA NA NA NA ...\n#>    .. ..- attr(*, \"names\")= chr [1:15] \"should be legal\" \"should not be legal\" \"don't know\" \"iap\" ...\n```\n\n\n:::\n:::\n\n:::\n:::\n\n###### attributes()\n\n::: my-r-code\n::: my-r-code-header\n::: {#cnj-chap01-attributes-labelled-data}\n: Show attributes of labelled data\n:::\n:::\n\n::: my-r-code-container\n\n::: {.cell}\n\n```{.r .cell-code}\nbase::attributes(gss_2016_gssr$grass)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> $label\n#> [1] \"should marijuana be made legal\"\n#> \n#> $format.stata\n#> [1] \"%29.0g\"\n#> \n#> $class\n#> [1] \"haven_labelled\" \"vctrs_vctr\"     \"double\"        \n#> \n#> $labels\n#>               should be legal           should not be legal \n#>                             1                             2 \n#>                    don't know                           iap \n#>                            NA                            NA \n#>            I don't have a job                   dk, na, iap \n#>                            NA                            NA \n#>                     no answer                 not imputable \n#>                            NA                            NA \n#>                 not imputable                       refused \n#>                            NA                            NA \n#>                skipped on web                    uncodeable \n#>                            NA                            NA \n#> not available in this release    not available in this year \n#>                            NA                            NA \n#>                  see codebook \n#>                            NA\n```\n\n\n:::\n:::\n\n\nThis works only with vectors (variables), but not with data frames. You\ncan display specific list values with numbers (e.g.,\n`attributes(gss_2016_gssr$grass)[[4]]`) or names (e.g.,\n`attributes(gss_2016_gssr$grass)[[\"labels\"]]`).\n:::\n:::\n\n###### head()\n\n::: my-r-code\n::: my-r-code-header\n::: {#cnj-chap01-head-labelled-data}\n: Show first six records of the labelled variable\n:::\n:::\n\n::: my-r-code-container\n::: {#lst-chap01-head-labelled-data}\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(gss_2016_gssr$grass)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> <labelled<double>[6]>: should marijuana be made legal\n#> [1] NA(i)     1     2 NA(i)     1     1\n#> \n#> Labels:\n#>  value                         label\n#>      1               should be legal\n#>      2           should not be legal\n#>  NA(d)                    don't know\n#>  NA(i)                           iap\n#>  NA(j)            I don't have a job\n#>  NA(m)                   dk, na, iap\n#>  NA(n)                     no answer\n#>  NA(p)                 not imputable\n#>  NA(q)                 not imputable\n#>  NA(r)                       refused\n#>  NA(s)                skipped on web\n#>  NA(u)                    uncodeable\n#>  NA(x) not available in this release\n#>  NA(y)    not available in this year\n#>  NA(z)                  see codebook\n```\n\n\n:::\n:::\n\n\nUse `head()` to show the first six records of the labelled variable.\n:::\n\n------------------------------------------------------------------------\n\nThis works only with labelled vectors (variables), but not with data\nframes.\n:::\n:::\n\n###### tibble()\n\n> One immediate advantage of labelled vectors is that value labels are\n> used in data frame printing when using\n> [tibble](https://tibble.tidyverse.org/) (and by extension the wider\n> tidyverse) and other packages using the\n> [pillar](https://cran.r-project.org/web/packages/pillar/index.html)\n> printing methods. ([Survey Research Datasets and\n> R](https://socialresearchcentre.github.io/r_survey_datasets/what-is-labelled-data.html))\n\n::: my-r-code\n::: my-r-code-header\n::: {#cnj-chap01-tibble-labelled-data}\n: Using `tibble` resp. `pillar` printing methods\n:::\n:::\n\n::: my-r-code-container\n::: {#lst-chap01-tibble-labelled-data}\n\n::: {.cell}\n\n```{.r .cell-code}\ngss_2016_gssr |> \n    dplyr::count(grass)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> # A tibble: 3 × 2\n#>   grass                           n\n#>   <dbl+lbl>                   <int>\n#> 1     1 [should be legal]      1126\n#> 2     2 [should not be legal]   717\n#> 3 NA(i) [iap]                  1024\n```\n\n\n:::\n:::\n\n\nUsing `tibble` resp. `pillar` printing methods to display NA's\n:::\n:::\n:::\n\n###### glimpse()\n\n::: my-r-code\n::: my-r-code-header\n::: {#cnj-chap01-glimpse-labelled-data}\n: Get a glimpse of labelled data\n:::\n:::\n\n::: my-r-code-container\n\n::: {.cell}\n\n```{.r .cell-code}\ndplyr::glimpse(gss_2016_gssr)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> Rows: 2,867\n#> Columns: 2\n#> $ age   <dbl+lbl> 47, 61, 72, 43, 55, 53, 50, 23, 45, 71, 33, 86, 32, 60, 76, …\n#> $ grass <dbl+lbl> NA(i),     1,     2, NA(i),     1,     1, NA(i),     2, NA(i…\n```\n\n\n:::\n:::\n\n:::\n:::\n\n###### print()\n\n::: my-r-code\n::: my-r-code-header\n::: {#cnj-chap01-print-labelled-data}\n: Print values as `tibble()` with labelled data\n:::\n:::\n\n::: my-r-code-container\n\n::: {.cell}\n\n```{.r .cell-code}\nbase::print(gss_2016_gssr)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> # A tibble: 2,867 × 2\n#>    age       grass                      \n#>    <dbl+lbl> <dbl+lbl>                  \n#>  1 47        NA(i) [iap]                \n#>  2 61            1 [should be legal]    \n#>  3 72            2 [should not be legal]\n#>  4 43        NA(i) [iap]                \n#>  5 55            1 [should be legal]    \n#>  6 53            1 [should be legal]    \n#>  7 50        NA(i) [iap]                \n#>  8 23            2 [should not be legal]\n#>  9 45        NA(i) [iap]                \n#> 10 71            2 [should not be legal]\n#> # ℹ 2,857 more rows\n```\n\n\n:::\n:::\n\n:::\n:::\n\n###### glance_data()\n\n::: my-r-code\n::: my-r-code-header\n::: {#cnj-chap01-glance-labelled-data}\n: Glance randomly at some records with labelled data\n:::\n:::\n\n::: my-r-code-container\n\n::: {.cell}\n\n```{.r .cell-code}\ngss_2016_gssr |>\n    glance_data(N = 8, seed = 2016)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> # A tibble: 10 × 3\n#>      obs age       grass                      \n#>    <int> <dbl+lbl> <dbl+lbl>                  \n#>  1     1 47        NA(i) [iap]                \n#>  2   172 27            1 [should be legal]    \n#>  3   562 70            2 [should not be legal]\n#>  4   898 60            2 [should not be legal]\n#>  5  1019 30            1 [should be legal]    \n#>  6  1176 80            2 [should not be legal]\n#>  7  1505 53        NA(i) [iap]                \n#>  8  1911 54            2 [should not be legal]\n#>  9  2622 62        NA(i) [iap]                \n#> 10  2867 72            2 [should not be legal]\n```\n\n\n:::\n:::\n\n:::\n:::\n\n###### RStudio\n\nIn RStudio you can see part of the labels by supplying additional\ninformation about NAs in R code chunks and variable labels in the\nRStudio viewer.\n\n::: {#fig-rstudio-labelled-data layout-ncol=\"2\"}\n![Labelled data as a R code chunk result in\nRStudio](img/chap01/rstudio-r-chunk-labelled-data-min.png){#fig-rstudio-chunk}\n\n![Labelled data in RStudio data\nviewer](img/chap01/rstudio-viewer-labelled-data-min.png){#fig-rstudio-viewer}\n\nRStudio display of labelled data\n:::\n:::\n:::\n:::\n\n`base::summary()` with data frames that contain labelled data generates\nan error when {**haven**} is not loaded:\n\n> ! `summary.haven_labelled()` not implemented.\n\n::: my-important\n::: my-important-header\nLabelled meta data not visible in most base R viewing functions\n:::\n\n::: my-important-container\nWith the exception of `base::str()` labelled meta data are not visible\nwhen viewing at the printed data.\n\nAnd even more important: You can't see the different types of NA's\nwithout specialized functions. \"Tagged\" (labelled) missing values\nbehaves exactly like regular R missing values. For more information see\n@def-chap01-use-labelled-haven-package.\n:::\n:::\n\n### Working with labelled data {#sec-chap01-labelled-data-3}\n\n#### Two different approaches\n\n> The purpose of the labelled package is to provide functions to\n> manipulate metadata as variable labels, value labels and defined\n> missing values using the `haven_labelled` and `haven_labelled_spss`\n> classes introduced in haven package. ([Introduction to\n> labelled](https://cran.r-project.org/web/packages/labelled/vignettes/intro_labelled.html))\n\nUntil now I have not worked in this book with `haven_labelled_spss`\nclasses. This class comes from imports of SPSS data files via the\n{**haven**} package.\n\n> This class is only used when `user_na = TRUE` in `read_sav()`. It is\n> similar to the `labelled()` class but it also models SPSS's\n> user-defined missings, which can be up to three distinct values, or\n> for numeric vectors a range. ([Labelled vector for\n> SPSS](https://haven.tidyverse.org/reference/labelled_spss.html))\n> [^01-preparing-data-1]\n\n[^01-preparing-data-1]: To prevent conflict with the labelled class from\n    the {**Hmisc**} package {**haven**} has changed with version 2.0.0\n    its label class names from `labelled` and `labelled_spss` to\n    `haven_labelled` and `haven_labelled_spss`. (See [GitHub Issue\n    #329](https://github.com/tidyverse/haven/issues/329).)\n\nAs user-defined missing values are not important here I will stick with\nSTATA imports.\n\nMy main interest with @def-chap01-use-labelled-haven-package is to\nprepare and/or use the labelled data to work with R. There are principal\ntwo approaches:\n\n::: my-procedure\n::: my-procedure-header\n::: {#prp-chap01-labelled-data-in-r}\n: Two different procedures to work in R with labelled data\n:::\n:::\n\n::: my-procedure-container\n**Approach A**\n\n> In approach A, `haven_labelled` vectors are converted into factors or\n> into numeric/character vectors just after data import, using\n> `unlabelled()`, `to_factor()` or `unclass()`. Then, data cleaning,\n> recoding and analysis are performed using classic R vector types.\n\n1.  Data import\n2.  *Conversion to factor / numeric*\n3.  Data cleaning / data recoding\n4.  Data analysis\n\n**Approach B**\n\n> In approach B, `haven_labelled` vectors are kept for data cleaning and\n> coding, allowing to preserved original recoding, in particular if data\n> should be reexported after that step. Functions provided by labelled\n> will be useful for managing value labels. However, as in approach A,\n> `haven_labelled` vectors will have to be converted into classic\n> factors or numeric vectors before data analysis (in particular\n> modeling) as this is the way categorical and continuous variables\n> should be coded for analysis functions. ([Introduction to\n> labelled](https://cran.r-project.org/web/packages/labelled/vignettes/intro_labelled.html))\n\n1.  Data import\n2.  Data cleaning / data recoding (-\\> Data export to SPSS / SAS / STATA\n    )\n3.  *Conversion to factor / numeric*\n4.  Data analysis\n\n[![Two different approaches to work in R with labelled\ndata](img/chap01/labelled-approaches-min.png){#fig-chap01-two-approaches-with-labelled-data}](https://cran.r-project.org/web/packages/labelled/vignettes/intro_labelled.html)\n:::\n:::\n\n#### Inspecting labelled data\n\n::: my-experiment\n::: my-experiment-header\n::: {#def-chap01-use-labelled-haven-package}\n: Inspecting labelled data\n:::\n:::\n\n::: my-experiment-container\n::: panel-tabset\n###### var_label()\n\n::: my-r-code\n::: my-r-code-header\n::: {#cnj-chap01-labelled-var-label}\n: Get variable labels of a labelled data frame\n:::\n:::\n\n::: my-r-code-container\n::: {#lst-chap01-labelled-var-label}\n\n::: {.cell}\n\n```{.r .cell-code}\nlabelled::var_label(gss_2016_gssr) \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> $age\n#> [1] \"age of respondent\"\n#> \n#> $grass\n#> [1] \"should marijuana be made legal\"\n```\n\n\n:::\n:::\n\n\nUse `labelled::var_label()` to get variables labels of a data frame\n:::\n\nThe labels of the two variable specifies in more detail their content.\nFor the `grass` variable we get the question asked in the survey. This\nis very helpful and saves consulting the codebook.\n\n------------------------------------------------------------------------\n:::\n:::\n\nI am using here the short form with `labelled::var_label()` but there\nexist also with `labelled::get_variable_labels()` a long form which has\nwith it plural form a more consistent syntax.\n\n###### val_labels()\n\n::: my-r-code\n::: my-r-code-header\n::: {#cnj-chap01-labelled-val-labels}\n: Get value labels of data frame variables\n:::\n:::\n\n::: my-r-code-container\n::: {#lst-chap01-labelled-val-labels}\n\n::: {.cell}\n\n```{.r .cell-code}\nlabelled::val_labels(gss_2016_gssr)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> $age\n#>                   89 or older                    don't know \n#>                            89                            NA \n#>                           iap            I don't have a job \n#>                            NA                            NA \n#>                   dk, na, iap                     no answer \n#>                            NA                            NA \n#>                 not imputable                 not imputable \n#>                            NA                            NA \n#>                       refused                skipped on web \n#>                            NA                            NA \n#>                    uncodeable not available in this release \n#>                            NA                            NA \n#>    not available in this year                  see codebook \n#>                            NA                            NA \n#> \n#> $grass\n#>               should be legal           should not be legal \n#>                             1                             2 \n#>                    don't know                           iap \n#>                            NA                            NA \n#>            I don't have a job                   dk, na, iap \n#>                            NA                            NA \n#>                     no answer                 not imputable \n#>                            NA                            NA \n#>                 not imputable                       refused \n#>                            NA                            NA \n#>                skipped on web                    uncodeable \n#>                            NA                            NA \n#> not available in this release    not available in this year \n#>                            NA                            NA \n#>                  see codebook \n#>                            NA\n```\n\n\n:::\n:::\n\n\nUse `labelled::val_labels()` to get value labels of data frame variables\n:::\n:::\n:::\n\nImportant is the start of the list of value labels.\n\n-   **age**: It shows that the value `89` of variable `age` includes\n    values of `89 and older`. This is important for the analysis and\n    saves the work of recoding as done in\n    @cnj-chap01-repl-data-fig-book.\n\n-   **grass**: For the `grass` variable we learn that `1` stands for the\n    opinion that Marijuana \"should be legal\" and two for the opposite.\n\nWhat follows is a comprehensive list of NA values used in the survey,\neven if many of these values are not used for the two variables\nconsidered here.\n\nWe know from @cnj-chap01-tibble-labelled-data that the `grass` variable\nhas 1024 NA's, but we do not know their composition of different NA\nvalues. See @lst-chap01-haven-na-tag how to get this information.\n\n------------------------------------------------------------------------\n\n::: my-watch-out\n::: my-watch-out-header\nWATCH OUT! Inconsistency in the function names\n:::\n\n::: my-watch-out-container\nThere is an inconsistency in the singular vs. plural form between\n`labelled::var_label()` and `labelled::val_labels()`. Both functions\nshow a *list of values* (= plural) if there are more than one label\navailable.\n\nFor value labels exist also a singular version with\n`labelled::val_label()` to get a specific value label of a variable.\n:::\n:::\n\n###### head()\n\n::: my-r-code\n::: my-r-code-header\n::: {#cnj-chap01-labelled-head}\n: Using `utils::head()` on a labelled variable after {**labelled**} is\nloaded\n:::\n:::\n\n::: my-r-code-container\n\n::: {.cell}\n\n```{.r .cell-code}\n## {**labelled**} is loaded through a call in the previous chunk\nutils::head(gss_2016_gssr$grass, 10)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> <labelled<double>[10]>: should marijuana be made legal\n#>  [1] NA(i)     1     2 NA(i)     1     1 NA(i)     2 NA(i)     2\n#> \n#> Labels:\n#>  value                         label\n#>      1               should be legal\n#>      2           should not be legal\n#>  NA(d)                    don't know\n#>  NA(i)                           iap\n#>  NA(j)            I don't have a job\n#>  NA(m)                   dk, na, iap\n#>  NA(n)                     no answer\n#>  NA(p)                 not imputable\n#>  NA(q)                 not imputable\n#>  NA(r)                       refused\n#>  NA(s)                skipped on web\n#>  NA(u)                    uncodeable\n#>  NA(x) not available in this release\n#>  NA(y)    not available in this year\n#>  NA(z)                  see codebook\n```\n\n\n:::\n:::\n\n\n------------------------------------------------------------------------\n\nUsing `utils::head()` on a variable when {**labelled**} is loaded prints\na nicely formatted summary of the attached metadata, excluding formats.\nIt shows all NA value labels in the data frame used in the survey, even\nonly some of them is used here. (See @lst-chap01-haven-na-tag to get\ntype of NA's used for a variable.)\n\nWe see in the first 10 records of the variable `grass`\n\n-   three `1` (\"should be legal\")\n-   three `2` (\"should not be legal\") and\n-   four `NA(i)` (\"iap\")\n\nUntil now it is not clear what \"iap\" for the `NA(i)` type means. If we\nwant [download (STATA) files directly from the GSS\nwebsite](https://gss.norc.org/get-the-data/stata) we see on the right\nside a note about the most important `NA` types. It explains the the\nabbreviation \"iap\" stands for \"inapplicable\".\n\n[![GSS Information about the most important NA\ntypes](img/chap01/na-gss-website-note-min.png){#fig-chap01-gss-na-note\nfig-alt=\"An \\\"Alerts\\\" explains that there are three main missing values in the data; \\\".i\\\": Inapplicable (IAP). Respondents whor are not asked to answer a specific question are assigned to IAP.\\\".d\\\": Don't know (DK). \\\".n\\\": No answer (NA).\"\nfig-align=\"center\"}](https://gss.norc.org/get-the-data/stata)\n\n::: my-note\n::: my-note-header\nTwo different meanings of \"NA\"\n:::\n\n::: my-note-container\nWith the `NA(n)` type of missing value \"NA\" does not mean \"Not\nApplicable\" but \"No answer\".\n:::\n:::\n\nReturning only the `NA(i)` type of a missing value does not mean that\nthere aren't any other NA types in the data. (See\n@lst-chap01-labelled-print-unique-tagged to get the types of tagged NA's\nof a variable.)\n:::\n:::\n\nThis formatted result of labelled data is better readable as with\n@lst-chap01-labelled-val-labels, because category and value are in the\nsame line. Compare the result of this code ({**labelled**} is loaded)\nwith @lst-chap01-head-labelled-data ({**labelled**} is not loaded).\n\n::: my-note\n::: my-note-header\nhaven::print_labels() as equivalent of head() with {**labelled**} loaded\n:::\n\n::: my-note-container\nWith the exception of the specified rows in the `head()` function, you\ncan get the same nicely formatted list of NA types with\n`haven::print_labels()`. (See next tab \"Print labels\".)\n:::\n:::\n\n###### Print labels\n\n::: my-r-code\n::: my-r-code-header\n::: {#cnj-chap01-haven-print-labels}\n: Print labels\n:::\n:::\n\n::: my-r-code-container\n\n::: {.cell}\n\n```{.r .cell-code}\nhaven::print_labels(gss_2016_gssr$grass)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> \n#> Labels:\n#>  value                         label\n#>      1               should be legal\n#>      2           should not be legal\n#>  NA(d)                    don't know\n#>  NA(i)                           iap\n#>  NA(j)            I don't have a job\n#>  NA(m)                   dk, na, iap\n#>  NA(n)                     no answer\n#>  NA(p)                 not imputable\n#>  NA(q)                 not imputable\n#>  NA(r)                       refused\n#>  NA(s)                skipped on web\n#>  NA(u)                    uncodeable\n#>  NA(x) not available in this release\n#>  NA(y)    not available in this year\n#>  NA(z)                  see codebook\n```\n\n\n:::\n:::\n\n:::\n:::\n\nFor a detailed explication see previous tab \"head()\".\n\n###### Unique NA's\n\n::: my-r-code\n::: my-r-code-header\n::: {#cnj-chap01-labelled-print-unique-tagged}\n: Print unique tagged NA's\n:::\n:::\n\n::: my-r-code-container\n::: {#lst-chap01-labelled-print-unique-tagged}\n\n::: {.cell}\n\n```{.r .cell-code}\nlabelled::unique_tagged_na(gss_2016_gssr$grass) |> \n    labelled::sort_tagged_na() |> \n    haven::print_tagged_na()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> [1]     1     2 NA(d) NA(i) NA(n)\n```\n\n\n:::\n:::\n\n\nShow the unique types of NA's of a variable\n:::\n\n------------------------------------------------------------------------\n\nWe see that variable `grass` has three types of NA's:\n\n`NA(d)`: Don't know. `NA(i)`: Inapplicable, e.g., these respondents were\nnot asked the marijuana question. `NA(n)`: No answer\n\nHere I have used `haven::print_tagged_na()` to format tagged NA's as\n`NA(a)`, `NA(b)`, etc. (See [\"Tagged\" missing\nvalues](https://haven.tidyverse.org/reference/tagged_na.html))\n:::\n:::\n\nIt would be interesting to know the composition of these different NA\ntypes. One could reason that there is a big difference between \"question\nnot asked\" and \"no answer\". (See @lst-chap01-haven-na-tag to get the\ncomposition of the NA types.)\n\n###### NA composition\n\n::: my-r-code\n::: my-r-code-header\n::: {#cnj-chap01-haven-na-tag}\n: Get the composition of the different types of tagged NA's\n:::\n:::\n\n::: my-r-code-container\n::: {#lst-chap01-haven-na-tag}\n\n::: {.cell}\n\n```{.r .cell-code}\ngss_2016_gssr |>\n  dplyr::count(\n    grass,\n    haven::na_tag(grass)\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> # A tibble: 5 × 3\n#>   grass                       `haven::na_tag(grass)`     n\n#>   <dbl+lbl>                   <chr>                  <int>\n#> 1     1 [should be legal]     <NA>                    1126\n#> 2     2 [should not be legal] <NA>                     717\n#> 3 NA(d) [don't know]          d                        110\n#> 4 NA(i) [iap]                 i                        911\n#> 5 NA(n) [no answer]           n                          3\n```\n\n\n:::\n:::\n\n\nGet the composition of the different types of tagged NA's\n:::\n\n------------------------------------------------------------------------\n\nWe already know from @lst-chap01-tibble-labelled-data that the variable\n`grass` has 1024 NA's. Now we know also the type composition of these\nNA's.\n:::\n:::\n\nI could not find a similar function in {**labelled**}, so I have used\nhere `haven::na_tag()`.\n:::\n:::\n:::\n\n#### Working with labelled data\n\nThere are two ways to work with labelled data in R:\n\n> The goal of haven is not to provide a labelled vector that you can use\n> everywhere in your analysis. The goal is to provide an intermediate\n> datastructure that you can convert into a regular R data frame. You\n> can do this by either converting to a factor or stripping the labels\n> ({**Haven**} vignette [Conversion\n> semantics](https://haven.tidyverse.org/articles/semantics.html))\n\n::: my-experiment\n::: my-experiment-header\n::: {#def-conversion-labelled-data}\n: How to convert labelled data for data analysis in R\n:::\n:::\n\n::: my-experiment-container\nThe second variable `grass` is the labelled original variable. The third\nvariable (last column to the right) is the modified `grass` variable.\n\n::: panel-tabset\n###### as_factor()\n\n::: my-r-code\n::: my-r-code-header\n::: {#cnj-chap01-haven-as-factor}\n: Convert labelled vectors to factors\n:::\n:::\n\n::: my-r-code-container\n\n::: {.cell}\n\n```{.r .cell-code}\ngss_2016_grass <- gss_2016_gssr |> \n    dplyr::select(grass)\n\ngss_2016_grass |> \n    dplyr::mutate(grass_factor = haven::as_factor(grass)) |> \n    glance_data(N = 8, seed = 42)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> # A tibble: 10 × 3\n#>      obs grass                       grass_factor       \n#>    <int> <dbl+lbl>                   <fct>              \n#>  1     1 NA(i) [iap]                 iap                \n#>  2   634 NA(i) [iap]                 iap                \n#>  3  1098     1 [should be legal]     should be legal    \n#>  4  1152     1 [should be legal]     should be legal    \n#>  5  1177 NA(i) [iap]                 iap                \n#>  6  1252 NA(i) [iap]                 iap                \n#>  7  2097     1 [should be legal]     should be legal    \n#>  8  2369     1 [should be legal]     should be legal    \n#>  9  2609     1 [should be legal]     should be legal    \n#> 10  2867     2 [should not be legal] should not be legal\n```\n\n\n:::\n:::\n\n\nHere I am using `haven::as_factor()`. This function also knows how to\nre-label missing values.\n:::\n:::\n\n###### zap_labels()\n\n::: my-r-code\n::: my-r-code-header\n::: {#cnj-chap01-haven-zap-labels}\n: Remove labels\n:::\n:::\n\n::: my-r-code-container\n\n::: {.cell}\n\n```{.r .cell-code}\ngss_2016_grass |> \n    dplyr::mutate(grass_unlabelled = haven::zap_labels(grass)) |> \n    glance_data(N = 8, seed = 42)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> # A tibble: 10 × 3\n#>      obs grass                       grass_unlabelled\n#>    <int> <dbl+lbl>                              <dbl>\n#>  1     1 NA(i) [iap]                               NA\n#>  2   634 NA(i) [iap]                               NA\n#>  3  1098     1 [should be legal]                    1\n#>  4  1152     1 [should be legal]                    1\n#>  5  1177 NA(i) [iap]                               NA\n#>  6  1252 NA(i) [iap]                               NA\n#>  7  2097     1 [should be legal]                    1\n#>  8  2369     1 [should be legal]                    1\n#>  9  2609     1 [should be legal]                    1\n#> 10  2867     2 [should not be legal]                2\n```\n\n\n:::\n:::\n\n:::\n:::\n\n###### zap_missing()\n\n::: my-r-code\n::: my-r-code-header\n::: {#cnj-chap01-haven-zap-missing}\n: Convert special missings to regular R missings\n:::\n:::\n\n::: my-r-code-container\n\n::: {.cell}\n\n```{.r .cell-code}\ngss_2016_grass |> \n    dplyr::mutate(grass_rgular_na = haven::zap_missing(grass)) |> \n    glance_data(N = 8, seed = 42)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> # A tibble: 10 × 3\n#>      obs grass                       grass_rgular_na         \n#>    <int> <dbl+lbl>                   <dbl+lbl>               \n#>  1     1 NA(i) [iap]                 NA                      \n#>  2   634 NA(i) [iap]                 NA                      \n#>  3  1098     1 [should be legal]      1 [should be legal]    \n#>  4  1152     1 [should be legal]      1 [should be legal]    \n#>  5  1177 NA(i) [iap]                 NA                      \n#>  6  1252 NA(i) [iap]                 NA                      \n#>  7  2097     1 [should be legal]      1 [should be legal]    \n#>  8  2369     1 [should be legal]      1 [should be legal]    \n#>  9  2609     1 [should be legal]      1 [should be legal]    \n#> 10  2867     2 [should not be legal]  2 [should not be legal]\n```\n\n\n:::\n:::\n\n:::\n:::\n\n###### zap_label()\n\n::: my-r-code\n::: my-r-code-header\n::: {#cnj-chap01-haven-zap-label}\n: Remove variable labels from a data frame\n:::\n:::\n\n::: my-r-code-container\n\n::: {.cell}\n\n```{.r .cell-code}\nprint(\"*******   Original data frame   ********\")\nlabelled::var_label(gss_2016_gssr)\n\nprint(\"*******   Data frame after variable zapped   *******\")\ngss_2016_gssr |> \n    haven::zap_label() |> \n    labelled::var_label()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> [1] \"*******   Original data frame   ********\"\n#> $age\n#> [1] \"age of respondent\"\n#> \n#> $grass\n#> [1] \"should marijuana be made legal\"\n#> \n#> [1] \"*******   Data frame after variable zapped   *******\"\n#> $age\n#> NULL\n#> \n#> $grass\n#> NULL\n```\n\n\n:::\n:::\n\n:::\n:::\n:::\n\nYou can combine all three zap-commands.\n:::\n:::\n\n\n\n\n## Table excursion\n\n\n### Review several table packages {#sec-chap01-review-table-packages}\n\nCreating tables is an important result of preparing data --- the main subject of this section. In my research I came up with eight packages that seems to me the most important ones. What follows is a short introduction into these packages.\n\n:::::{.my-experiment}\n:::{.my-experiment-header}\n:::::: {#def-chap01-review-table-packages}\n: Review table packages: {**DT**}, {**flextable**}, {**gt**}, {**gtsummary**}, {**htmlTable**}, {**kableExtra**}, {**tableone**}, {**xtable**}\n::::::\n:::\n::::{.my-experiment-container}\n\n::: {.panel-tabset}\n###### DT\n\n[{**DT**}](https://rstudio.github.io/DT/)\n\nDT is an abbreviation of 'DataTables.' Data objects in R can be rendered as HTML tables using the JavaScript library 'DataTables' (typically via R Markdown or Shiny). \n\nThis R package provides an enhanced version of data.frames with more options for authors and users:\n\n**Authors**: DT supports data wrangling beside subsetting rows and selecting columns (e.g., computing on columns, sort, grouping). I am not sure if this is really an advantage because it requires the somewhat complex square brackets notation. Using {**dplyr**}  with other {**tidyverse**} packages seems --- for me at least --- easier to use.\n**Users**: The really advantage of {**DT**} in my opinion is that the interface allows users to change values and display formats interactively. There are some option in the standard installations and much more with extensions.\n\n- **Standard**: Out of the box {**DT**} allows user to \n    - search, \n    - sort, \n    - choose the number of rows shown per page, \n    - filter columns \n    - add/remove row names and even \n    - edit cells individually. \n- **Extensions**: There are also some extension to enhance the interactive options: Extensions allow users to \n    - edit groups of cells, \n    - provide buttons for copying or downloading the table in different formats, \n    - to re-order and/or hide columns, \n    - to fix columns and/or header if the table is too wide and/or to long and you have to scroll, \n    - moving around with arrow keys like in Excel tables, \n    - making the table responsive to smaller screens by collapsing columns, \n    - grouping values by a column, \n    - reordering rows, \n    - scrolling through the rows and \n    - selecting parts of variables interactively.\n    \n    \n:::::{.my-note}\n:::{.my-note-header}\nMy conclusion to {**DT**}\n:::\n::::{.my-note-container}\n{**DT**} is my first choice for interactive data exploring and very useful for Explorative Data Analysis (<a class='glossary' title='Explorative Data Analysis is an approach of analyzing data sets to summarize their main characteristics, often using statistical graphics and other data visualization methods. A statistical model can be used or not, but primarily EDA is for seeing what the data can tell us beyond the formal modeling and thereby contrasts traditional hypothesis testing. (Wikipedia)'>EDA</a>). I have already some experiences with this package but haven't use it lastly. \n\nCompared with the other table packages {**DT**} is not in the same category: The following packages are developed as <a class='glossary' title='Display Tables are in constrast to Data Tables. You would find them in a web page, a journal article, or in a magazine. Such tables are for presentation, often to facilitate the construction of “Table 1”, i.e., baseline characteristics table commonly found in research papers. (Introduction to Creating gt Tables)'>Display Tables</a> (in contrast to <a class='glossary' title='Data Tables are — in contrast to Display Tables — for analysis and not for presentation. Another purpose of Data Tables is to store, retrieve and share information digitally. In R they are tibbles, data.frames etc.'>Data Tables</a>. Beside of the interactive use {**DT**}s are Data Tables.\n::::\n:::::\n\n\n###### flextable\n\n[{**flextable**}](https://davidgohel.github.io/flextable/) \n\nThis package helps you to create reporting table from a data frame easily. You can \n\n- merge cells, \n- add headers, \n- add footers, \n- change formatting, \n- set how data in cells is displayed\n- Table content can also contain mixed types of text and image content. \n- Tables can be embedded from R Markdown documents into HTML, PDF, Word, and\n    PowerPoint documents and can be embedded using Package Officer for\n    Microsoft Word or PowerPoint documents. \n- Tables can also be exported as R plots or graphic files, e.g., png, pdf, and jpeg.\n\nIt is said that {**flextable**} --- together with the sparsely used [{**huxtable**}](https://hughjonesd.github.io/huxtable/) --- \"supports the widest range of output formats ... [both] support HTML, {{< latex >}}, and Office formats, and contain most common table features (e.g., conditional formatting).\" (Yihui: [R Markdown Coobook](https://bookdown.org/yihui/rmarkdown-cookbook/table-other.html))\n\n:::::{.my-note}\n:::{.my-note-header}\nMy conclusion to {**flextable**}\n:::\n::::{.my-note-container}\n{**flextable**} seems pretty well suited to create sophisticated tables for publications. It is often especially mentioned for exporting into Word files. Maybe I will look into this package in the near future, but currently my priority is {**gtsummary**}.\n::::\n:::::\n\n###### gt\n\n [{**gt**}](https://gt.rstudio.com/)\n \n{**gt**} stands for \"grammar of tables\". It aims to do for tables what {**ggplot2**} did for graphics. ([Hadley Wickham on X](https://twitter.com/hadleywickham/status/1247997744469295104?ref_src=twsrc%5Etfw%7Ctwcamp%5Etweetembed%7Ctwterm%5E1247997744469295104%7Ctwgr%5Edb446e88f95e2f0e4a5e791da84f82d626ceee1c%7Ctwcon%5Es1_&ref_url=https%3A%2F%2Fcdn.embedly.com%2Fwidgets%2Fmedia.html%3Ftype%3Dtext2Fhtmlkey%3Da19fcc184b9711e1b4764040d3dc5c07schema%3Dtwitterurl%3Dhttps3A%2F%2Ftwitter.com%2Fhadleywickham%2Fstatus%2F1247997744469295104image%3D))\n \n{**gt**} offers a different and easy-to-use set of functions that helps to build display tables from tabular data. The {**gt**} philosophy states that a comprehensive collection of table parts can be used to create a broad range of functional tables. \n    \nIt allows you to compose a table by putting together different parts of the table, such as\n\n- the table header (title and subtitle), \n- the column labels, \n- the table body, \n- row group labels, \n- and the table footer. \n\nSome parts are optional. You can also format numbers and add background shading to cells. \n\n[![Part of a {gt}\ntable](https://gt.rstudio.com/reference/figures/gt_parts_of_a_table.svg){#fig-gt-table-parts\nfig-alt=\"The table shows all the different parts of a gt table: The TABLE HEADER consists of TITLE and SUBTITLE. The next part is called STUB HEAD and consists of STUBHEAD LABEL on the left, above the row names and SPANNER COLUMN LABEL with COLUMN LABELs below. The third part is called STUB and consists of ROW GROUP LABEL, ROW LABELs and SUMMARY LABEL on the left. On the right side are the values of the table in cells respectively summary cells. The last part is called TABLE FOOTER and consists of FOOTNOTES and SOURCE NOTES.\"}](https://gt.rstudio.com/index.html).\n\nAt the beginning of the development process {**gt**} supported only HTML, but now you can also use it for LATEX and RTF outputs.\n\n{**gt**} is developed by the RStudio/Posit team, that stands not\n    only for high quality but also for {**tidyverse**} compatibility. It was a little surprise for me that the download statistics does not reflect the normally very high figures of RStudio/Posit products. After trying to work with {**gt**} I believe I know the reasons:\n\n- With {**gt**} you have big flexibility but you have to provide all the details. This could be cumbersome, especially when other table packages are providing not only theses details but incorporate also many other features as calculations, tests etc. {**gt**} is therefore better used in combination with other packages like {**gtsummary**}.\n- {**gt**} is still very early in the development process. The issue tracker show this in the relation of open / closed issue: 272 open / 633 closed (2024-01-18).\n    \n    \n:::::{.my-note}\n:::{.my-note-header}\nMy conclusion to {**gt**}\n:::\n::::{.my-note-container}\nI tried to work with {**gt**} but it is cumbersome. I noticed a [bug even following the official online tutorial](https://github.com/rstudio/gt/issues/1535). Maybe\n{**gt**} (together with {**gtsummary**} is better suited for creating easily complex tables in many formats.\n::::\n:::::\n\n###### gtsummary\n\nThe {**gtsummary**} package provides an efficient way to create publication-ready analytical and summary tables using the R programming language. {**gtsummary**} summarizes data sets, regression models, and more, using sensible defaults with highly customizable capabilities.\n\n{**gtsummary**} \"was written to be a companion to the {**gt**} package from RStudio. But not all output types are supported by the {**gt**} package. Therefore, [the developers] have made it possible to print {**gtsummary**} tables with various engines.\" ([gtsummary + Quarto/R Markdown](https://www.danieldsjoberg.com/gtsummary/articles/rmarkdown.html))\n\n[![Summary of the various Quarto and R Markdown output types and the\nprint engines supporting\nthem](img/chap01/gtsummary-output-formats-min.png){#fig-chap01-gtsummary-outputs\nfig-alt=\"Table of summaries for output formats: The table header reads from left to the right: Print Engine, Function, HTML, Word, PDF, RTF.  As print engines feature in this table: gt, flextable, huxtable, kableExtra, kable and tibble. All functions start with 'as_' followed by the name of the package, e.g., as_gt(), as_flex_table(), as_kable_extra() etc. The table states that gt is still working on RTF output, flextable and kableExtra does not support RTF, kableExtra also has no output format for Word. Kable has all four options in a very reduced form (missing indentation, footnotes and spanning headers) and tibble fails on all four formats.\"\nfig-align=\"center\"}](https://www.danieldsjoberg.com/gtsummary/articles/rmarkdown.html)\n\n:::::{.my-note}\n:::{.my-note-header}\nMy conclusion to {**gtsummary**}\n:::\n::::{.my-note-container}\n\nI have tried out {**gtsummary**} and I am enthusiastic about it! I wrote an introduction with some examples (@sec-chap01-experiments-gtsummary) Now that I understand how it works I will definitely use it. (By the way: Besides the extensive documentation I found that the most effective introduction for me was watching the [Youtube video presentation](https://www.youtube.com/watch?v=tANo9E1SYJE) by the developer Daniel D. Sjoberg).\n\n\n{{< video https://www.youtube.com/watch?v=tANo9E1SYJE >}}\n\n\n\n::::\n:::::\n\n\n\n\n###### htmlTable\n\n[{**htmlTable**}](https://cran.r-project.org/web/packages/htmlTable/vignettes/complex_tables.html)\n\nI found {**htmlTable**} per accident searching the Internet with \"r creating complex table\". This package is not mentioned in the literature I have read so far, but it seems not only able to produce complex tables but is also used quite often. Maybe it is the HTML limitation which reduces it application for Online journals because it requires a separate step to produce {{< latex >}} tables ready for printing.\n\nIt is a pretty old package (version 1.0 appeared already in 2014) but still currently in active development. The [last change](https://cran.r-project.org/web/packages/htmlTable/index.html) today (2024-01-18) was version 2.4.2 from 2023-10-29.\n\nFrom the package documentation:\n\n**Advanced Tables for Markdown/HTML**\n\n> Tables with state-of-the-art layout elements such as row spanners,\n    column spanners, table spanners, zebra striping, and more. While allowing\n    advanced layout, the underlying css-structure is simple in order to maximize\n    compatibility with common word processors. The package also contains a few\n    text formatting functions that help outputting text compatible with HTML/LaTeX.\n    \nBeside the extensive vignette documentation there are also some blog articles:\n\n- [Introducing the htmlTable-package](https://gforge.se/2015/04/introducing-the-htmltable-package/)\n- [Tables form R into Word](https://gforge.se/2013/02/tables-from-r-into-word/)\n- [Fast-track publishing using knitr: table mania (part IV)](https://gforge.se/2014/01/fast-track-publishing-using-knitr-part-iv/)\n\n:::::{.my-note}\n:::{.my-note-header}\nMy conclusion to {**htmlTable**}\n:::\n::::{.my-note-container}\n{**htmlTable**} seems an interesting package not only for creating complex tables but also for exporting them into Word. But to learn this package is at the moment not on my task list.\n::::\n:::::\n\n\n###### kableExtra\n\n[{**kableExtra**}](https://haozhu233.github.io/kableExtra/)\n\n{**kableExtra**} extends the basic functionality of `knitr::kable()` tables. Although\n    `knitr::kable()` is simple by design, it has many features missing\n    which are usually available in other packages. {**kableExtra**} has\n    filled the gap nicely. One of the best thing about {**kableExtra**}\n    is that most of its table capabilities work for both HTML and PDF\n    formats.\n\n:::::{.my-note}\n:::{.my-note-header}\nMy conclusion to {**kableExtra**}\n:::\n::::{.my-note-container}\nI have already some experiences with {**kableExtra**}. I used it quasi as an add-on to `knitr::kable()` during personal HTML publications (Blog, bookdown, Quarto). I believe that other \"Table 1\" packages like {**gtsummary**} or maybe also {**tableOne**) are better suited for display and publication.\n::::\n:::::\n\n\n###### tableone\n\n[{**tableone**}](https://cran.r-project.org/web/packages/tableone/index.html)\n\nThe first time I learned about the existence of {**tableone**} was in @sec-chap02 of Statistics with R. Consulting the online documentation it says:\n\n> Creates \"Table 1\", i.e., description of baseline patient characteristics, which is essential in every medical research. Supports both continuous and categorical variables, as well as p-values and standardized mean differences. Weighted data are supported via the {**survey**} package. … Most important functions are `CreateTableOne()` and `svyCreateTableOne()`.\n\n:::::{.my-note}\n:::{.my-note-header}\nMy conclusion to {**tableone**}\n:::\n::::{.my-note-container}\nThe package is completely new for me. I have to check it out to see how and when to use. But my priority now is {**gtsummary**} because\n\n- {**gtsummary**} is much more used than {**tableone**}: over 2000 versus under 500 downloads per day\n- last release of {**gtsummary**} was version 1.7.2 from July 15, 2023 versus release 26 from July 26, 2020.\n::::\n:::::\n\n\n###### xtable\n\n[{**xtable**}](https://cran.r-project.org/web/packages/xtable/vignettes/xtableGallery.pdf)\n\n{**xtable**} is the oldest package and still the table package most used! From the documentation it is clear that it is very useful for the creation of publication ready tables. But I am little hesitant to learn it, because it is not mentioned in current literature and the last change was in April 2019.\n\n:::::{.my-note}\n:::{.my-note-header}\nMy conclusion to {**xtable**}\n:::\n::::{.my-note-container}\nLearning {**xtable**} is not on my agenda: It is not clear for me if {**xtable**} is still in developments and if it is supporting newer approaches. Learning other table packages, especially {**gtsummary**} probabily together with {**gt**} has priority for me.\n::::\n:::::\n\n:::\n\n::::\n:::::\n\nThere are other packages as well. But the above eight packages\nare a first starting point for everybody to learn creating and displaying\nsophisticated data tables in R. It is good to know about different packages but lastly one has to decide which one to learn and use in daily practice. At the moment my favorites is {**gtsummary**}.\n\n\n:::::{.my-resource}\n:::{.my-resource-header}\nOther interesting table packages, but currently not considered for my personal purposes\n:::\n::::{.my-resource-container}\nJust for a possible later reference I will add some other table packages I know of.\n\n-   [{**reactable**}](https://glin.github.io/reactable/): `reactable()`\n    creates a data table from tabular data with sorting and pagination\n    by default. The data table is an HTML widget that can be used in R\n    Markdown documents and Shiny applications or viewed from an R\n    console. It is based on the React Table library and made with\n    reactR. Features are:\n\n    -   It creates a data table with sorting, filtering, and pagination\n    -   It has built-in column formatting\n    -   It supports custom rendering via R or JavaScript\n    -   It works seamlessly within R Markdown documents and the Shiny\n        app\n\n-   [{**ractablefmtr**}](https://kcuilla.github.io/reactablefmtr/index.html):\n    The package improves the appearance and formatting of tables created\n    using the reactable R library. It includes many conditional\n    formatters that are highly customizable and easy to use.\n\nThe authors of R Markdown Cookbook (Yihui Xie, Christophe Dervieux,\nEmily Riederer) mention also several other table packages in the\nsection [Other packages for creating\ntables](https://bookdown.org/yihui/rmarkdown-cookbook/table-other.html):\n\n-   {**rhandsontable**}: [Interface to the Handsontable.js Library.](https://jrowen.github.io/rhandsontable/)). Similar to {**DT**}, and has an Excel feel (e.g., you can edit data directly in the table). Visit <https://jrowen.github.io/rhandsontable/> to learn more about it.\n-   {**pixiedust**}: [Tables so Beautifully Fine-Tuned You Will Believe It’s Magic](https://github.com/nutterb/pixiedust): Features creating tables for models (such as linear models) converted through the {**broom**} package ([Broom: Convert Statistical Objects into Tidy Tibbles](https://broom.tidymodels.org/)). It supports Markdown, HTML, and {{< latex >}} output formats.\n-   **stargazer**: ([beautiful {{< latex >}}, HTML and ASCII tables from R statistical output](https://cran.r-project.org/web/packages/stargazer/vignettes/stargazer.pdf)):\n     Features formatting regression models and summary statistics\n     tables. \n -   **xtable** ([Dahl et al.\n     2019](https://bookdown.org/yihui/rmarkdown-cookbook/table-other.html#ref-R-xtable)):\n     Perhaps the oldest package for creating tables---the first release\n     was made in 2000. It supports both {{< latex >}} and HTML formats.\n\nI'm not going to introduce the rest of packages, but will just list\nthem here: \n\n- **tables**: [Formula-Driven Table Generation](https://dmurdoch.github.io/tables/)),\n- **pander** ([Daróczi and Tsegelskyi\n2022](https://bookdown.org/yihui/rmarkdown-cookbook/table-other.html#ref-R-pander)),\n- **tangram** ([S. Garbett\n2023](https://bookdown.org/yihui/rmarkdown-cookbook/table-other.html#ref-R-tangram)),\n- **ztable** ([Moon\n2021](https://bookdown.org/yihui/rmarkdown-cookbook/table-other.html#ref-R-ztable)),\nand \n- **condformat** ([Introduction to condformat](https://zeehio.github.io/condformat/)).\n\n::::\n:::::\n\n:::::{.my-important}\n:::{.my-important-header}\nSummary of my table packages review\n:::\n::::{.my-important-container}\nIt does not make sense to learn every package. SO I will concentrate on five packages with different usage:\n\n- {**DT**}, see: @pak-DT: An important package for interactive HTML tables. It also manages quite good big datasets\n- {**gt**}, see @pak-gt: Although this package is still lacking many features in follows a systematic approach (\"Grammar of Tables\") that allows to make fine grained changes. It is there somewhat cumbersome to apply it in everyday use. But it is especially valuable when you have another package for the standard features and you need some specialized change. I plan to use {**gt**} together with {**gtsummary**}. \n- {**gtsummary**}, see: @pak-gtsummary: I just learned this package and I am enthusiastic about it! I will use it as replacement for {**tableone**} that is used by Harris for the book to prepare publishing ready <a class='glossary' title='Descriptive statistics are often displayed in the first table in a published article or report and are therefore often called Table 1 statistics or the descriptives. (SwR)'>Table 1</a> tables.\n- {**kableExtra**}, see: @pak-kableExtra: It uses the `kable()` function from {**knitr**} (see: @pak-knitr), which is an essential part of the publishing infrastructure for <a class='glossary' title='Literate programming is a methodology that combines a programming language with a documentation language, thereby making programs more robust, more portable, more easily maintained, and arguably more fun to write than programs that are written only in a high-level language. The main idea is to treat a program as a piece of literature, addressed to human beings rather than to a computer.(Donald Knuth)'>literate programming</a>. It is pretty flexible and could be used in tandem with {**gtsummary**}. \n\nFor simple tables one can also use `knitr::kable()` or just printing the tibble.\n\n::::\n:::::\n\n\nAs a consequence of my table packages review I experimented with the {**gtsummary**}. I wanted to create a table where I have information by the variables grass, age in four categories and sex with all their levels in absolute numbers and in percents.\n\n### Experiments with the gtsummary package {#sec-chap01-experiments-gtsummary}\n\n:::::{.my-experiment}\n:::{.my-experiment-header}\n:::::: {#def-chap01-gtsummary-intro}\n: Experiments with {**gtsummary**}\n::::::\n:::\n::::{.my-experiment-container}\n\n0. Display dataset used for the {**gtsummary**} introduction.\n1. A very basic summary table without any adaptions or modifications.\n2. Changing dichotomous to a categorical variable.\n3. Ditto with a different method.\n4. Changing variable labels with two different methods.\n5. Output grouped by the `grass` variable.\n6. Header modified.\n7. two cross tables of summary statistics stacked.\n8. Table stratified by the `grass` variable.\n\n::: {.panel-tabset}\n###### 0\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-chap01-gtsummary-data}\n: Data used in this {**gtsummary**} introduction\n::::::\n:::\n::::{.my-r-code-container}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnhanes_2013_clean <- \n    base::readRDS(\"data/chap01/nhanes_2013_clean.rds\")\n\ngtsummary_basic <- nhanes_2013_clean |> \n \n    ## cut age into several defined age groups\n    dplyr::mutate(age_cat = base::cut(age,\n                   breaks = c(-Inf, 29, 39, 49, 59),\n                   labels = c(\"18 - 29\", \"30 - 39\", \"40 - 49\", \"50 - 59\"))) |>\n    dplyr::select(-c(nr, age))\n\nsave_data_file(\"chap01\", gtsummary_basic, \"gtsummary_clean.rds\")\n\nbase::summary(gtsummary_basic)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#>  grass          sex          age_cat    \n#>  Yes:1991   Male  :1792   18 - 29:1154  \n#>  No :1699   Female:1898   30 - 39: 859  \n#>                           40 - 49: 855  \n#>                           50 - 59: 822\n```\n\n\n:::\n\n```{.r .cell-code}\ngtsummary_basic\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> # A tibble: 3,690 × 3\n#>    grass sex    age_cat\n#>    <fct> <fct>  <fct>  \n#>  1 Yes   Male   50 - 59\n#>  2 Yes   Male   50 - 59\n#>  3 Yes   Female 50 - 59\n#>  4 No    Female 18 - 29\n#>  5 No    Female 30 - 39\n#>  6 Yes   Male   30 - 39\n#>  7 No    Male   18 - 29\n#>  8 Yes   Female 30 - 39\n#>  9 No    Male   50 - 59\n#> 10 Yes   Male   18 - 29\n#> # ℹ 3,680 more rows\n```\n\n\n:::\n:::\n\n\n::::\n:::::\n\nI am going to use this dataset to experiment with  {**gtsummary**}.\n\n\n\n###### 1\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-chap01-gtsummary-basic}\n: A very basic summary without any adaptions or modifications\n::::::\n:::\n::::{.my-r-code-container}\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngtsummary_basic <- \n    base::readRDS(\"data/chap01/gtsummary_clean.rds\")\n\ngtsummary_basic |> \n    gtsummary::tbl_summary()\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div id=\"tbhczajxko\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>#tbhczajxko table {\n  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#tbhczajxko thead, #tbhczajxko tbody, #tbhczajxko tfoot, #tbhczajxko tr, #tbhczajxko td, #tbhczajxko th {\n  border-style: none;\n}\n\n#tbhczajxko p {\n  margin: 0;\n  padding: 0;\n}\n\n#tbhczajxko .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#tbhczajxko .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#tbhczajxko .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#tbhczajxko .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 3px;\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#tbhczajxko .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#tbhczajxko .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#tbhczajxko .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#tbhczajxko .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#tbhczajxko .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#tbhczajxko .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#tbhczajxko .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#tbhczajxko .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#tbhczajxko .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#tbhczajxko .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#tbhczajxko .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#tbhczajxko .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#tbhczajxko .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#tbhczajxko .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#tbhczajxko .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#tbhczajxko .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#tbhczajxko .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#tbhczajxko .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#tbhczajxko .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#tbhczajxko .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#tbhczajxko .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#tbhczajxko .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#tbhczajxko .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#tbhczajxko .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#tbhczajxko .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #D3D3D3;\n}\n\n#tbhczajxko .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#tbhczajxko .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#tbhczajxko .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#tbhczajxko .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#tbhczajxko .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#tbhczajxko .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#tbhczajxko .gt_left {\n  text-align: left;\n}\n\n#tbhczajxko .gt_center {\n  text-align: center;\n}\n\n#tbhczajxko .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#tbhczajxko .gt_font_normal {\n  font-weight: normal;\n}\n\n#tbhczajxko .gt_font_bold {\n  font-weight: bold;\n}\n\n#tbhczajxko .gt_font_italic {\n  font-style: italic;\n}\n\n#tbhczajxko .gt_super {\n  font-size: 65%;\n}\n\n#tbhczajxko .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#tbhczajxko .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#tbhczajxko .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#tbhczajxko .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#tbhczajxko .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#tbhczajxko .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#tbhczajxko .gt_indent_5 {\n  text-indent: 25px;\n}\n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n  <thead>\n    <tr class=\"gt_col_headings\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"&lt;strong&gt;Characteristic&lt;/strong&gt;\"><strong>Characteristic</strong></th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"&lt;strong&gt;N = 3,690&lt;/strong&gt;&lt;span class=&quot;gt_footnote_marks&quot; style=&quot;white-space:nowrap;font-style:italic;font-weight:normal;&quot;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/span&gt;\"><strong>N = 3,690</strong><span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;\"><sup>1</sup></span></th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">grass</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">1,991 (54%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">sex</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\"><br /></td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    Male</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">1,792 (49%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    Female</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">1,898 (51%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">age_cat</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\"><br /></td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    18 - 29</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">1,154 (31%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    30 - 39</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">859 (23%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    40 - 49</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">855 (23%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    50 - 59</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">822 (22%)</td></tr>\n  </tbody>\n  \n  <tfoot class=\"gt_footnotes\">\n    <tr>\n      <td class=\"gt_footnote\" colspan=\"2\"><span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;\"><sup>1</sup></span> n (%)</td>\n    </tr>\n  </tfoot>\n</table>\n</div>\n```\n\n:::\n:::\n\n\n\n::::\n:::::\n\nThis is a very basic summary without any adaptions or modifications. It is strange, that there are for `grass` not separated levels presented. From a [video of an introduction to {**gtsummary**}](https://www.youtube.com/watch?v=tANo9E1SYJE) by the package author Daniel D. Sjoberg I learned that a categorical variable with two levels is interpreted as dichotomous whenever the two levels are labelled `1` and `0`, `true` and `false` or `Yes` and `No`. And dichotomous variable are different as other categorical variables as they are reported by {**gtsummary**} only with one number (the `1`, `true` or `yes` value).\n\n\n###### 2\n\nHere I am going to change level names of the `grass` variable to prevent that it is interpreted as a dichotomous variable.\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-chap01-gtsummary-no-dichotomous1}\n: Numbered R Code Title\n::::::\n:::\n::::{.my-r-code-container}\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngtsummary_basic2 <- \n    base::readRDS(\"data/chap01/gtsummary_clean.rds\") |> \n    dplyr::mutate(grass = \n      forcats::fct_recode(grass,\n                          \"used\" = \"Yes\", \n                          \"not used\" = \"No\")\n            ) \n\ngtsummary_basic2 |>\n    gtsummary::tbl_summary()\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div id=\"tcvubwfzjh\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>#tcvubwfzjh table {\n  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#tcvubwfzjh thead, #tcvubwfzjh tbody, #tcvubwfzjh tfoot, #tcvubwfzjh tr, #tcvubwfzjh td, #tcvubwfzjh th {\n  border-style: none;\n}\n\n#tcvubwfzjh p {\n  margin: 0;\n  padding: 0;\n}\n\n#tcvubwfzjh .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#tcvubwfzjh .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#tcvubwfzjh .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#tcvubwfzjh .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 3px;\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#tcvubwfzjh .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#tcvubwfzjh .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#tcvubwfzjh .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#tcvubwfzjh .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#tcvubwfzjh .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#tcvubwfzjh .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#tcvubwfzjh .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#tcvubwfzjh .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#tcvubwfzjh .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#tcvubwfzjh .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#tcvubwfzjh .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#tcvubwfzjh .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#tcvubwfzjh .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#tcvubwfzjh .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#tcvubwfzjh .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#tcvubwfzjh .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#tcvubwfzjh .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#tcvubwfzjh .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#tcvubwfzjh .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#tcvubwfzjh .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#tcvubwfzjh .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#tcvubwfzjh .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#tcvubwfzjh .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#tcvubwfzjh .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#tcvubwfzjh .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #D3D3D3;\n}\n\n#tcvubwfzjh .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#tcvubwfzjh .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#tcvubwfzjh .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#tcvubwfzjh .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#tcvubwfzjh .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#tcvubwfzjh .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#tcvubwfzjh .gt_left {\n  text-align: left;\n}\n\n#tcvubwfzjh .gt_center {\n  text-align: center;\n}\n\n#tcvubwfzjh .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#tcvubwfzjh .gt_font_normal {\n  font-weight: normal;\n}\n\n#tcvubwfzjh .gt_font_bold {\n  font-weight: bold;\n}\n\n#tcvubwfzjh .gt_font_italic {\n  font-style: italic;\n}\n\n#tcvubwfzjh .gt_super {\n  font-size: 65%;\n}\n\n#tcvubwfzjh .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#tcvubwfzjh .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#tcvubwfzjh .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#tcvubwfzjh .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#tcvubwfzjh .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#tcvubwfzjh .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#tcvubwfzjh .gt_indent_5 {\n  text-indent: 25px;\n}\n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n  <thead>\n    <tr class=\"gt_col_headings\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"&lt;strong&gt;Characteristic&lt;/strong&gt;\"><strong>Characteristic</strong></th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"&lt;strong&gt;N = 3,690&lt;/strong&gt;&lt;span class=&quot;gt_footnote_marks&quot; style=&quot;white-space:nowrap;font-style:italic;font-weight:normal;&quot;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/span&gt;\"><strong>N = 3,690</strong><span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;\"><sup>1</sup></span></th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">grass</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\"><br /></td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    used</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">1,991 (54%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    not used</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">1,699 (46%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">sex</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\"><br /></td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    Male</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">1,792 (49%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    Female</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">1,898 (51%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">age_cat</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\"><br /></td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    18 - 29</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">1,154 (31%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    30 - 39</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">859 (23%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    40 - 49</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">855 (23%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    50 - 59</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">822 (22%)</td></tr>\n  </tbody>\n  \n  <tfoot class=\"gt_footnotes\">\n    <tr>\n      <td class=\"gt_footnote\" colspan=\"2\"><span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;\"><sup>1</sup></span> n (%)</td>\n    </tr>\n  </tfoot>\n</table>\n</div>\n```\n\n:::\n:::\n\n\n\n::::\n:::::\n\n\nThis time we can see both levels of `grass`. But we loose the nice Yes/No answer of the survey.\n\n###### 3\n\nAnother strategy to prevent a dichotomous interpretation is to tell {**gtsummary**} expressively with the `type =` argument how a variable has to be interpreted.\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-chap01-gtsummary-no-dichotomous2}\n: Preventing a dichotomous interpretation\n::::::\n:::\n::::{.my-r-code-container}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nchap01_gtsummary_basic |> \n    gtsummary::tbl_summary(\n        type = grass ~ \"categorical\"\n    )\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div id=\"ltikcpexne\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>#ltikcpexne table {\n  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#ltikcpexne thead, #ltikcpexne tbody, #ltikcpexne tfoot, #ltikcpexne tr, #ltikcpexne td, #ltikcpexne th {\n  border-style: none;\n}\n\n#ltikcpexne p {\n  margin: 0;\n  padding: 0;\n}\n\n#ltikcpexne .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#ltikcpexne .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#ltikcpexne .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#ltikcpexne .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 3px;\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#ltikcpexne .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#ltikcpexne .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#ltikcpexne .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#ltikcpexne .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#ltikcpexne .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#ltikcpexne .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#ltikcpexne .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#ltikcpexne .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#ltikcpexne .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#ltikcpexne .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#ltikcpexne .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#ltikcpexne .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#ltikcpexne .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#ltikcpexne .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#ltikcpexne .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#ltikcpexne .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#ltikcpexne .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#ltikcpexne .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#ltikcpexne .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#ltikcpexne .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#ltikcpexne .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#ltikcpexne .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#ltikcpexne .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#ltikcpexne .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#ltikcpexne .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #D3D3D3;\n}\n\n#ltikcpexne .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#ltikcpexne .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#ltikcpexne .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#ltikcpexne .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#ltikcpexne .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#ltikcpexne .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#ltikcpexne .gt_left {\n  text-align: left;\n}\n\n#ltikcpexne .gt_center {\n  text-align: center;\n}\n\n#ltikcpexne .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#ltikcpexne .gt_font_normal {\n  font-weight: normal;\n}\n\n#ltikcpexne .gt_font_bold {\n  font-weight: bold;\n}\n\n#ltikcpexne .gt_font_italic {\n  font-style: italic;\n}\n\n#ltikcpexne .gt_super {\n  font-size: 65%;\n}\n\n#ltikcpexne .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#ltikcpexne .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#ltikcpexne .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#ltikcpexne .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#ltikcpexne .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#ltikcpexne .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#ltikcpexne .gt_indent_5 {\n  text-indent: 25px;\n}\n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n  <thead>\n    \n    <tr class=\"gt_col_headings\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"&lt;strong&gt;Characteristic&lt;/strong&gt;\"><strong>Characteristic</strong></th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"&lt;strong&gt;N = 3,690&lt;/strong&gt;&lt;span class=&quot;gt_footnote_marks&quot; style=&quot;white-space:nowrap;font-style:italic;font-weight:normal;&quot;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/span&gt;\"><strong>N = 3,690</strong><span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;\"><sup>1</sup></span></th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">grass</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\"><br /></td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    Yes</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">1,991 (54%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    No</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">1,699 (46%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">age_cat</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\"><br /></td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    18 - 29</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">1,154 (31%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    30 - 39</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">859 (23%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    40 - 49</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">855 (23%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    50 - 59</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">822 (22%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">gender</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\"><br /></td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    Male</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">1,792 (49%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    Female</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">1,898 (51%)</td></tr>\n  </tbody>\n  \n  <tfoot class=\"gt_footnotes\">\n    <tr>\n      <td class=\"gt_footnote\" colspan=\"2\"><span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;\"><sup>1</sup></span> n (%)</td>\n    </tr>\n  </tfoot>\n</table>\n</div>\n```\n\n:::\n:::\n\n\n\n::::\n:::::\n\nThe same output as in the previous tab, but now with the desired Yes/No answer categories.\n\n\n###### 4\n\nIf there are labelled data {gtsummary} uses them as variable labels. This is a big advantages, especially if the data are already labelled and imported with {**haven**}. But you can use the {**labelled**} package to label the variables.\n\nIf there are no labelled metadata then the variable name is taken, e.g., in most of the cases you have to provide a better name for the table display.\n\nI am using both methods in following code chunk: I provided labelled metadata for the `grass` variable but used new variable names for `age_cat` and `sex`.\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-chap01-gtsummary-label}\n: Changing variable labels\n::::::\n:::\n::::{.my-r-code-container}\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## variant 1 to label variables\n# labelled::var_label(\n#     chap01_gtsummary_basic$grass) <- \"Ever used grass or hash?\"\n\n## variant 2 to label variables\nchap01_gtsummary_basic |> \n    labelled::set_variable_labels(\n        grass = \"Ever used grass or hash?\"\n    ) |> \n    gtsummary::tbl_summary(\n        # by = grass,\n        type = grass ~ \"categorical\",\n        label = list(\n            age_cat = \"Age Category\",\n            sex = \"Sex\"\n        )\n    )\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div id=\"pvqliyukyz\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>#pvqliyukyz table {\n  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#pvqliyukyz thead, #pvqliyukyz tbody, #pvqliyukyz tfoot, #pvqliyukyz tr, #pvqliyukyz td, #pvqliyukyz th {\n  border-style: none;\n}\n\n#pvqliyukyz p {\n  margin: 0;\n  padding: 0;\n}\n\n#pvqliyukyz .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#pvqliyukyz .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#pvqliyukyz .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#pvqliyukyz .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 3px;\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#pvqliyukyz .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#pvqliyukyz .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#pvqliyukyz .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#pvqliyukyz .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#pvqliyukyz .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#pvqliyukyz .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#pvqliyukyz .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#pvqliyukyz .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#pvqliyukyz .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#pvqliyukyz .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#pvqliyukyz .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#pvqliyukyz .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#pvqliyukyz .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#pvqliyukyz .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#pvqliyukyz .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#pvqliyukyz .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#pvqliyukyz .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#pvqliyukyz .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#pvqliyukyz .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#pvqliyukyz .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#pvqliyukyz .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#pvqliyukyz .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#pvqliyukyz .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#pvqliyukyz .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#pvqliyukyz .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #D3D3D3;\n}\n\n#pvqliyukyz .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#pvqliyukyz .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#pvqliyukyz .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#pvqliyukyz .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#pvqliyukyz .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#pvqliyukyz .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#pvqliyukyz .gt_left {\n  text-align: left;\n}\n\n#pvqliyukyz .gt_center {\n  text-align: center;\n}\n\n#pvqliyukyz .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#pvqliyukyz .gt_font_normal {\n  font-weight: normal;\n}\n\n#pvqliyukyz .gt_font_bold {\n  font-weight: bold;\n}\n\n#pvqliyukyz .gt_font_italic {\n  font-style: italic;\n}\n\n#pvqliyukyz .gt_super {\n  font-size: 65%;\n}\n\n#pvqliyukyz .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#pvqliyukyz .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#pvqliyukyz .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#pvqliyukyz .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#pvqliyukyz .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#pvqliyukyz .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#pvqliyukyz .gt_indent_5 {\n  text-indent: 25px;\n}\n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n  <thead>\n    \n    <tr class=\"gt_col_headings\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"&lt;strong&gt;Characteristic&lt;/strong&gt;\"><strong>Characteristic</strong></th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"&lt;strong&gt;N = 3,690&lt;/strong&gt;&lt;span class=&quot;gt_footnote_marks&quot; style=&quot;white-space:nowrap;font-style:italic;font-weight:normal;&quot;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/span&gt;\"><strong>N = 3,690</strong><span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;\"><sup>1</sup></span></th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">Ever used grass or hash?</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\"><br /></td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    Yes</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">1,991 (54%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    No</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">1,699 (46%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">gender</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\"><br /></td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    Male</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">1,792 (49%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    Female</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">1,898 (51%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">Age Category</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\"><br /></td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    18 - 29</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">1,154 (31%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    30 - 39</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">859 (23%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    40 - 49</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">855 (23%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    50 - 59</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">822 (22%)</td></tr>\n  </tbody>\n  \n  <tfoot class=\"gt_footnotes\">\n    <tr>\n      <td class=\"gt_footnote\" colspan=\"2\"><span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;\"><sup>1</sup></span> n (%)</td>\n    </tr>\n  </tfoot>\n</table>\n</div>\n```\n\n:::\n:::\n\n\n::::\n:::::\n\n\n###### 5\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-chap01-gtsummary-group}\n: Summarize data by a grouped variable\n::::::\n:::\n::::{.my-r-code-container}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nchap01_gtsummary_group <-  chap01_gtsummary_basic |> \n    labelled::set_variable_labels(\n        grass = \"Ever used grass or hash?\"\n    ) |> \n    gtsummary::tbl_summary(\n        by = grass,\n        type = grass ~ \"categorical\",\n        label = list(\n            age_cat = \"Age Category\",\n            sex = \"Sex\"\n        )\n    )\n\nchap01_gtsummary_group\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div id=\"sqnnofxoke\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>#sqnnofxoke table {\n  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#sqnnofxoke thead, #sqnnofxoke tbody, #sqnnofxoke tfoot, #sqnnofxoke tr, #sqnnofxoke td, #sqnnofxoke th {\n  border-style: none;\n}\n\n#sqnnofxoke p {\n  margin: 0;\n  padding: 0;\n}\n\n#sqnnofxoke .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#sqnnofxoke .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#sqnnofxoke .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#sqnnofxoke .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 3px;\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#sqnnofxoke .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#sqnnofxoke .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#sqnnofxoke .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#sqnnofxoke .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#sqnnofxoke .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#sqnnofxoke .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#sqnnofxoke .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#sqnnofxoke .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#sqnnofxoke .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#sqnnofxoke .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#sqnnofxoke .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#sqnnofxoke .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#sqnnofxoke .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#sqnnofxoke .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#sqnnofxoke .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#sqnnofxoke .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#sqnnofxoke .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#sqnnofxoke .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#sqnnofxoke .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#sqnnofxoke .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#sqnnofxoke .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#sqnnofxoke .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#sqnnofxoke .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#sqnnofxoke .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#sqnnofxoke .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #D3D3D3;\n}\n\n#sqnnofxoke .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#sqnnofxoke .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#sqnnofxoke .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#sqnnofxoke .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#sqnnofxoke .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#sqnnofxoke .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#sqnnofxoke .gt_left {\n  text-align: left;\n}\n\n#sqnnofxoke .gt_center {\n  text-align: center;\n}\n\n#sqnnofxoke .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#sqnnofxoke .gt_font_normal {\n  font-weight: normal;\n}\n\n#sqnnofxoke .gt_font_bold {\n  font-weight: bold;\n}\n\n#sqnnofxoke .gt_font_italic {\n  font-style: italic;\n}\n\n#sqnnofxoke .gt_super {\n  font-size: 65%;\n}\n\n#sqnnofxoke .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#sqnnofxoke .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#sqnnofxoke .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#sqnnofxoke .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#sqnnofxoke .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#sqnnofxoke .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#sqnnofxoke .gt_indent_5 {\n  text-indent: 25px;\n}\n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n  <thead>\n    \n    <tr class=\"gt_col_headings\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"&lt;strong&gt;Characteristic&lt;/strong&gt;\"><strong>Characteristic</strong></th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"&lt;strong&gt;Yes&lt;/strong&gt;, N = 1,991&lt;span class=&quot;gt_footnote_marks&quot; style=&quot;white-space:nowrap;font-style:italic;font-weight:normal;&quot;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/span&gt;\"><strong>Yes</strong>, N = 1,991<span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;\"><sup>1</sup></span></th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"&lt;strong&gt;No&lt;/strong&gt;, N = 1,699&lt;span class=&quot;gt_footnote_marks&quot; style=&quot;white-space:nowrap;font-style:italic;font-weight:normal;&quot;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/span&gt;\"><strong>No</strong>, N = 1,699<span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;\"><sup>1</sup></span></th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">gender</td>\n<td headers=\"stat_1\" class=\"gt_row gt_center\"><br /></td>\n<td headers=\"stat_2\" class=\"gt_row gt_center\"><br /></td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    Male</td>\n<td headers=\"stat_1\" class=\"gt_row gt_center\">1,072 (54%)</td>\n<td headers=\"stat_2\" class=\"gt_row gt_center\">720 (42%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    Female</td>\n<td headers=\"stat_1\" class=\"gt_row gt_center\">919 (46%)</td>\n<td headers=\"stat_2\" class=\"gt_row gt_center\">979 (58%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">Age Category</td>\n<td headers=\"stat_1\" class=\"gt_row gt_center\"><br /></td>\n<td headers=\"stat_2\" class=\"gt_row gt_center\"><br /></td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    18 - 29</td>\n<td headers=\"stat_1\" class=\"gt_row gt_center\">662 (33%)</td>\n<td headers=\"stat_2\" class=\"gt_row gt_center\">492 (29%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    30 - 39</td>\n<td headers=\"stat_1\" class=\"gt_row gt_center\">466 (23%)</td>\n<td headers=\"stat_2\" class=\"gt_row gt_center\">393 (23%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    40 - 49</td>\n<td headers=\"stat_1\" class=\"gt_row gt_center\">405 (20%)</td>\n<td headers=\"stat_2\" class=\"gt_row gt_center\">450 (26%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    50 - 59</td>\n<td headers=\"stat_1\" class=\"gt_row gt_center\">458 (23%)</td>\n<td headers=\"stat_2\" class=\"gt_row gt_center\">364 (21%)</td></tr>\n  </tbody>\n  \n  <tfoot class=\"gt_footnotes\">\n    <tr>\n      <td class=\"gt_footnote\" colspan=\"3\"><span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;\"><sup>1</sup></span> n (%)</td>\n    </tr>\n  </tfoot>\n</table>\n</div>\n```\n\n:::\n:::\n\n\nThe variable `grass` is not grouped `dplyr::group_by()` but inside `gtsummary::tbl_summary()`.\n\n::::\n:::::\n\n\n\n###### 6\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-chap01-gtsummary-header}\n: Change table header\n::::::\n:::\n::::{.my-r-code-container}\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nchap01_gtsummary_group |> \n  gtsummary::modify_header(label ~ \"**Variable**\") |> \n  gtsummary::modify_spanning_header(\n      c(\"stat_1\", \"stat_2\") ~ \"**Ever used grass or hash?**\")\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div id=\"byknbbjyve\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>#byknbbjyve table {\n  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#byknbbjyve thead, #byknbbjyve tbody, #byknbbjyve tfoot, #byknbbjyve tr, #byknbbjyve td, #byknbbjyve th {\n  border-style: none;\n}\n\n#byknbbjyve p {\n  margin: 0;\n  padding: 0;\n}\n\n#byknbbjyve .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#byknbbjyve .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#byknbbjyve .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#byknbbjyve .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 3px;\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#byknbbjyve .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#byknbbjyve .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#byknbbjyve .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#byknbbjyve .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#byknbbjyve .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#byknbbjyve .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#byknbbjyve .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#byknbbjyve .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#byknbbjyve .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#byknbbjyve .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#byknbbjyve .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#byknbbjyve .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#byknbbjyve .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#byknbbjyve .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#byknbbjyve .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#byknbbjyve .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#byknbbjyve .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#byknbbjyve .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#byknbbjyve .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#byknbbjyve .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#byknbbjyve .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#byknbbjyve .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#byknbbjyve .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#byknbbjyve .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#byknbbjyve .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #D3D3D3;\n}\n\n#byknbbjyve .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#byknbbjyve .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#byknbbjyve .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#byknbbjyve .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#byknbbjyve .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#byknbbjyve .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#byknbbjyve .gt_left {\n  text-align: left;\n}\n\n#byknbbjyve .gt_center {\n  text-align: center;\n}\n\n#byknbbjyve .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#byknbbjyve .gt_font_normal {\n  font-weight: normal;\n}\n\n#byknbbjyve .gt_font_bold {\n  font-weight: bold;\n}\n\n#byknbbjyve .gt_font_italic {\n  font-style: italic;\n}\n\n#byknbbjyve .gt_super {\n  font-size: 65%;\n}\n\n#byknbbjyve .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#byknbbjyve .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#byknbbjyve .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#byknbbjyve .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#byknbbjyve .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#byknbbjyve .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#byknbbjyve .gt_indent_5 {\n  text-indent: 25px;\n}\n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n  <thead>\n    \n    <tr class=\"gt_col_headings gt_spanner_row\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"2\" colspan=\"1\" scope=\"col\" id=\"&lt;strong&gt;Variable&lt;/strong&gt;\"><strong>Variable</strong></th>\n      <th class=\"gt_center gt_columns_top_border gt_column_spanner_outer\" rowspan=\"1\" colspan=\"2\" scope=\"colgroup\" id=\"&lt;strong&gt;Ever used grass or hash?&lt;/strong&gt;\">\n        <span class=\"gt_column_spanner\"><strong>Ever used grass or hash?</strong></span>\n      </th>\n    </tr>\n    <tr class=\"gt_col_headings\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"&lt;strong&gt;Yes&lt;/strong&gt;, N = 1,991&lt;span class=&quot;gt_footnote_marks&quot; style=&quot;white-space:nowrap;font-style:italic;font-weight:normal;&quot;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/span&gt;\"><strong>Yes</strong>, N = 1,991<span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;\"><sup>1</sup></span></th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"&lt;strong&gt;No&lt;/strong&gt;, N = 1,699&lt;span class=&quot;gt_footnote_marks&quot; style=&quot;white-space:nowrap;font-style:italic;font-weight:normal;&quot;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/span&gt;\"><strong>No</strong>, N = 1,699<span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;\"><sup>1</sup></span></th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">Age Category</td>\n<td headers=\"stat_1\" class=\"gt_row gt_center\"><br /></td>\n<td headers=\"stat_2\" class=\"gt_row gt_center\"><br /></td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    18 - 29</td>\n<td headers=\"stat_1\" class=\"gt_row gt_center\">662 (33%)</td>\n<td headers=\"stat_2\" class=\"gt_row gt_center\">492 (29%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    30 - 39</td>\n<td headers=\"stat_1\" class=\"gt_row gt_center\">466 (23%)</td>\n<td headers=\"stat_2\" class=\"gt_row gt_center\">393 (23%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    40 - 49</td>\n<td headers=\"stat_1\" class=\"gt_row gt_center\">405 (20%)</td>\n<td headers=\"stat_2\" class=\"gt_row gt_center\">450 (26%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    50 - 59</td>\n<td headers=\"stat_1\" class=\"gt_row gt_center\">458 (23%)</td>\n<td headers=\"stat_2\" class=\"gt_row gt_center\">364 (21%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">Gender</td>\n<td headers=\"stat_1\" class=\"gt_row gt_center\"><br /></td>\n<td headers=\"stat_2\" class=\"gt_row gt_center\"><br /></td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    Male</td>\n<td headers=\"stat_1\" class=\"gt_row gt_center\">1,072 (54%)</td>\n<td headers=\"stat_2\" class=\"gt_row gt_center\">720 (42%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    Female</td>\n<td headers=\"stat_1\" class=\"gt_row gt_center\">919 (46%)</td>\n<td headers=\"stat_2\" class=\"gt_row gt_center\">979 (58%)</td></tr>\n  </tbody>\n  \n  <tfoot class=\"gt_footnotes\">\n    <tr>\n      <td class=\"gt_footnote\" colspan=\"3\"><span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;\"><sup>1</sup></span> n (%)</td>\n    </tr>\n  </tfoot>\n</table>\n</div>\n```\n\n:::\n:::\n\n\n\n\n::::\n:::::\n\n\n\n\n###### 7\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-chap01-gtsummary-cross-table}\n: Prepare cross tables and stack them \n::::::\n:::\n::::{.my-r-code-container}\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngtsummary_basic <- \n    base::readRDS(\"data/chap01/gtsummary_clean.rds\")\n\ngtsummary_cross1 <- gtsummary_basic |> \n    labelled::set_variable_labels(\n            grass = \"**Ever used grass or hash?**\"\n        ) |> \n    gtsummary::tbl_cross(\n        label = list(\n            age_cat = \"Age Category\",\n            sex = \"Sex\"\n        ),\n        row = age_cat,\n        col = grass,\n        percent = \"cell\"\n    ) |> \n    gtsummary::modify_header(\n      stat_1 = '**Yes**',\n      stat_2 = '**No**',\n      stat_0 = '**Total**'\n    ) \n\ngtsummary_cross2 <- gtsummary_basic |> \n    labelled::set_variable_labels(\n            grass = \"**Ever used grass or hash?**\"\n        ) |> \n    gtsummary::tbl_cross(\n        label = list(\n            age_cat = \"Age Category\",\n            sex = \"Sex\"\n        ),\n        row = sex,\n        col = grass,\n        percent = \"cell\"\n    ) |> \n    gtsummary::modify_header(\n      stat_1 = '**Yes**',\n      stat_2 = '**No**',\n      stat_0 = '**Total**'\n    )\n\ngtsummary::tbl_stack(\n    list(gtsummary_cross1,\n         gtsummary_cross2)\n    ) |> \n    gtsummary::bold_labels() \n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div id=\"taqabhpcem\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>#taqabhpcem table {\n  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#taqabhpcem thead, #taqabhpcem tbody, #taqabhpcem tfoot, #taqabhpcem tr, #taqabhpcem td, #taqabhpcem th {\n  border-style: none;\n}\n\n#taqabhpcem p {\n  margin: 0;\n  padding: 0;\n}\n\n#taqabhpcem .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#taqabhpcem .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#taqabhpcem .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#taqabhpcem .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 3px;\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#taqabhpcem .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#taqabhpcem .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#taqabhpcem .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#taqabhpcem .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#taqabhpcem .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#taqabhpcem .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#taqabhpcem .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#taqabhpcem .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#taqabhpcem .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#taqabhpcem .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#taqabhpcem .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#taqabhpcem .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#taqabhpcem .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#taqabhpcem .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#taqabhpcem .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#taqabhpcem .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#taqabhpcem .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#taqabhpcem .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#taqabhpcem .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#taqabhpcem .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#taqabhpcem .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#taqabhpcem .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#taqabhpcem .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#taqabhpcem .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#taqabhpcem .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #D3D3D3;\n}\n\n#taqabhpcem .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#taqabhpcem .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#taqabhpcem .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#taqabhpcem .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#taqabhpcem .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#taqabhpcem .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#taqabhpcem .gt_left {\n  text-align: left;\n}\n\n#taqabhpcem .gt_center {\n  text-align: center;\n}\n\n#taqabhpcem .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#taqabhpcem .gt_font_normal {\n  font-weight: normal;\n}\n\n#taqabhpcem .gt_font_bold {\n  font-weight: bold;\n}\n\n#taqabhpcem .gt_font_italic {\n  font-style: italic;\n}\n\n#taqabhpcem .gt_super {\n  font-size: 65%;\n}\n\n#taqabhpcem .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#taqabhpcem .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#taqabhpcem .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#taqabhpcem .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#taqabhpcem .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#taqabhpcem .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#taqabhpcem .gt_indent_5 {\n  text-indent: 25px;\n}\n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n  <thead>\n    <tr class=\"gt_col_headings gt_spanner_row\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"2\" colspan=\"1\" scope=\"col\" id=\"\"></th>\n      <th class=\"gt_center gt_columns_top_border gt_column_spanner_outer\" rowspan=\"1\" colspan=\"2\" scope=\"colgroup\" id=\"&lt;strong&gt;Ever used grass or hash?&lt;/strong&gt;\">\n        <span class=\"gt_column_spanner\"><strong>Ever used grass or hash?</strong></span>\n      </th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"2\" colspan=\"1\" scope=\"col\" id=\"&lt;strong&gt;Total&lt;/strong&gt;\"><strong>Total</strong></th>\n    </tr>\n    <tr class=\"gt_col_headings\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"&lt;strong&gt;Yes&lt;/strong&gt;\"><strong>Yes</strong></th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"&lt;strong&gt;No&lt;/strong&gt;\"><strong>No</strong></th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><td headers=\"label\" class=\"gt_row gt_left\" style=\"font-weight: bold;\">Age Category</td>\n<td headers=\"stat_1\" class=\"gt_row gt_center\"><br /></td>\n<td headers=\"stat_2\" class=\"gt_row gt_center\"><br /></td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\"><br /></td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    18 - 29</td>\n<td headers=\"stat_1\" class=\"gt_row gt_center\">662 (18%)</td>\n<td headers=\"stat_2\" class=\"gt_row gt_center\">492 (13%)</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">1,154 (31%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    30 - 39</td>\n<td headers=\"stat_1\" class=\"gt_row gt_center\">466 (13%)</td>\n<td headers=\"stat_2\" class=\"gt_row gt_center\">393 (11%)</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">859 (23%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    40 - 49</td>\n<td headers=\"stat_1\" class=\"gt_row gt_center\">405 (11%)</td>\n<td headers=\"stat_2\" class=\"gt_row gt_center\">450 (12%)</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">855 (23%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    50 - 59</td>\n<td headers=\"stat_1\" class=\"gt_row gt_center\">458 (12%)</td>\n<td headers=\"stat_2\" class=\"gt_row gt_center\">364 (9.9%)</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">822 (22%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\" style=\"font-weight: bold;\">Total</td>\n<td headers=\"stat_1\" class=\"gt_row gt_center\">1,991 (54%)</td>\n<td headers=\"stat_2\" class=\"gt_row gt_center\">1,699 (46%)</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">3,690 (100%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\" style=\"font-weight: bold;\">Sex</td>\n<td headers=\"stat_1\" class=\"gt_row gt_center\"><br /></td>\n<td headers=\"stat_2\" class=\"gt_row gt_center\"><br /></td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\"><br /></td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    Male</td>\n<td headers=\"stat_1\" class=\"gt_row gt_center\">1,072 (29%)</td>\n<td headers=\"stat_2\" class=\"gt_row gt_center\">720 (20%)</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">1,792 (49%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    Female</td>\n<td headers=\"stat_1\" class=\"gt_row gt_center\">919 (25%)</td>\n<td headers=\"stat_2\" class=\"gt_row gt_center\">979 (27%)</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">1,898 (51%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\" style=\"font-weight: bold;\">Total</td>\n<td headers=\"stat_1\" class=\"gt_row gt_center\">1,991 (54%)</td>\n<td headers=\"stat_2\" class=\"gt_row gt_center\">1,699 (46%)</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">3,690 (100%)</td></tr>\n  </tbody>\n  \n  \n</table>\n</div>\n```\n\n:::\n:::\n\n\n::::\n:::::\n\n\n###### 8\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-ID-chap01-gtsummary-stratify}\n: Stratify tables\n::::::\n:::\n::::{.my-r-code-container}\n\n\n\n::: {#tbl-gts-stratify .cell tbl-cap='Did you ever use marijuana or hashish?'}\n\n```{.r .cell-code}\ngtsummary_basic <- \n    base::readRDS(\"data/chap01/gtsummary_clean.rds\")\n\ngtsummary_basic |> \n    gtsummary::tbl_strata(\n        strata = grass,\n        ~ .x |> \n    gtsummary::tbl_summary(\n        by = sex,\n        label = age_cat ~ \"Age Category\"\n        ) |> \n    gtsummary::add_overall() |> \n    gtsummary::modify_header(\n        label = \"**Variables**\",\n        gtsummary::all_stat_cols() ~ \"**{level}**\"\n        )\n    ) |> \n  gtsummary::bold_labels() \n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div id=\"vtwvzmekou\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>#vtwvzmekou table {\n  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#vtwvzmekou thead, #vtwvzmekou tbody, #vtwvzmekou tfoot, #vtwvzmekou tr, #vtwvzmekou td, #vtwvzmekou th {\n  border-style: none;\n}\n\n#vtwvzmekou p {\n  margin: 0;\n  padding: 0;\n}\n\n#vtwvzmekou .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#vtwvzmekou .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#vtwvzmekou .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#vtwvzmekou .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 3px;\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#vtwvzmekou .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#vtwvzmekou .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#vtwvzmekou .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#vtwvzmekou .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#vtwvzmekou .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#vtwvzmekou .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#vtwvzmekou .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#vtwvzmekou .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#vtwvzmekou .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#vtwvzmekou .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#vtwvzmekou .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#vtwvzmekou .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#vtwvzmekou .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#vtwvzmekou .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#vtwvzmekou .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#vtwvzmekou .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#vtwvzmekou .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#vtwvzmekou .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#vtwvzmekou .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#vtwvzmekou .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#vtwvzmekou .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#vtwvzmekou .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#vtwvzmekou .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#vtwvzmekou .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#vtwvzmekou .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #D3D3D3;\n}\n\n#vtwvzmekou .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#vtwvzmekou .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#vtwvzmekou .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#vtwvzmekou .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#vtwvzmekou .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#vtwvzmekou .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#vtwvzmekou .gt_left {\n  text-align: left;\n}\n\n#vtwvzmekou .gt_center {\n  text-align: center;\n}\n\n#vtwvzmekou .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#vtwvzmekou .gt_font_normal {\n  font-weight: normal;\n}\n\n#vtwvzmekou .gt_font_bold {\n  font-weight: bold;\n}\n\n#vtwvzmekou .gt_font_italic {\n  font-style: italic;\n}\n\n#vtwvzmekou .gt_super {\n  font-size: 65%;\n}\n\n#vtwvzmekou .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#vtwvzmekou .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#vtwvzmekou .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#vtwvzmekou .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#vtwvzmekou .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#vtwvzmekou .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#vtwvzmekou .gt_indent_5 {\n  text-indent: 25px;\n}\n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n  <thead>\n    <tr class=\"gt_col_headings gt_spanner_row\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"2\" colspan=\"1\" scope=\"col\" id=\"&lt;strong&gt;Variables&lt;/strong&gt;\"><strong>Variables</strong></th>\n      <th class=\"gt_center gt_columns_top_border gt_column_spanner_outer\" rowspan=\"1\" colspan=\"3\" scope=\"colgroup\" id=\"&lt;strong&gt;Yes&lt;/strong&gt;\">\n        <span class=\"gt_column_spanner\"><strong>Yes</strong></span>\n      </th>\n      <th class=\"gt_center gt_columns_top_border gt_column_spanner_outer\" rowspan=\"1\" colspan=\"3\" scope=\"colgroup\" id=\"&lt;strong&gt;No&lt;/strong&gt;\">\n        <span class=\"gt_column_spanner\"><strong>No</strong></span>\n      </th>\n    </tr>\n    <tr class=\"gt_col_headings\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"&lt;strong&gt;Overall&lt;/strong&gt;&lt;span class=&quot;gt_footnote_marks&quot; style=&quot;white-space:nowrap;font-style:italic;font-weight:normal;&quot;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/span&gt;\"><strong>Overall</strong><span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;\"><sup>1</sup></span></th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"&lt;strong&gt;Male&lt;/strong&gt;&lt;span class=&quot;gt_footnote_marks&quot; style=&quot;white-space:nowrap;font-style:italic;font-weight:normal;&quot;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/span&gt;\"><strong>Male</strong><span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;\"><sup>1</sup></span></th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"&lt;strong&gt;Female&lt;/strong&gt;&lt;span class=&quot;gt_footnote_marks&quot; style=&quot;white-space:nowrap;font-style:italic;font-weight:normal;&quot;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/span&gt;\"><strong>Female</strong><span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;\"><sup>1</sup></span></th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"&lt;strong&gt;Overall&lt;/strong&gt;&lt;span class=&quot;gt_footnote_marks&quot; style=&quot;white-space:nowrap;font-style:italic;font-weight:normal;&quot;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/span&gt;\"><strong>Overall</strong><span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;\"><sup>1</sup></span></th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"&lt;strong&gt;Male&lt;/strong&gt;&lt;span class=&quot;gt_footnote_marks&quot; style=&quot;white-space:nowrap;font-style:italic;font-weight:normal;&quot;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/span&gt;\"><strong>Male</strong><span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;\"><sup>1</sup></span></th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"&lt;strong&gt;Female&lt;/strong&gt;&lt;span class=&quot;gt_footnote_marks&quot; style=&quot;white-space:nowrap;font-style:italic;font-weight:normal;&quot;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/span&gt;\"><strong>Female</strong><span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;\"><sup>1</sup></span></th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><td headers=\"label\" class=\"gt_row gt_left\" style=\"font-weight: bold;\">Age Category</td>\n<td headers=\"stat_0_1\" class=\"gt_row gt_center\"><br /></td>\n<td headers=\"stat_1_1\" class=\"gt_row gt_center\"><br /></td>\n<td headers=\"stat_2_1\" class=\"gt_row gt_center\"><br /></td>\n<td headers=\"stat_0_2\" class=\"gt_row gt_center\"><br /></td>\n<td headers=\"stat_1_2\" class=\"gt_row gt_center\"><br /></td>\n<td headers=\"stat_2_2\" class=\"gt_row gt_center\"><br /></td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    18 - 29</td>\n<td headers=\"stat_0_1\" class=\"gt_row gt_center\">662 (33%)</td>\n<td headers=\"stat_1_1\" class=\"gt_row gt_center\">360 (34%)</td>\n<td headers=\"stat_2_1\" class=\"gt_row gt_center\">302 (33%)</td>\n<td headers=\"stat_0_2\" class=\"gt_row gt_center\">492 (29%)</td>\n<td headers=\"stat_1_2\" class=\"gt_row gt_center\">208 (29%)</td>\n<td headers=\"stat_2_2\" class=\"gt_row gt_center\">284 (29%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    30 - 39</td>\n<td headers=\"stat_0_1\" class=\"gt_row gt_center\">466 (23%)</td>\n<td headers=\"stat_1_1\" class=\"gt_row gt_center\">267 (25%)</td>\n<td headers=\"stat_2_1\" class=\"gt_row gt_center\">199 (22%)</td>\n<td headers=\"stat_0_2\" class=\"gt_row gt_center\">393 (23%)</td>\n<td headers=\"stat_1_2\" class=\"gt_row gt_center\">163 (23%)</td>\n<td headers=\"stat_2_2\" class=\"gt_row gt_center\">230 (23%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    40 - 49</td>\n<td headers=\"stat_0_1\" class=\"gt_row gt_center\">405 (20%)</td>\n<td headers=\"stat_1_1\" class=\"gt_row gt_center\">202 (19%)</td>\n<td headers=\"stat_2_1\" class=\"gt_row gt_center\">203 (22%)</td>\n<td headers=\"stat_0_2\" class=\"gt_row gt_center\">450 (26%)</td>\n<td headers=\"stat_1_2\" class=\"gt_row gt_center\">198 (28%)</td>\n<td headers=\"stat_2_2\" class=\"gt_row gt_center\">252 (26%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    50 - 59</td>\n<td headers=\"stat_0_1\" class=\"gt_row gt_center\">458 (23%)</td>\n<td headers=\"stat_1_1\" class=\"gt_row gt_center\">243 (23%)</td>\n<td headers=\"stat_2_1\" class=\"gt_row gt_center\">215 (23%)</td>\n<td headers=\"stat_0_2\" class=\"gt_row gt_center\">364 (21%)</td>\n<td headers=\"stat_1_2\" class=\"gt_row gt_center\">151 (21%)</td>\n<td headers=\"stat_2_2\" class=\"gt_row gt_center\">213 (22%)</td></tr>\n  </tbody>\n  \n  <tfoot class=\"gt_footnotes\">\n    <tr>\n      <td class=\"gt_footnote\" colspan=\"7\"><span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;\"><sup>1</sup></span> n (%)</td>\n    </tr>\n  </tfoot>\n</table>\n</div>\n```\n\n:::\n:::\n\n\n\n\n::::\n:::::\n\n\n\n\n:::\n\n\n::::\n:::::\n\n***\n\n\n## Opinions about legalizing marijuana (1973-2022) {#sec-chap01-grass-timeline}\n\n:::::{.my-experiment}\n:::{.my-experiment-header}\n:::::: {#def-chap01-timeline-grass}\n: Developing a graph showing the timeline of respondents opinion about legalizing marijuana (1973-2022)\n::::::\n:::\n::::{.my-experiment-container}\n\n::: {.panel-tabset}\n###### Load data\n\n\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-chap01-load-gss-grass-legal}\n: Load the GSS data from 1972-2022 and select appropriate variables\n::::::\n:::\n::::{.my-r-code-container}\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## run only once (manually) #########\n\nlibrary(gssr)   ## load package\ndata(gss_all)   ## attach GSS data \ndata(gss_dict)  ## attach codebook\ngss_grass_legal <- gss_all |> \n    dplyr::select(year, age, grass) \n\nsave_data_file(\"chap01\", gss_grass_legal, \"gss_grass_legal.rds\")\n\nbase::unloadNamespace(\"gssr\")\n```\n:::\n\n\n\n::::\n:::::\n\n(*This R code chunk has no visible output*)\n\n###### Clean data\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-chap01-clean-gss-grass-legal}\n: Clean `grass-legal` dataset\n::::::\n:::\n::::{.my-r-code-container}\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## run only once (manually) ##########\ngss_grass_legal <- \n    base::readRDS(\"data/chap01/gss_grass_legal.rds\")\n\ngss_grass_legal_clean <- gss_grass_legal |> \n    tidyr::drop_na() |> \n    dplyr::mutate(\n        grass = forcats::as_factor(grass),\n        grass = forcats::fct_drop(grass),\n        year = base::as.numeric(year),\n        age = base::as.numeric(age)\n    )\n\nsave_data_file(\"chap01\", gss_grass_legal_clean, \"gss_grass_legal_clean.rds\")\n```\n:::\n\n\n::::\n:::::\n\n(*This R code chunk has no visible output*)\n\n###### Show summary\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-chap01-gss-grass-clean-data}\n: Show summary of cleaned dataset\n::::::\n:::\n::::{.my-r-code-container}\n\n\n::: {#tbl-gtsummary-gss-grass-legal .cell tbl-cap='Summary of GSS surveys about opinion about legalizing marijuana between 1972-2022'}\n\n```{.r .cell-code}\ngrass_legal <- \n    base::readRDS(\"data/chap01/gss_grass_legal_clean.rds\")\n\n## remove comma from big numbers\ngtsummary::theme_gtsummary_language(\"en\", big.mark = \"\")\n\n\ngrass_legal |> \n  gtsummary::tbl_summary(\n    label = list(\n        year ~ \"Year\",\n        age ~ \"Age\",\n        grass ~ \"Should marijuana be legal?\"\n    ),\n    type = list(age ~ \"continuous2\", year ~ \"continuous2\"),\n    statistic = \n         list(\n            age ~ c(\n      \"{mean} ({sd})\",\n      \"{median} ({p25}, {p75})\",\n      \"{min}, {max}\"\n         ), \n            year ~ c(\"{min}, {max}\")\n    )\n  ) |> \n  gtsummary::italicize_levels() |> \n  gtsummary::bold_labels()\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div id=\"ijxrwgnlus\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>#ijxrwgnlus table {\n  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#ijxrwgnlus thead, #ijxrwgnlus tbody, #ijxrwgnlus tfoot, #ijxrwgnlus tr, #ijxrwgnlus td, #ijxrwgnlus th {\n  border-style: none;\n}\n\n#ijxrwgnlus p {\n  margin: 0;\n  padding: 0;\n}\n\n#ijxrwgnlus .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#ijxrwgnlus .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#ijxrwgnlus .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#ijxrwgnlus .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 3px;\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#ijxrwgnlus .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#ijxrwgnlus .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#ijxrwgnlus .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#ijxrwgnlus .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#ijxrwgnlus .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#ijxrwgnlus .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#ijxrwgnlus .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#ijxrwgnlus .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#ijxrwgnlus .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#ijxrwgnlus .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#ijxrwgnlus .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#ijxrwgnlus .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#ijxrwgnlus .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#ijxrwgnlus .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#ijxrwgnlus .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#ijxrwgnlus .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#ijxrwgnlus .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#ijxrwgnlus .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#ijxrwgnlus .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#ijxrwgnlus .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#ijxrwgnlus .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#ijxrwgnlus .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#ijxrwgnlus .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#ijxrwgnlus .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#ijxrwgnlus .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #D3D3D3;\n}\n\n#ijxrwgnlus .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#ijxrwgnlus .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#ijxrwgnlus .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#ijxrwgnlus .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#ijxrwgnlus .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#ijxrwgnlus .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#ijxrwgnlus .gt_left {\n  text-align: left;\n}\n\n#ijxrwgnlus .gt_center {\n  text-align: center;\n}\n\n#ijxrwgnlus .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#ijxrwgnlus .gt_font_normal {\n  font-weight: normal;\n}\n\n#ijxrwgnlus .gt_font_bold {\n  font-weight: bold;\n}\n\n#ijxrwgnlus .gt_font_italic {\n  font-style: italic;\n}\n\n#ijxrwgnlus .gt_super {\n  font-size: 65%;\n}\n\n#ijxrwgnlus .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#ijxrwgnlus .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#ijxrwgnlus .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#ijxrwgnlus .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#ijxrwgnlus .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#ijxrwgnlus .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#ijxrwgnlus .gt_indent_5 {\n  text-indent: 25px;\n}\n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n  <thead>\n    <tr class=\"gt_col_headings\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"&lt;strong&gt;Characteristic&lt;/strong&gt;\"><strong>Characteristic</strong></th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"&lt;strong&gt;N = 38479&lt;/strong&gt;&lt;span class=&quot;gt_footnote_marks&quot; style=&quot;white-space:nowrap;font-style:italic;font-weight:normal;&quot;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/span&gt;\"><strong>N = 38479</strong><span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;\"><sup>1</sup></span></th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><td headers=\"label\" class=\"gt_row gt_left\" style=\"font-weight: bold;\">Year</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\"><br /></td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\" style=\"font-style: italic;\">    Range</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">1973, 2022</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\" style=\"font-weight: bold;\">Age</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\"><br /></td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\" style=\"font-style: italic;\">    Mean (SD)</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">46 (18)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\" style=\"font-style: italic;\">    Median (IQR)</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">43 (31, 59)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\" style=\"font-style: italic;\">    Range</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">18, 89</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\" style=\"font-weight: bold;\">Should marijuana be legal?</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\"><br /></td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\" style=\"font-style: italic;\">    should be legal</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">12589 (33%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\" style=\"font-style: italic;\">    should not be legal</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">25890 (67%)</td></tr>\n  </tbody>\n  \n  <tfoot class=\"gt_footnotes\">\n    <tr>\n      <td class=\"gt_footnote\" colspan=\"2\"><span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;\"><sup>1</sup></span> n (%)</td>\n    </tr>\n  </tfoot>\n</table>\n</div>\n```\n\n:::\n:::\n\n\n\n\n::::\n:::::\n\n:::::{.my-watch-out}\n:::{.my-watch-out-header}\nWATCH OUT! Summary with labelled data\n:::\n::::{.my-watch-out-container}\n\nI used for the summary the labelled data from the {**gssr**} package. This has the big advantage that I didn't recode the variable names and could use the variable and value metadata!\n\nBut {**gtsummary**} warned me to see that this is only \"an intermediate data structure not meant for analysis\".  \n\n> Column(s) age are class \"haven_labelled\". This is an intermediate datastructure not meant for analysis. Convert columns with `haven::as_factor()`, `labelled::to_factor()`, `labelled::unlabelled()`, and `unclass()`. \"haven_labelled\" value labels are ignored when columns are not converted. Failure to convert may have unintended consequences or result in error.\n>\n> - [https://haven.tidyverse.org/articles/semantics.html](https://haven.tidyverse.org/articles/semantics.html)\n> - [https://larmarange.github.io/labelled/articles/intro_labelled.html#unlabelled](https://haven.tidyverse.org/articles/semantics.html)\n\n\n\n::::\n:::::\n\n###### Prepare data\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-chap01-gss-grass-prepare-data}\n: Prepare data for timeline graph\n::::::\n:::\n::::{.my-r-code-container}\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngrass_legal <- \n    base::readRDS(\"data/chap01/gss_grass_legal_clean.rds\")\n\n\ngrass_legal2 <- grass_legal |> \n    # labelled::remove_labels() |> \n    dplyr::group_by(year) |> \n    dplyr::add_count(name = \"N\") |> \n    dplyr::add_count(grass) |> \n    dplyr::mutate(perc = n / N * 100) |> \n    dplyr::ungroup()\n```\n:::\n\n\n::::\n:::::\n\n(*This R code chunk has no visible output*)\n\n###### Timeline\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-chap01-gss-grass-timeline}\n: Timeline of respondents opinion about legalizing marijuana (1973-2022)\n::::::\n:::\n::::{.my-r-code-container}\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngrass_legal2 |> \n    # dplyr::group_by(year) |> \n    ggplot2::ggplot(ggplot2::aes(\n        x = year, \n        y = perc,\n        color = grass)) +\n    ggplot2::geom_point() + \n    ggplot2::theme_bw() +\n    ggplot2::scale_color_manual(\n        values = c(\"#79a778\", '#7662aa')\n        ) +\n    ggplot2::scale_x_continuous(\n        breaks = c(1973, seq(1978, 2022, 4), 2022)\n        ) +\n    ggplot2::theme(axis.text.x =\n          ggplot2::element_text(angle = 45, vjust = 0.5)) +\n    ggplot2::labs(\n        x = \"Should marijuana be legal?\",\n        y = \"Percent of responses\",\n        color = \"Marijuana\") +\n    ggplot2::theme(legend.position = c(.82, .85))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n#> Warning: A numeric `legend.position` argument in `theme()` was deprecated in ggplot2\n#> 3.5.0.\n#> ℹ Please use the `legend.position.inside` argument of `theme()` instead.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![Timeline of respondents opinion about legalizing marijuana between 1972-2022 of the GSS data](01-preparing-data_files/figure-html/fig-gss-grass-timeline-1.png){#fig-gss-grass-timeline width=672}\n:::\n:::\n\n@fig-gss-grass-timeline shows that the proportion of people that support legalizing marijuana is (with the exception of 1978-1990) continuously rising. Starting from 19% support in 1973 approval hits 70% in 2022, the last date where data are available. The turning point where the proportion of affirmation was the first time greater than the disapproval was in 2014 (55/45).\n\n::::\n:::::\n\n\n\n:::\n\n\n::::\n:::::\n\n\n## Packages introduced in this chapter\n\n### data.table\n\n:::::{.my-resource}\n:::{.my-resource-header}\ndata.table: Extension of `data.frame` \n:::\n::::{.my-resource-container}\n\n***\n\n::: {#pak-data-table}\n\n***\n\n{**data.table**}: [Extension of `data.frame`](URL to package) [biblio]\n\n::: {layout=\"[10, 30]\" layout-valign=\"center\"}\n![](img/chap01/logoi/logo-data.table-min.png){width=\"176\"}\n{**data.table**} provides a high-performance version of base R’s data.frame with syntax and feature enhancements for ease of use, convenience and programming speed.\n\n:::\n\nFast aggregation of large data (e.g. 100GB in RAM), fast ordered joins, fast add/modify/delete of columns by group using no copies at all, list columns, friendly and fast character-separated-value read/write. Offers a natural and flexible syntax, for faster development.\n\n**Features**\n\n- fast and friendly delimited file reader: `data.table::fread()`, see also convenience features for small data\n- fast and feature rich delimited file writer: `data.table::fwrite()`\n- low-level parallelism: many common operations are internally parallelized to use multiple CPU threads\n- fast and scalable aggregations; e.g. 100GB in RAM (see benchmarks on up to two billion rows)\n- fast and feature rich joins: ordered joins (e.g. rolling forwards, backwards, nearest and limited staleness), overlapping range joins (similar to IRanges::findOverlaps), non-equi joins (i.e. joins using operators >, >=, <, <=), aggregate on join (by=.EACHI), update on join\n- fast add/update/delete columns by reference by group using no copies at all\n- fast and feature rich reshaping data: `data.table::dcast()` (pivot/wider/spread) and `data.table::melt()` (unpivot/longer/gather)\n- any R function from any R package can be used in queries not just the subset of functions made available by a database backend, also columns of type list are supported\n- has no dependencies at all other than base R itself, for simpler production/maintenance\n- the R dependency is as old as possible for as long as possible, dated April 2014, and we continuously test against that version; e.g. v1.11.0 released on 5 May 2018 bumped the dependency up from 5 year old R 3.0.0 to 4 year old R 3.1.0\n\n{**data.table**}: A Package for the Extension of `data.frame`\n:::\n\nI believe the most important application of {**data.table**} is working with huge amount of data (several GB). In the book SwR it is used in this first chapter with the `data.table::fread()` function. I have used here the `readr::read_csv()` as part of the {**tidyverse**} collection, because the dataset is very small (29 kB).\n\n\nWith {**DT**} there is another package that seems important. It is a wrapper of the JavaScript library 'DataTables' (See @pak-DT). I was using already {**DT**} to display interactive tables on websites, but I do not understand completely the difference between {**data.table**} and {**DT**}. \nAs far as I understood:\n\n- Using {**data.table**} is very fast but you will loose the inutitive function of the tidyverse.\n- {**DT**} is for the presentation of (large) interactive tables whereas {**data.table**} is for the fast manipulation of huge data sets.\n\n***\n::::\n:::::\n\n\n\n\n### dplyr\n\n:::::{.my-resource}\n:::{.my-resource-header}\ndplyr:: A Grammar of Data Manipulation\n:::\n::::{.my-resource-container}\n\n\n\n***\n\n::: {#pak-dplyr}\n\n***\n\n{**package**}: [A Grammar of Data Manipulation](https://dplyr.tidyverse.org/)\n\n::: {layout=\"[10, 30]\" layout-valign=\"center\"}\n![](img/chap01/logoi/logo-dplyr-min.png){width=\"176\"}\n\n{**dplyr**} is a grammar of data manipulation, providing a consistent set of verbs that help you solve the most common data manipulation challenges:\n- mutate() adds new variables that are functions of existing variables\n- select() picks variables based on their names.\n- filter() picks cases based on their values.\n- summarise() reduces multiple values down to a single summary.\n- arrange() changes the ordering of the rows. [@dplyr]\n\n:::\n\nThese all combine naturally with group_by() which allows you to perform any operation “by group”. You can learn more about them in [vignette(\"dplyr\")](https://dplyr.tidyverse.org/articles/dplyr.html). As well as these single-table verbs, dplyr also provides a variety of two-table verbs, which you can learn about in [vignette(\"two-table\")](https://dplyr.tidyverse.org/articles/two-table.html). [@dplyr]\n\n\nPackage for Data Manipulation\n:::\n\n\n\n\n\n::::\n:::::\n\n### DT\n\n:::::{.my-resource}\n:::{.my-resource-header}\nDT: A Wrapper of the JavaScript Library 'DataTables'\n:::\n::::{.my-resource-container}\n\n***\n\n::: {#pak-DT}\n\n***\n\n{**DT**}: [https://github.com/rstudio/DT](https://rstudio.github.io/DT/)\n\n(*There is no hexagon icon available for {**DT**}*)\n\nData objects in R can be rendered as HTML tables using the JavaScript library [DataTables](https://datatables.net/) (typically via R Markdown or Shiny). The 'DataTables' library has been included in this R package. The package name {**DT**} is an abbreviation of 'DataTables'.\n\n{**DT**}: A Package as Wrapper of the JavaScript Library 'DataTables'\n:::\n\nWhat I do not understand: What is the relationship of {**DT**} to the {**data.table**} package?\n***\n::::\n:::::\n\n\n### forcats\n\n:::::{.my-resource}\n:::{.my-resource-header}\nforcats: Tools for Working with Categorical Variables\n:::\n::::{.my-resource-container}\n\n\n\n***\n\n::: {#pak-forcats}\n\n***\n\n{**forcats**}: [Tools for Working with Categorical Variables (Factors)](https://forcats.tidyverse.org/)\n\n{**forcats**} provide a suite of useful tools that solve common problems with factors.\n\"Forcats\" is an anagram of \"factors\" and part of the {**tidyverse**} suite of packages.\n\n::: {layout=\"[10, 30]\" layout-valign=\"center\"}\n![](img/chap01/logoi/logo-forcats-min.png){width=\"176\"}\n\n(1) reordering factor levels\n    - moving specified levels to front, \n    - ordering by first appearance, \n    - reversing, and \n    - randomly shuffling\n(2) tools for modifying factor levels\n    - collapsing rare levels into other, \n    - 'anonymizing', and\n    - manually 'recoding'\n:::\n\nforcats: A Package with Tools for Working with Categorical Variables\n\n:::\n\n***\n\n\n::::\n:::::\n\n### ggplot2\n\n:::::{.my-resource}\n:::{.my-resource-header}\nggplot2: Create Elegant Data Visualisations Using the Grammar of Graphics\n:::\n::::{.my-resource-container}\n\n\n***\n\n::: {#pak-ggplot2}\n\n***\n\n{**ggplot2**}: [Create Elegant Data Visualisations Using the Grammar of Graphics](https://ggplot2.tidyverse.org/)\n\n::: {layout=\"[10, 30]\" layout-valign=\"center\"}\n![](img/chap01/logoi/logo-ggplot2-min.png){width=\"176\"}\n\n{**ggplot2**} is a system for declaratively creating graphics, based on [The Grammar of Graphics](https://link.springer.com/book/10.1007/0-387-28695-0). You provide the data, tell {**ggplot2**} how to map variables to aesthetics, what graphical primitives to use, and it takes care of the details. [@ggplot2]\n\n:::\n\n\nPackage for Creating Data Visualisations\n:::\n\n***\n\n\n::::\n:::::\n\n\n### gssr\n\n:::::{.my-resource}\n:::{.my-resource-header}\ngssr: US General Social Survey (GSS) Data for R\n:::\n::::{.my-resource-container}\n\n***\n\n::: {#pak-gssr}\n\n***\n\n{**gssr**}: [US General Social Survey (GSS) Data for R](https://kjhealy.github.io/gssr/)\n\n::: {layout=\"[10, 30]\" layout-valign=\"center\"}\n![](img/chap01/logoi/logo-gssr-min.png){width=\"376\"}\n\n[GSSR Package](https://kjhealy.github.io/gssr/): The General Social\nSurvey Cumulative Data (1972-2022) and Panel Data files packaged for\neasy use in R. {**gssr**} is a data package, developed and maintained by\n[Kieran Healy](https://kieranhealy.org/), the author of [Data\nVisualization](https://kieranhealy.org/publications/dataviz/). The\npackage bundles several datasets into a convenient format. Because of\nits large size {**gssr**} is not hosted on CRAN but as a [GitHub\nrepository](https://github.com/kjhealy/gssr/).\n\n:::\n\nInstead of browsing and examining the complex dataset with the [GSS Data\nExplorer](https://gssdataexplorer.norc.org/) or [download datasets\ndirectly](https://gss.norc.org/Get-The-Data) from the The National\nOpinion Research Center ([NORC](http://norc.org/)) you can now just work\ninside R. The current package 0.4 (see: [gssr\nUpdate](https://kieranhealy.org/blog/archives/2023/12/02/gssr-update/))\nprovides the GSS Cumulative Data File (1972-2022), three GSS Three Wave\nPanel Data Files (for panels beginning in 2006, 2008, and 2010,\nrespectively), and the 2020 panel file.\n\nVersion 0.40 also integrates survey code book information about\nvariables directly into R’s help system, allowing them to be accessed\nvia the help browser or from the console with ?, as if they were\nfunctions or other documented objects.\n\nPackage for Getting the US General Social Survey (GSS) Data More Easily\n\n:::\n***\n\n\n::::\n:::::\n\n### gt\n\n:::::{.my-resource}\n:::{.my-resource-header}\ngt: Easily Create Presentation-Ready Display Tables\n:::\n::::{.my-resource-container}\n\n***\n\n::: {#pak-gt}\n\n***\n\n{**gt**}: [Easily Create Presentation-Ready Display Tables](https://gt.rstudio.com)\n\n::: {layout=\"[10, 30]\" layout-valign=\"center\"}\n![](img/chap02/logoi/logo-gt-min.png){width=\"176\"}\n\nWith the {**gt**} package, anyone can make wonderful-looking tables using the R programming language. The gt philosophy: we can construct a wide variety of useful tables with a cohesive set of table parts. These include the table header, the stub, the column labels and spanner column labels, the table body, and the table footer.\n\n\n\n:::\n\n{**gt**}: A Package for Presentation-Ready Display Tables\n:::\n\n***\n::::\n:::::\n\n\n### gtsummary\n\n:::::{.my-resource}\n:::{.my-resource-header}\n\ngtsummary: Presentation-Ready Data Summary and Analytic Result Tables\n\n:::\n::::{.my-resource-container}\n\n***\n\n::: {#pak-gtsummary}\n\n***\n\n{**gtsummary**}: [Presentation-Ready Data Summary and Analytic Result Tables](https://www.danieldsjoberg.com/gtsummary/)\n\n::: {layout=\"[10, 30]\" layout-valign=\"center\"}\n![](img/chap01/logoi/logo-gtsummary-min.png){width=\"176\"}\n\nCreates presentation-ready tables summarizing data sets, regression models, and more. The code to create the tables is concise and highly customizable. Data frames can be summarized with any function, e.g. mean(), median(), even user-written functions. Regression models are summarized and include the reference rows for categorical variables. Common regression models, such as logistic regression and Cox proportional hazards regression, are automatically identified and the tables are pre-filled with appropriate column headers.\n\n\n\n:::\n\n- Summarize data frames or tibbles easily in R. Perfect for creating a <a class='glossary' title='Descriptive statistics are often displayed in the first table in a published article or report and are therefore often called Table 1 statistics or the descriptives. (SwR)'>Table 1</a>. \n- Summarize regression models in R and include reference rows for categorical variables. \n- Customize {**gtsummary**} tables using a growing list of formatting/styling functions. \n- Report statistics inline from summary tables and regression summary tables in R markdown. Make your reports completely reproducible!\n\nBy leveraging {**broom**}, {**gt**}, and {**labelled**} packages, {**gtsummary**} creates beautifully formatted, ready-to-share summary and result tables in a single line of R code!\n\nPackage for Presentation-Ready Data Summary and Analytic Result Tables\n\n:::\n\n\n\n***\n\n\n\n::::\n:::::\n\n\n\n### haven\n\n:::::{.my-resource}\n:::{.my-resource-header}\nhaven: Import and Export 'SPSS', 'Stata' and 'SAS' Files\n:::\n::::{.my-resource-container}\n\n***\n\n::: {#pak-haven}\n\n***\n\n{**haven**}: [Import and Export 'SPSS', 'Stata' and 'SAS'\nFiles](https://haven.tidyverse.org/index.html)\n\n{**haven**} enables R to read and write various data formats used by\nother statistical packages. Currently it supports\n[SAS](https://www.sas.com/en_us/home.html),\n[SPSS](https://www.ibm.com/spss) and [STATA](https://www.stata.com/).\n{**haven**} output object has four important features:\n\n\n::: {layout=\"[10, 30]\" layout-valign=\"center\"}\n![](img/chap01/logoi/logo-haven-min.png){width=\"176\"}\n\n(1) It creates `tibbles::tibble()` which a better print method for very\n    long and very wide files.\n(2) Dates and times are converted to R date/time classes.\n(3) Character vectors are not converted to factors.\n(4) Value labels are translated into a new `haven::labelled()` class,\n    which preserves the original semantics and can easily be coerced to\n    factors with `haven::as_factor()`. Special missing values are\n    preserved. See details in the vignette [Conversion\n    semantics](https://haven.tidyverse.org/articles/semantics.html).\n:::\n\nhaven: A Package for Import and Export of 'SPSS', 'Stata' and 'SAS'\nFiles\n:::\n\nI am here interested especially in the fourth feature.\n\n::::\n:::::\n\n### kableExtra\n\n:::::{.my-resource}\n:::{.my-resource-header}\nkableExtra: Construct Complex Table with `knitr::kable()` and Pipe Syntax\n:::\n::::{.my-resource-container}\n\n***\n\n::: {#pak-kableExtra}\n\n***\n\n{**kableExtra**}: [Construct Complex Table with 'kable' and Pipe Syntax](URL to package)\n\n::: {layout=\"[10, 30]\" layout-valign=\"center\"}\n![](img/chap02/logoi/logo-kableExtra-min.png){width=\"176\"}\n\nBuild complex HTML or {{< latex >}} tables using `kable()` from {**knitr**} and the piping syntax from {**magrittr**} Function `kable()` is a light weight table generator coming from {**knitr**}. This package simplifies the way to manipulate the HTML or {{< latex >}} codes generated by `kable()` and allows users to construct complex tables and customize styles using a readable syntax. \n\n:::\n\n{**pkg-name**}: A Package to Construct Complex Table with 'kable' and Pipe Syntax\n:::\n\n***\n::::\n:::::\n\n\n### knitr\n\n:::::{.my-resource}\n:::{.my-resource-header}\nknitr: A General-Purpose Package for Dynamic Report Generation in R\n:::\n::::{.my-resource-container}\n\n***\n\n::: {#pak-knitr}\n\n***\n\n{**knitr**}: [A General-Purpose Package for Dynamic Report Generation in R](https://yihui.org/knitr/)\n\n(*There is no hexagon logo available*)\n\nProvides a general-purpose tool for dynamic report generation in R using Literate Programming techniques.\n\n{**knitr**}: A Package for Dynamic Report Generation in R\n:::\n\n\n***\n::::\n:::::\n\n\n### labelled\n\n:::::{.my-resource}\n:::{.my-resource-header}\nlabelled: Manipulating Labelled Data\n:::\n::::{.my-resource-container}\n\n***\n\n::: {#pak-labelled}\n\n***\n{**labelled**}: [Manipulating Labelled\nData](https://larmarange.github.io/labelled/)\n\n::: {layout=\"[10, 30]\" layout-valign=\"center\"}\n![](img/chap01/logoi/logo-labelled-min.png){width=\"176\"}\n\nWork with labelled data imported from [IBM\nSPSS](https://www.ibm.com/spss) or [STATA](https://www.stata.com/) with\n{**haven**} or {**foreign**}. This package provides useful functions to\ndeal with \"haven_labelled\" and \"haven_labelled_spss\" classes introduced\nby {**haven**} package. (With the free [gnu\nPSPP](https://www.gnu.org/software/pspp/) exists also a SPSS like open\nsource version.) See details in the vignette [Introduction to\nlabelled](https://larmarange.github.io/labelled/articles/intro_labelled.html)\nand the [GitHub website for\nlabelled](https://larmarange.github.io/labelled/). There are other\nvignettes as well and a [cheat sheet as PDF for\ndownload](https://github.com/larmarange/labelled/raw/main/cheatsheet/labelled_cheatsheet.pdf).\n\n:::\n\nlabelled: A Package for Manipulating Labelled Data\n:::\n\n\n::::\n:::::\n\n\n### sjlabelled\n\n:::::{.my-resource}\n:::{.my-resource-header}\nsjlabelled; \n:::\n::::{.my-resource-container}\n\n***\n\n::: {#pak-sjlabelled}\n\n***\n\n{**sjlabelled**}: [Labelled Data Utility\nFunctions](https://strengejacke.github.io/sjlabelled/)\n\n::: {layout=\"[10, 30]\" layout-valign=\"center\"}\n![](img/chap01/logoi/logo-sjlabelled-min.png){width=\"176\"}\n\nBasically, this package covers reading and writing data between other\nstatistical packages (like ‘SPSS’) and R, based on the haven and foreign\npackages; hence, this package also includes functions to make working\nwith labelled data easier. This includes easy ways to get, set or change\nvalue and variable label attributes, to convert labelled vectors into\nfactors or numeric (and vice versa), or to deal with multiple declared\nmissing values.\n:::\n\nThe prefix `sj` in {**sjlabelled**} (= in German Strenge Jacke, \"strict\njacket\") refers to other work of [Daniel\nLüdecke](https://www.uke.de/kliniken-institute/institute/medizinische-soziologie/team/profil_daniel_luedecke_ims.html),\nwho has developed many R packages. All the `sj`-packages support labelled data.\n\nsjlabelled: A Package for Labelled Data Utility Functions\n\n:::\n\n***\n\nHis packages are divided in two approaches:\n\n1.  Most packages are part pf the project\n    [EasyStats](https://easystats.github.io/easystats/), that provides\n    with 11 packages \"An R Framework for Easy Statistical Modeling,\n    Visualization, and Reporting\", similar to the {**tidyverse**}\n    collection. The {**easystats**} collection is orientated more to\n    statistics, whereas {**tidyverse**} is more directed to data\n    science.\n2.  The other line of package development supports labelled data in\n    combination with different R task like\n    -   [Data and Variable Transformation\n        Functions](https://cran.r-project.org/web/packages/sjmisc/index.html)\n        {**sjmisc**},\n    -   [Data Visualization for Statistics in Social\n        Science](https://cran.r-project.org/web/packages/sjPlot/index.html)\n        {**sjPlot**} and a\n    -   [Collection of Convenient Functions for Common Statistical\n        Computations](https://cran.r-project.org/web/packages/sjstats/index.html)\n        {**sjStats**}. -Additionally there exists {**sjtable2df**} a\n        package to [Convert 'sjPlot' HTML-Tables to R\n        'data.frame'](https://cran.r-project.org/web/packages/sjtable2df/index.html).\n\n\n\n\n\n::::\n:::::\n\n\n### readr \n\n:::::{.my-resource}\n:::{.my-resource-header}\nreadr: Read Rectangular Text Data\n:::\n::::{.my-resource-container}\n\n\n***\n\n::: {#pak-readr}\n\n***\n\n{**readr**}: [Read Rectangular Text Data](https://readr.tidyverse.org/)\n\n::: {layout=\"[10, 30]\" layout-valign=\"center\"}\n![](img/chap01/logoi/logo-readr-min.png){width=\"176\"}\n\nThe goal of readr is to provide a fast and friendly way to read rectangular data from delimited files, such as comma-separated values (CSV) and tab-separated values (TSV). It is designed to parse many types of data found in the wild, while providing an informative problem report when parsing leads to unexpected results. [@readr] \n\n\n:::\n\n{**readr**} supports the following formats:\n\n- read_csv(): comma-separated values (CSV)\n- read_tsv(): tab-separated values (TSV)\n- read_csv2(): semicolon-separated values with , as the decimal mark\n- read_delim(): delimited files (CSV and TSV are important special cases)\n- read_fwf(): fixed-width files\n- read_table(): whitespace-separated files\n- read_log(): web log files\n\nPackage for Reading Rectangular Data\n\n:::\n\n\n***\n\n\n\n::::\n:::::\n\n### skimr\n\n\n\n:::::{.my-resource}\n:::{.my-resource-header}\nskimr: Compact and Flexible Summaries of Data\n:::\n::::{.my-resource-container}\n\n***\n\n::: {#pak-skimr}\n\n***\n\n{**skimr**}: [Compact and Flexible Summaries of Data](https://docs.ropensci.org/skimr/)\n\n::: {layout=\"[10, 30]\" layout-valign=\"center\"}\n![](img/chap01/logoi/logo-skimr-min.png){width=\"176\"}\n\nA simple to use summary function that can be used with pipes and displays nicely in the console. The default summary statistics may be modified by the user as can the default formatting.  Support for data frames and vectors is included, and users can implement their own skim methods for specific object types as described in a vignette. Default summaries include support for inline spark graphs. Instructions for managing these on specific operating systems are given in the [Using skimr](https://docs.ropensci.org/skimr/articles/skimr.html) vignette and the [README](https://github.com/ropensci/skimr/#skimr-).\n\n\n:::\n\nAt the moment I am just using the `skimr::skim()` function. I believe most of the many other functions for adaption are oriented to developers. But still: I need to have a closer look to this package.\n\n\nA Package for Compact and Flexible Summaries of Data\n:::\n\n***\n::::\n:::::\n\n\n\n\n\n\n\n### tibble \n\n:::::{.my-resource}\n:::{.my-resource-header}\ntibble: Simple Data Frames\n:::\n::::{.my-resource-container}\n\n\n***\n\n::: {#pak-tibble}\n\n***\n\n{**tibble**}: [Simple Data Frames](https://tibble.tidyverse.org/)\n\n::: {layout=\"[10, 30]\" layout-valign=\"center\"}\n![](img/chap01/logoi/logo-tibble-min.png){width=\"176\"}\n\nA tibble, or `tbl_df`, is a modern reimagining of the data.frame, keeping what time has proven to be effective, and throwing out what is not. Tibbles are data.frames that are lazy and surly: they do less (i.e. they don’t change variable names or types, and don’t do partial matching) and complain more (e.g. when a variable does not exist). This forces you to confront problems earlier, typically leading to cleaner, more expressive code. Tibbles also have an enhanced `print()` method which makes them easier to use with large datasets containing complex objects. [@tibble]\n\n:::\n\n\nPackage for Creating Simple Data Frames\n:::\n\n***\n\n\n::::\n:::::\n\n\n\n\n### tidyr \n\n:::::{.my-resource}\n:::{.my-resource-header}\ntidyr: Tidy Messy Data\n:::\n::::{.my-resource-container}\n\n\n***\n\n::: {#pak-tidyr}\n\n***\n\n{**tidyr**}: [Tidy Messy Data](https://tidyr.tidyverse.org/)\n\n::: {layout=\"[10, 30]\" layout-valign=\"center\"}\n![](img/chap01/logoi/logo-tidyr-min.png){width=\"176\"}\n\nThe goal of tidyr is to help you create tidy data. Tidy data describes a standard way of storing data that is used wherever possible throughout the tidyverse. If you ensure that your data is tidy, you’ll spend less time fighting with the tools and more time working on your analysis. [@tidyr] Tidy data is data where:\n- Every column is a variable.\n- Every row is an observation.\n- Every cell is a single value.\n\n:::\n\nPackages for Tidying Messy Data\n:::\n\n\n***\n\n::::\n:::::\n\n### tidyverse\n\n:::::{.my-resource}\n:::{.my-resource-header}\ntidyverse: Easily Install and Load the 'Tidyverse'\n:::\n::::{.my-resource-container}\n\n***\n\n::: {#pak-tidyverse}\n\n***\n\n{**tidyverse**}: [Easily Install and Load the 'Tidyverse'](https://www.tidyverse.org/)\n\n::: {layout=\"[10, 30]\" layout-valign=\"center\"}\n![](img/chap01/logoi/logo-tidyverse-min.png){width=\"176\"}\n\nThe {**tidyverse**} is an opinionated [collection of R packages](https://www.tidyverse.org/packages/) designed for data science. All packages share an underlying design philosophy, grammar, and data structures [@tidyverse]. Read more about the philosophy and purpose: [The tidy tools manifesto](https://tidyverse.tidyverse.org/articles/manifesto.html) and [Welcome to the {**tidyverse**}](https://tidyverse.tidyverse.org/articles/paper.html) \n\n:::\n\nIn this book I am not going to load {**tidyverse**} with all its packages. Instead I am using the `<package>::<function>` format to access the commands.\n\n\n\nMetapackage: Easily Install and Load the 'Tidyverse'\n\n***\n\n:::\n\n::::\n:::::\n\n\n## Glossary {.unnumbered}\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n`````{=html}\n<table class=\"table\" style=\"margin-left: auto; margin-right: auto;\">\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> term </th>\n   <th style=\"text-align:left;\"> definition </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> ACSPRI </td>\n   <td style=\"text-align:left;\"> Australian Consortium for Social and Political Research Inc. oganizes conferences and delivers course. (&lt;a href=\"https://www.acspri.org.au/\"&gt;ACSPRI&lt;/a&gt;) </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> CSV </td>\n   <td style=\"text-align:left;\"> Text files where the values are separated with commas (Comma Separated Values = CSV). These files have the file extension .csv </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Data Tables </td>\n   <td style=\"text-align:left;\"> Data Tables are --- in contrast to Display Tables --- for analysis and not for presentation. Another purpose of Data Tables is to store, retrieve and share information digitally. In R they are tibbles, data.frames etc. </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Display Tables </td>\n   <td style=\"text-align:left;\"> Display Tables are in constrast to Data Tables. You would find them in a web page, a journal article, or in a magazine. Such tables are for presentation, often to facilitate the construction of “Table 1”, i.e., baseline characteristics table commonly found in research papers. (&lt;a href= \"https://gt.rstudio.com/articles/gt.html\"&gt;Introduction to Creating gt Tables&lt;/a&gt;) </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> EDA </td>\n   <td style=\"text-align:left;\"> Explorative Data Analysis is an approach of analyzing data sets to summarize their main characteristics, often using statistical graphics and other data visualization methods. A statistical model can be used or not, but primarily EDA is for seeing what the data can tell us beyond the formal modeling and thereby contrasts traditional hypothesis testing. (&lt;a href=\"https://en.wikipedia.org/wiki/Exploratory_data_analysis\"&gt;Wikipedia&lt;/a&gt;) </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> General Social Survey </td>\n   <td style=\"text-align:left;\"> A large survey of a sample of people in the United States conducted regularly since 1972; the General Social Survey is abbreviated GSS and is conducted by the National Opinion Research Center at the University of Chicago. (Harris, Glossary) </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> GSS </td>\n   <td style=\"text-align:left;\"> A large survey of a sample of people in the United States conducted regularly since 1972; the General Social Survey is abbreviated GSS and is conducted by the National Opinion Research Center at the University of Chicago. (Harris, Glossary) </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Literate Programming </td>\n   <td style=\"text-align:left;\"> Literate programming is a methodology that combines a programming language with a documentation language, thereby making programs more robust, more portable, more easily maintained, and arguably more fun to write than programs that are written only in a high-level language. The main idea is to treat a program as a piece of literature, addressed to human beings rather than to a computer.(&lt;a href=\"https://www-cs-faculty.stanford.edu/~knuth/lp.html\"&gt;Donald Knuth&lt;/a&gt;) </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Microdata </td>\n   <td style=\"text-align:left;\"> Microdata are unit-level data obtained from sample surveys, censuses, and administrative systems. They provide information about characteristics of individual people or entities such as households, business enterprises, facilities, farms or even geographical areas such as villages or towns. They allow in-depth understanding of socio-economic issues by studying relationships and interactions among phenomena. Microdata are thus key to designing projects and formulating policies, targeting interventions and monitoring and measuring the impact and results of projects, interventions and policies. ([The World Bank] </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> NHANES </td>\n   <td style=\"text-align:left;\"> The National Health and Nutrition Examination Survey (NHANES) is a program of studies designed to assess the health and nutritional status of adults and children in the United States. The survey is unique in that it combines interviews and physical examinations. (&lt;a href=\"https://www.cdc.gov/nchs/nhanes/about_nhanes.htm\"&gt;NHANES&lt;/a&gt;) </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Prolog </td>\n   <td style=\"text-align:left;\"> A set of comments at the top of a code file that provides information about what is in the file (SwR, Glossary) </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Table 1 </td>\n   <td style=\"text-align:left;\"> Descriptive statistics are often displayed in the first table in a published article or report and are therefore often called &lt;i&gt;Table 1 statistics&lt;/i&gt; or the &lt;i&gt;descriptives&lt;/i&gt;. (SwR) </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\n\n\n\n\n## Session Info {.unnumbered}\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\nSession Info\n:::\n::::{.my-r-code-container}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsessioninfo::session_info()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> ─ Session info ───────────────────────────────────────────────────────────────\n#>  setting  value\n#>  version  R version 4.3.2 (2023-10-31)\n#>  os       macOS Sonoma 14.2.1\n#>  system   x86_64, darwin20\n#>  ui       X11\n#>  language (EN)\n#>  collate  en_US.UTF-8\n#>  ctype    en_US.UTF-8\n#>  tz       Europe/Vienna\n#>  date     2024-03-02\n#>  pandoc   3.1.12.1 @ /usr/local/bin/ (via rmarkdown)\n#> \n#> ─ Packages ───────────────────────────────────────────────────────────────────\n#>  package       * version    date (UTC) lib source\n#>  base64enc       0.1-3      2015-07-28 [1] CRAN (R 4.3.0)\n#>  bit             4.0.5      2022-11-15 [1] CRAN (R 4.3.0)\n#>  bit64           4.0.5      2020-08-30 [1] CRAN (R 4.3.0)\n#>  broom.helpers   1.14.0     2023-08-07 [1] CRAN (R 4.3.0)\n#>  cli             3.6.2      2023-12-11 [1] CRAN (R 4.3.0)\n#>  codetools       0.2-19     2023-02-01 [2] CRAN (R 4.3.2)\n#>  colorspace      2.1-1      2024-01-03 [1] R-Forge (R 4.3.2)\n#>  commonmark      1.9.1      2024-01-30 [1] CRAN (R 4.3.2)\n#>  crayon          1.5.2      2022-09-29 [1] CRAN (R 4.3.0)\n#>  curl            5.2.0      2023-12-08 [1] CRAN (R 4.3.2)\n#>  digest          0.6.34     2024-01-11 [1] CRAN (R 4.3.0)\n#>  dplyr           1.1.4      2023-11-17 [1] CRAN (R 4.3.0)\n#>  evaluate        0.23       2023-11-01 [1] CRAN (R 4.3.0)\n#>  fansi           1.0.6      2023-12-08 [1] CRAN (R 4.3.0)\n#>  farver          2.1.1      2022-07-06 [1] CRAN (R 4.3.0)\n#>  fastmap         1.1.1      2023-02-24 [1] CRAN (R 4.3.0)\n#>  forcats         1.0.0      2023-01-29 [1] CRAN (R 4.3.0)\n#>  generics        0.1.3      2022-07-05 [1] CRAN (R 4.3.0)\n#>  ggplot2         3.5.0      2024-02-23 [1] CRAN (R 4.3.2)\n#>  glossary      * 1.0.0.9000 2023-08-12 [1] Github (debruine/glossary@819e329)\n#>  glue            1.7.0      2024-01-09 [1] CRAN (R 4.3.0)\n#>  gt              0.10.1     2024-01-17 [1] CRAN (R 4.3.0)\n#>  gtable          0.3.4      2023-08-21 [1] CRAN (R 4.3.0)\n#>  gtsummary       1.7.2      2023-07-15 [1] CRAN (R 4.3.0)\n#>  haven           2.5.4      2023-11-30 [1] CRAN (R 4.3.2)\n#>  here            1.0.1      2020-12-13 [1] CRAN (R 4.3.0)\n#>  highr           0.10       2022-12-22 [1] CRAN (R 4.3.0)\n#>  hms             1.1.3      2023-03-21 [1] CRAN (R 4.3.0)\n#>  htmltools       0.5.7      2023-11-03 [1] CRAN (R 4.3.0)\n#>  htmlwidgets     1.6.4      2023-12-06 [1] CRAN (R 4.3.0)\n#>  jsonlite        1.8.8      2023-12-04 [1] CRAN (R 4.3.0)\n#>  kableExtra      1.4.0      2024-01-24 [1] CRAN (R 4.3.2)\n#>  knitr           1.45       2023-10-30 [1] CRAN (R 4.3.0)\n#>  labeling        0.4.3      2023-08-29 [1] CRAN (R 4.3.0)\n#>  labelled        2.12.0     2023-06-21 [1] CRAN (R 4.3.0)\n#>  lifecycle       1.0.4      2023-11-07 [1] CRAN (R 4.3.0)\n#>  magrittr        2.0.3      2022-03-30 [1] CRAN (R 4.3.0)\n#>  markdown        1.12       2023-12-06 [1] CRAN (R 4.3.0)\n#>  munsell         0.5.0      2018-06-12 [1] CRAN (R 4.3.0)\n#>  pillar          1.9.0      2023-03-22 [1] CRAN (R 4.3.0)\n#>  pkgconfig       2.0.3      2019-09-22 [1] CRAN (R 4.3.0)\n#>  purrr           1.0.2      2023-08-10 [1] CRAN (R 4.3.0)\n#>  R6              2.5.1      2021-08-19 [1] CRAN (R 4.3.0)\n#>  readr           2.1.5      2024-01-10 [1] CRAN (R 4.3.0)\n#>  repr            1.1.6      2023-01-26 [1] CRAN (R 4.3.0)\n#>  rlang           1.1.3      2024-01-10 [1] CRAN (R 4.3.0)\n#>  rmarkdown       2.25       2023-09-18 [1] CRAN (R 4.3.0)\n#>  rprojroot       2.0.4      2023-11-05 [1] CRAN (R 4.3.0)\n#>  rstudioapi      0.15.0     2023-07-07 [1] CRAN (R 4.3.0)\n#>  rversions       2.1.2      2022-08-31 [1] CRAN (R 4.3.0)\n#>  sass            0.4.8      2023-12-06 [1] CRAN (R 4.3.0)\n#>  scales          1.3.0      2023-11-28 [1] CRAN (R 4.3.2)\n#>  sessioninfo     1.2.2      2021-12-06 [1] CRAN (R 4.3.0)\n#>  skimr           2.1.5      2022-12-23 [1] CRAN (R 4.3.0)\n#>  stringi         1.8.3      2023-12-11 [1] CRAN (R 4.3.0)\n#>  stringr         1.5.1      2023-11-14 [1] CRAN (R 4.3.0)\n#>  svglite         2.1.3      2023-12-08 [1] CRAN (R 4.3.0)\n#>  systemfonts     1.0.5      2023-10-09 [1] CRAN (R 4.3.0)\n#>  tibble          3.2.1      2023-03-20 [1] CRAN (R 4.3.0)\n#>  tidyr           1.3.1      2024-01-24 [1] CRAN (R 4.3.2)\n#>  tidyselect      1.2.0      2022-10-10 [1] CRAN (R 4.3.0)\n#>  tzdb            0.4.0      2023-05-12 [1] CRAN (R 4.3.0)\n#>  utf8            1.2.4      2023-10-22 [1] CRAN (R 4.3.0)\n#>  vctrs           0.6.5      2023-12-01 [1] CRAN (R 4.3.2)\n#>  viridisLite     0.4.2      2023-05-02 [1] CRAN (R 4.3.0)\n#>  vroom           1.6.5      2023-12-05 [1] CRAN (R 4.3.0)\n#>  withr           3.0.0      2024-01-16 [1] CRAN (R 4.3.0)\n#>  xfun            0.42       2024-02-08 [1] CRAN (R 4.3.2)\n#>  xml2            1.3.6      2023-12-04 [1] CRAN (R 4.3.0)\n#>  yaml            2.3.8      2023-12-11 [1] CRAN (R 4.3.0)\n#> \n#>  [1] /Library/Frameworks/R.framework/Versions/4.3-x86_64/library\n#>  [2] /Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/library\n#> \n#> ──────────────────────────────────────────────────────────────────────────────\n```\n\n\n:::\n:::\n\n\n\n::::\n:::::\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"site_libs/kePrint-0.0.1/kePrint.js\"></script>\n<link href=\"site_libs/lightable-0.0.1/lightable.css\" rel=\"stylesheet\" />\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}